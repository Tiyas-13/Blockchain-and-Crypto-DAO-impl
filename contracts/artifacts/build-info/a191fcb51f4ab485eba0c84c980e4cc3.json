{
	"id": "a191fcb51f4ab485eba0c84c980e4cc3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ParticipationToken_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Nonces.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC5267.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ShortStrings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/EIP712.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: contracts/ParticipationToken.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n\n\n\n\ncontract ParticipationToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {\n    constructor(address initialOwner)\n        ERC20(\"ParticipationToken\", \"PTK\")\n        Ownable(initialOwner)\n        ERC20Permit(\"ParticipationToken\")\n    {}\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount * (10 ** uint256(decimals())));\n    }\n\n    function transferParticipationToken(address from, address to, uint256 amount, address contractAddress) public virtual returns (bool){\n        _spendAllowance(contractAddress, from, amount * (10 ** uint256(decimals())));\n        _transfer(from, to, amount * (10 ** uint256(decimals())));\n        return true;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ParticipationToken_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":40603:47989  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":40603:47989  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c1996e721deb649f156e7082e3f8197795d0b63471f31405348163451b372d8d64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c1996e721deb649f156e7082e3f8197795d0b63471f31405348163451b372d8d64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP10 PUSH15 0x721DEB649F156E7082E3F8197795D0 0xB6 CALLVALUE PUSH18 0xF31405348163451B372D8D64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "40603:7386:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c1996e721deb649f156e7082e3f8197795d0b63471f31405348163451b372d8d64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP10 PUSH15 0x721DEB649F156E7082E3F8197795D0 0xB6 CALLVALUE PUSH18 0xF31405348163451B372D8D64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "40603:7386:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40603,
									"end": 47989,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1996e721deb649f156e7082e3f8197795d0b63471f31405348163451b372d8d64736f6c63430008180033",
									".code": [
										{
											"begin": 40603,
											"end": 47989,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 47989,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1921,
								"contract": "contracts/ParticipationToken_flattened.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contracts/ParticipationToken_flattened.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2917,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2923,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2925,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2929,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2917,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2923,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2925,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2929,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2917,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2923,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2925,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2929,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1921,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 13,
								"contract": "contracts/ParticipationToken_flattened.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":12045:26959  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":12045:26959  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202093d954abd810e73662a33df48ee51eb10767f3f8e26224684ac03121db68af64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202093d954abd810e73662a33df48ee51eb10767f3f8e26224684ac03121db68af64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SWAP4 0xD9 SLOAD 0xAB 0xD8 LT 0xE7 CALLDATASIZE PUSH3 0xA33DF4 DUP15 0xE5 0x1E 0xB1 SMOD PUSH8 0xF3F8E26224684AC0 BALANCE 0x21 0xDB PUSH9 0xAF64736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "12045:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202093d954abd810e73662a33df48ee51eb10767f3f8e26224684ac03121db68af64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SWAP4 0xD9 SLOAD 0xAB 0xD8 LT 0xE7 CALLDATASIZE PUSH3 0xA33DF4 DUP15 0xE5 0x1E 0xB1 SMOD PUSH8 0xF3F8E26224684AC0 BALANCE 0x21 0xDB PUSH9 0xAF64736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "12045:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12045,
									"end": 26959,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202093d954abd810e73662a33df48ee51eb10767f3f8e26224684ac03121db68af64736f6c63430008180033",
									".code": [
										{
											"begin": 12045,
											"end": 26959,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 26959,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":30519:33754  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":30519:33754  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e52204bd9bb58eb028abc6b29756cffdaa5dcc788b4d85e7d7ee5469e764b2b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e52204bd9bb58eb028abc6b29756cffdaa5dcc788b4d85e7d7ee5469e764b2b64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E MSTORE KECCAK256 0x4B 0xD9 0xBB PC 0xEB MUL DUP11 0xBC PUSH12 0x29756CFFDAA5DCC788B4D85E PUSH30 0x7EE5469E764B2B64736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "30519:3235:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201e52204bd9bb58eb028abc6b29756cffdaa5dcc788b4d85e7d7ee5469e764b2b64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E MSTORE KECCAK256 0x4B 0xD9 0xBB PC 0xEB MUL DUP11 0xBC PUSH12 0x29756CFFDAA5DCC788B4D85E PUSH30 0x7EE5469E764B2B64736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "30519:3235:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30519,
									"end": 33754,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e52204bd9bb58eb028abc6b29756cffdaa5dcc788b4d85e7d7ee5469e764b2b64736f6c63430008180033",
									".code": [
										{
											"begin": 30519,
											"end": 33754,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30519,
											"end": 33754,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "contracts/ParticipationToken_flattened.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2664,
								"contract": "contracts/ParticipationToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ParticipationToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "transferParticipationToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":80743:81428  contract ParticipationToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/ParticipationToken_flattened.sol\":80823:80978  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ParticipationToken_flattened.sol\":78282:78334  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  0x50617274696369706174696f6e546f6b656e0000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":78321:78325  name */\n  dup1\n    /* \"contracts/ParticipationToken_flattened.sol\":36943:37374  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":80916:80928  initialOwner */\n  dup4\n    /* \"contracts/ParticipationToken_flattened.sol\":67673:67786  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  0x50617274696369706174696f6e546f6b656e0000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x50544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":67747:67752  name_ */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":67739:67744  _name */\n  0x03\n    /* \"contracts/ParticipationToken_flattened.sol\":67739:67752  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":67772:67779  symbol_ */\n  dup1\n    /* \"contracts/ParticipationToken_flattened.sol\":67762:67769  _symbol */\n  0x04\n    /* \"contracts/ParticipationToken_flattened.sol\":67762:67779  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":67673:67786  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":60662:60663  0 */\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":60638:60664  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ParticipationToken_flattened.sol\":60638:60650  initialOwner */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":60638:60664  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/ParticipationToken_flattened.sol\":60634:60729  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"contracts/ParticipationToken_flattened.sol\":60715:60716  0 */\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":60687:60718  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ParticipationToken_flattened.sol\":60634:60729  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"contracts/ParticipationToken_flattened.sol\":60738:60770  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"contracts/ParticipationToken_flattened.sol\":60757:60769  initialOwner */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":60738:60756  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"contracts/ParticipationToken_flattened.sol\":60738:60770  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/ParticipationToken_flattened.sol\":60590:60777  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37016:37061  name.toShortStringWithFallback(_nameFallback) */\n  tag_20\n    /* \"contracts/ParticipationToken_flattened.sol\":37047:37060  _nameFallback */\n  0x06\n    /* \"contracts/ParticipationToken_flattened.sol\":37016:37020  name */\n  dup4\n    /* \"contracts/ParticipationToken_flattened.sol\":37016:37046  name.toShortStringWithFallback */\n  shl(0x20, tag_21)\n  swap1\n    /* \"contracts/ParticipationToken_flattened.sol\":37016:37061  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/ParticipationToken_flattened.sol\":37008:37061  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37082:37133  version.toShortStringWithFallback(_versionFallback) */\n  tag_22\n    /* \"contracts/ParticipationToken_flattened.sol\":37116:37132  _versionFallback */\n  0x07\n    /* \"contracts/ParticipationToken_flattened.sol\":37082:37089  version */\n  dup3\n    /* \"contracts/ParticipationToken_flattened.sol\":37082:37115  version.toShortStringWithFallback */\n  shl(0x20, tag_21)\n  swap1\n    /* \"contracts/ParticipationToken_flattened.sol\":37082:37133  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/ParticipationToken_flattened.sol\":37071:37133  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37173:37177  name */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":37157:37179  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/ParticipationToken_flattened.sol\":37143:37179  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37222:37229  version */\n  dup1\n    /* \"contracts/ParticipationToken_flattened.sol\":37206:37231  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/ParticipationToken_flattened.sol\":37189:37231  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37259:37272  block.chainid */\n  chainid\n    /* \"contracts/ParticipationToken_flattened.sol\":37242:37272  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37307:37330  _buildDomainSeparator() */\n  tag_23\n    /* \"contracts/ParticipationToken_flattened.sol\":37307:37328  _buildDomainSeparator */\n  shl(0x20, tag_24)\n    /* \"contracts/ParticipationToken_flattened.sol\":37307:37330  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/ParticipationToken_flattened.sol\":37282:37330  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37362:37366  this */\n  address\n    /* \"contracts/ParticipationToken_flattened.sol\":37340:37367  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":36943:37374  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":78282:78334  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":80823:80978  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":80743:81428  contract ParticipationToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\n  jump(tag_27)\n    /* \"contracts/ParticipationToken_flattened.sol\":62277:62464  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"contracts/ParticipationToken_flattened.sol\":62350:62366  address oldOwner */\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":62369:62375  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ParticipationToken_flattened.sol\":62350:62375  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":62394:62402  newOwner */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":62385:62391  _owner */\n  0x05\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":62385:62402  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":62448:62456  newOwner */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":62417:62457  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ParticipationToken_flattened.sol\":62438:62446  oldOwner */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":62417:62457  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/ParticipationToken_flattened.sol\":62340:62464  {... */\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":62277:62464  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/ParticipationToken_flattened.sol\":9129:9469  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_21:\n    /* \"contracts/ParticipationToken_flattened.sol\":9225:9236  ShortString */\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":9274:9276  32 */\n  0x20\n    /* \"contracts/ParticipationToken_flattened.sol\":9258:9263  value */\n  dup4\n    /* \"contracts/ParticipationToken_flattened.sol\":9252:9271  bytes(value).length */\n  mload\n    /* \"contracts/ParticipationToken_flattened.sol\":9252:9276  bytes(value).length < 32 */\n  lt\n    /* \"contracts/ParticipationToken_flattened.sol\":9248:9463  if (bytes(value).length < 32) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"contracts/ParticipationToken_flattened.sol\":9299:9319  toShortString(value) */\n  tag_31\n    /* \"contracts/ParticipationToken_flattened.sol\":9313:9318  value */\n  dup4\n    /* \"contracts/ParticipationToken_flattened.sol\":9299:9312  toShortString */\n  shl(0x20, tag_32)\n    /* \"contracts/ParticipationToken_flattened.sol\":9299:9319  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/ParticipationToken_flattened.sol\":9292:9319  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_29)\n    /* \"contracts/ParticipationToken_flattened.sol\":9248:9463  if (bytes(value).length < 32) {... */\ntag_30:\n    /* \"contracts/ParticipationToken_flattened.sol\":9391:9396  value */\n  dup3\n    /* \"contracts/ParticipationToken_flattened.sol\":9350:9382  StorageSlot.getStringSlot(store) */\n  tag_34\n    /* \"contracts/ParticipationToken_flattened.sol\":9376:9381  store */\n  dup4\n    /* \"contracts/ParticipationToken_flattened.sol\":9350:9375  StorageSlot.getStringSlot */\n  shl(0x20, tag_35)\n    /* \"contracts/ParticipationToken_flattened.sol\":9350:9382  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"contracts/ParticipationToken_flattened.sol\":9350:9388  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"contracts/ParticipationToken_flattened.sol\":9350:9396  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_36\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_36:\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":7605:7671  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"contracts/ParticipationToken_flattened.sol\":9434:9451  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"contracts/ParticipationToken_flattened.sol\":9410:9452  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":9129:9469  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_29:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ParticipationToken_flattened.sol\":37728:37907  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_24:\n    /* \"contracts/ParticipationToken_flattened.sol\":37783:37790  bytes32 */\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":35694:35789  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/ParticipationToken_flattened.sol\":37841:37852  _hashedName */\n  mload(0xe0)\n    /* \"contracts/ParticipationToken_flattened.sol\":37854:37868  _hashedVersion */\n  mload(0x0100)\n    /* \"contracts/ParticipationToken_flattened.sol\":37870:37883  block.chainid */\n  chainid\n    /* \"contracts/ParticipationToken_flattened.sol\":37893:37897  this */\n  address\n    /* \"contracts/ParticipationToken_flattened.sol\":37819:37899  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_38\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/ParticipationToken_flattened.sol\":37809:37900  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/ParticipationToken_flattened.sol\":37802:37900  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":37728:37907  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/ParticipationToken_flattened.sol\":7923:8209  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_32:\n    /* \"contracts/ParticipationToken_flattened.sol\":7988:7999  ShortString */\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":8011:8028  bytes memory bstr */\n  dup1\n    /* \"contracts/ParticipationToken_flattened.sol\":8037:8040  str */\n  dup3\n    /* \"contracts/ParticipationToken_flattened.sol\":8011:8041  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":8069:8071  31 */\n  0x1f\n    /* \"contracts/ParticipationToken_flattened.sol\":8055:8059  bstr */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":8055:8066  bstr.length */\n  mload\n    /* \"contracts/ParticipationToken_flattened.sol\":8055:8071  bstr.length > 31 */\n  gt\n    /* \"contracts/ParticipationToken_flattened.sol\":8051:8123  if (bstr.length > 31) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"contracts/ParticipationToken_flattened.sol\":8108:8111  str */\n  dup3\n    /* \"contracts/ParticipationToken_flattened.sol\":8094:8112  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ParticipationToken_flattened.sol\":8051:8123  if (bstr.length > 31) {... */\ntag_41:\n    /* \"contracts/ParticipationToken_flattened.sol\":8189:8193  bstr */\n  dup1\n    /* \"contracts/ParticipationToken_flattened.sol\":8189:8200  bstr.length */\n  mload\n    /* \"contracts/ParticipationToken_flattened.sol\":8180:8184  bstr */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":8172:8185  bytes32(bstr) */\n  tag_44\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"contracts/ParticipationToken_flattened.sol\":8164:8186  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"contracts/ParticipationToken_flattened.sol\":8164:8200  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"contracts/ParticipationToken_flattened.sol\":8156:8201  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"contracts/ParticipationToken_flattened.sol\":8132:8202  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":7923:8209  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ParticipationToken_flattened.sol\":5439:5641  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_35:\n    /* \"contracts/ParticipationToken_flattened.sol\":5507:5527  StringSlot storage r */\n  0x00\n    /* \"contracts/ParticipationToken_flattened.sol\":5615:5625  store.slot */\n  dup2\n    /* \"contracts/ParticipationToken_flattened.sol\":5605:5625  r.slot := store.slot */\n  swap1\n  pop\n    /* \"contracts/ParticipationToken_flattened.sol\":5439:5641  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_48:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_50:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_51:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_91\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_50\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_52:\n    /* \"#utility.yul\":641:665   */\n  tag_93\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_51\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_94:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_53:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_96\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_52\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_99\n  tag_48\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":932:1051   */\ntag_98:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_100\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_53\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_54:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_55:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_56:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_57:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_105:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_107\n  tag_56\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1909:1993   */\ntag_106:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_58:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_59:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_60:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_61:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_112\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_60\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2624:2663   */\n  tag_113\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_60\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_62:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_63:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_64:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_117\n    /* \"#utility.yul\":3013:3047   */\n  tag_118\n    /* \"#utility.yul\":3022:3046   */\n  tag_119\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_62\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3013:3047   */\n  tag_63\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2995:3048   */\n  tag_62\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_65:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_66:\n    /* \"#utility.yul\":3251:3290   */\n  tag_122\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_64\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3312:3403   */\n  tag_123\n    /* \"#utility.yul\":3361:3402   */\n  tag_124\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_65\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_61\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_67:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_68:\n    /* \"#utility.yul\":3572:3604   */\n  tag_127\n  tag_67\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3613:3678   */\n  tag_128\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_66\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_69:\n    /* \"#utility.yul\":3750:3870   */\ntag_130:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_133\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_68\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_130)\ntag_132:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_70:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_136\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_58\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4101:4130   */\n  tag_137\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_59\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_138:\n    /* \"#utility.yul\":4328:4408   */\n  tag_139\n    /* \"#utility.yul\":4384:4406   */\n  tag_140\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_59\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_69\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_135:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_71:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_72:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_143\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_71\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_73:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_145\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_72\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_11:\n    /* \"#utility.yul\":5145:5182   */\n  tag_147\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_54\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_149\n  tag_55\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5233:5289   */\ntag_148:\n    /* \"#utility.yul\":5313:5351   */\n  tag_150\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_57\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5398:5465   */\n  tag_151\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_70\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_154:\n    /* \"#utility.yul\":6339:6406   */\n  tag_155\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_73\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_152)\n    /* \"#utility.yul\":5560:6178   */\ntag_153:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_156\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_58\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_157:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_157)\ntag_159:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_161\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_160:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_152:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_74:\n    /* \"#utility.yul\":6516:6540   */\n  tag_163\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_51\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_16:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_165\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_74\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6858   */\ntag_75:\n    /* \"#utility.yul\":6818:6825   */\n  0x00\n    /* \"#utility.yul\":6847:6852   */\n  dup2\n    /* \"#utility.yul\":6836:6852   */\n  swap1\n  pop\n    /* \"#utility.yul\":6781:6858   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6864:6982   */\ntag_76:\n    /* \"#utility.yul\":6951:6975   */\n  tag_168\n    /* \"#utility.yul\":6969:6974   */\n  dup2\n    /* \"#utility.yul\":6951:6975   */\n  tag_75\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6946:6949   */\n  dup3\n    /* \"#utility.yul\":6939:6976   */\n  mstore\n    /* \"#utility.yul\":6864:6982   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6988:7106   */\ntag_77:\n    /* \"#utility.yul\":7075:7099   */\n  tag_170\n    /* \"#utility.yul\":7093:7098   */\n  dup2\n    /* \"#utility.yul\":7075:7099   */\n  tag_62\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7070:7073   */\n  dup3\n    /* \"#utility.yul\":7063:7100   */\n  mstore\n    /* \"#utility.yul\":6988:7106   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7112:7776   */\ntag_39:\n    /* \"#utility.yul\":7317:7321   */\n  0x00\n    /* \"#utility.yul\":7355:7358   */\n  0xa0\n    /* \"#utility.yul\":7344:7353   */\n  dup3\n    /* \"#utility.yul\":7340:7359   */\n  add\n    /* \"#utility.yul\":7332:7359   */\n  swap1\n  pop\n    /* \"#utility.yul\":7369:7440   */\n  tag_172\n    /* \"#utility.yul\":7437:7438   */\n  0x00\n    /* \"#utility.yul\":7426:7435   */\n  dup4\n    /* \"#utility.yul\":7422:7439   */\n  add\n    /* \"#utility.yul\":7413:7419   */\n  dup9\n    /* \"#utility.yul\":7369:7440   */\n  tag_76\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7450:7522   */\n  tag_173\n    /* \"#utility.yul\":7518:7520   */\n  0x20\n    /* \"#utility.yul\":7507:7516   */\n  dup4\n    /* \"#utility.yul\":7503:7521   */\n  add\n    /* \"#utility.yul\":7494:7500   */\n  dup8\n    /* \"#utility.yul\":7450:7522   */\n  tag_76\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7532:7604   */\n  tag_174\n    /* \"#utility.yul\":7600:7602   */\n  0x40\n    /* \"#utility.yul\":7589:7598   */\n  dup4\n    /* \"#utility.yul\":7585:7603   */\n  add\n    /* \"#utility.yul\":7576:7582   */\n  dup7\n    /* \"#utility.yul\":7532:7604   */\n  tag_76\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7614:7686   */\n  tag_175\n    /* \"#utility.yul\":7682:7684   */\n  0x60\n    /* \"#utility.yul\":7671:7680   */\n  dup4\n    /* \"#utility.yul\":7667:7685   */\n  add\n    /* \"#utility.yul\":7658:7664   */\n  dup6\n    /* \"#utility.yul\":7614:7686   */\n  tag_77\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7696:7769   */\n  tag_176\n    /* \"#utility.yul\":7764:7767   */\n  0x80\n    /* \"#utility.yul\":7753:7762   */\n  dup4\n    /* \"#utility.yul\":7749:7768   */\n  add\n    /* \"#utility.yul\":7740:7746   */\n  dup5\n    /* \"#utility.yul\":7696:7769   */\n  tag_74\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7112:7776   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7782:7951   */\ntag_78:\n    /* \"#utility.yul\":7866:7877   */\n  0x00\n    /* \"#utility.yul\":7900:7906   */\n  dup3\n    /* \"#utility.yul\":7895:7898   */\n  dup3\n    /* \"#utility.yul\":7888:7907   */\n  mstore\n    /* \"#utility.yul\":7940:7944   */\n  0x20\n    /* \"#utility.yul\":7935:7938   */\n  dup3\n    /* \"#utility.yul\":7931:7945   */\n  add\n    /* \"#utility.yul\":7916:7945   */\n  swap1\n  pop\n    /* \"#utility.yul\":7782:7951   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7957:8203   */\ntag_79:\n    /* \"#utility.yul\":8038:8039   */\n  0x00\n    /* \"#utility.yul\":8048:8161   */\ntag_179:\n    /* \"#utility.yul\":8062:8068   */\n  dup4\n    /* \"#utility.yul\":8059:8060   */\n  dup2\n    /* \"#utility.yul\":8056:8069   */\n  lt\n    /* \"#utility.yul\":8048:8161   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8147:8148   */\n  dup1\n    /* \"#utility.yul\":8142:8145   */\n  dup3\n    /* \"#utility.yul\":8138:8149   */\n  add\n    /* \"#utility.yul\":8132:8150   */\n  mload\n    /* \"#utility.yul\":8128:8129   */\n  dup2\n    /* \"#utility.yul\":8123:8126   */\n  dup5\n    /* \"#utility.yul\":8119:8130   */\n  add\n    /* \"#utility.yul\":8112:8151   */\n  mstore\n    /* \"#utility.yul\":8084:8086   */\n  0x20\n    /* \"#utility.yul\":8081:8082   */\n  dup2\n    /* \"#utility.yul\":8077:8087   */\n  add\n    /* \"#utility.yul\":8072:8087   */\n  swap1\n  pop\n    /* \"#utility.yul\":8048:8161   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":8195:8196   */\n  0x00\n    /* \"#utility.yul\":8186:8192   */\n  dup5\n    /* \"#utility.yul\":8181:8184   */\n  dup5\n    /* \"#utility.yul\":8177:8193   */\n  add\n    /* \"#utility.yul\":8170:8197   */\n  mstore\n    /* \"#utility.yul\":8019:8203   */\n  pop\n    /* \"#utility.yul\":7957:8203   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8209:8311   */\ntag_80:\n    /* \"#utility.yul\":8250:8256   */\n  0x00\n    /* \"#utility.yul\":8301:8303   */\n  0x1f\n    /* \"#utility.yul\":8297:8304   */\n  not\n    /* \"#utility.yul\":8292:8294   */\n  0x1f\n    /* \"#utility.yul\":8285:8290   */\n  dup4\n    /* \"#utility.yul\":8281:8295   */\n  add\n    /* \"#utility.yul\":8277:8305   */\n  and\n    /* \"#utility.yul\":8267:8305   */\n  swap1\n  pop\n    /* \"#utility.yul\":8209:8311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8317:8694   */\ntag_81:\n    /* \"#utility.yul\":8405:8408   */\n  0x00\n    /* \"#utility.yul\":8433:8472   */\n  tag_184\n    /* \"#utility.yul\":8466:8471   */\n  dup3\n    /* \"#utility.yul\":8433:8472   */\n  tag_54\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8488:8559   */\n  tag_185\n    /* \"#utility.yul\":8552:8558   */\n  dup2\n    /* \"#utility.yul\":8547:8550   */\n  dup6\n    /* \"#utility.yul\":8488:8559   */\n  tag_78\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8481:8559   */\n  swap4\n  pop\n    /* \"#utility.yul\":8568:8633   */\n  tag_186\n    /* \"#utility.yul\":8626:8632   */\n  dup2\n    /* \"#utility.yul\":8621:8624   */\n  dup6\n    /* \"#utility.yul\":8614:8618   */\n  0x20\n    /* \"#utility.yul\":8607:8612   */\n  dup7\n    /* \"#utility.yul\":8603:8619   */\n  add\n    /* \"#utility.yul\":8568:8633   */\n  tag_79\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8658:8687   */\n  tag_187\n    /* \"#utility.yul\":8680:8686   */\n  dup2\n    /* \"#utility.yul\":8658:8687   */\n  tag_80\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8653:8656   */\n  dup5\n    /* \"#utility.yul\":8649:8688   */\n  add\n    /* \"#utility.yul\":8642:8688   */\n  swap2\n  pop\n    /* \"#utility.yul\":8409:8694   */\n  pop\n    /* \"#utility.yul\":8317:8694   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8700:9013   */\ntag_43:\n    /* \"#utility.yul\":8813:8817   */\n  0x00\n    /* \"#utility.yul\":8851:8853   */\n  0x20\n    /* \"#utility.yul\":8840:8849   */\n  dup3\n    /* \"#utility.yul\":8836:8854   */\n  add\n    /* \"#utility.yul\":8828:8854   */\n  swap1\n  pop\n    /* \"#utility.yul\":8900:8909   */\n  dup2\n    /* \"#utility.yul\":8894:8898   */\n  dup2\n    /* \"#utility.yul\":8890:8910   */\n  sub\n    /* \"#utility.yul\":8886:8887   */\n  0x00\n    /* \"#utility.yul\":8875:8884   */\n  dup4\n    /* \"#utility.yul\":8871:8888   */\n  add\n    /* \"#utility.yul\":8864:8911   */\n  mstore\n    /* \"#utility.yul\":8928:9006   */\n  tag_189\n    /* \"#utility.yul\":9001:9005   */\n  dup2\n    /* \"#utility.yul\":8992:8998   */\n  dup5\n    /* \"#utility.yul\":8928:9006   */\n  tag_81\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8920:9006   */\n  swap1\n  pop\n    /* \"#utility.yul\":8700:9013   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9019:9117   */\ntag_82:\n    /* \"#utility.yul\":9070:9076   */\n  0x00\n    /* \"#utility.yul\":9104:9109   */\n  dup2\n    /* \"#utility.yul\":9098:9110   */\n  mload\n    /* \"#utility.yul\":9088:9110   */\n  swap1\n  pop\n    /* \"#utility.yul\":9019:9117   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9123:9239   */\ntag_83:\n    /* \"#utility.yul\":9174:9178   */\n  0x00\n    /* \"#utility.yul\":9197:9200   */\n  dup2\n    /* \"#utility.yul\":9189:9200   */\n  swap1\n  pop\n    /* \"#utility.yul\":9227:9231   */\n  0x20\n    /* \"#utility.yul\":9222:9225   */\n  dup3\n    /* \"#utility.yul\":9218:9232   */\n  add\n    /* \"#utility.yul\":9210:9232   */\n  swap1\n  pop\n    /* \"#utility.yul\":9123:9239   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9245:9399   */\ntag_84:\n    /* \"#utility.yul\":9288:9299   */\n  0x00\n    /* \"#utility.yul\":9324:9353   */\n  tag_193\n    /* \"#utility.yul\":9348:9351   */\n  dup3\n    /* \"#utility.yul\":9342:9352   */\n  mload\n    /* \"#utility.yul\":9324:9353   */\n  tag_75\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9387:9392   */\n  dup1\n    /* \"#utility.yul\":9363:9392   */\n  swap2\n  pop\n    /* \"#utility.yul\":9300:9399   */\n  pop\n    /* \"#utility.yul\":9245:9399   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9405:9999   */\ntag_45:\n    /* \"#utility.yul\":9489:9494   */\n  0x00\n    /* \"#utility.yul\":9520:9558   */\n  tag_195\n    /* \"#utility.yul\":9552:9557   */\n  dup3\n    /* \"#utility.yul\":9520:9558   */\n  tag_82\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9583:9588   */\n  dup3\n    /* \"#utility.yul\":9610:9650   */\n  tag_196\n    /* \"#utility.yul\":9644:9649   */\n  dup5\n    /* \"#utility.yul\":9610:9650   */\n  tag_83\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9598:9650   */\n  swap1\n  pop\n    /* \"#utility.yul\":9669:9704   */\n  tag_197\n    /* \"#utility.yul\":9695:9703   */\n  dup2\n    /* \"#utility.yul\":9669:9704   */\n  tag_84\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9660:9704   */\n  swap3\n  pop\n    /* \"#utility.yul\":9728:9730   */\n  0x20\n    /* \"#utility.yul\":9720:9726   */\n  dup3\n    /* \"#utility.yul\":9717:9731   */\n  lt\n    /* \"#utility.yul\":9714:9992   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":9799:9968   */\n  tag_199\n    /* \"#utility.yul\":9884:9950   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9854:9860   */\n  dup4\n    /* \"#utility.yul\":9850:9852   */\n  0x20\n    /* \"#utility.yul\":9846:9861   */\n  sub\n    /* \"#utility.yul\":9843:9844   */\n  0x08\n    /* \"#utility.yul\":9839:9862   */\n  mul\n    /* \"#utility.yul\":9799:9968   */\n  tag_60\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9776:9781   */\n  dup4\n    /* \"#utility.yul\":9755:9982   */\n  and\n    /* \"#utility.yul\":9746:9982   */\n  swap3\n  pop\n    /* \"#utility.yul\":9714:9992   */\ntag_198:\n    /* \"#utility.yul\":9495:9999   */\n  pop\n  pop\n    /* \"#utility.yul\":9405:9999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ParticipationToken_flattened.sol\":80743:81428  contract ParticipationToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\ntag_27:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2afe76337b531113eeb6984869209602297c0be432194d84882749ead3021a37\")\n  0x00\n  assignImmutable(\"0xa7cd0fec000bc9bc829eee3f19124c6d92f9bf03bc5604d586b7a9d0b7293aeb\")\n  0x00\n  assignImmutable(\"0x5444bf99e2aaa84d0c0adba4902ca441e981a14d987060ddd53a6e4272e74bca\")\n  0x00\n  assignImmutable(\"0xf9ba965def30954c13b9f17655d4bfcf079e819f9cc42b75928cd97e2c9f9020\")\n  0x00\n  assignImmutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n  0x00\n  assignImmutable(\"0x89dda32db2afb3470ad3a855ff08175ef365ece0147067a2a9b89c9351412201\")\n  0x00\n  assignImmutable(\"0x3f9e555adc0bedaea160f26d13d68ea1bde6a5a9af64af415bccce823c8f9ad8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":80743:81428  contract ParticipationToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xabd81ca2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x3644e515\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":67851:67940  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":70070:70256  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":68921:69018  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":70816:71060  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":68779:68861  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":79364:79476  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":80984:81107  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/ParticipationToken_flattened.sol\":80055:80142  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/ParticipationToken_flattened.sol\":69076:69192  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":61658:61759  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/ParticipationToken_flattened.sol\":80458:80616  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/ParticipationToken_flattened.sol\":79114:79257  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":38759:39316  function eip712Domain()... */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":61003:61088  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":68053:68146  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":69387:69565  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":81113:81426  function transferParticipationToken(address from, address to, uint256 amount, address contractAddress) public virtual returns (bool){... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":78388:79060  function permit(... */\n    tag_20:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/ParticipationToken_flattened.sol\":69623:69763  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ParticipationToken_flattened.sol\":61908:62123  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/ParticipationToken_flattened.sol\":67851:67940  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"contracts/ParticipationToken_flattened.sol\":67896:67909  string memory */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":67928:67933  _name */\n      0x03\n        /* \"contracts/ParticipationToken_flattened.sol\":67921:67933  return _name */\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_108\n      jump\t// in\n    tag_109:\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_111\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_110)\n    tag_111:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":67851:67940  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":70070:70256  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"contracts/ParticipationToken_flattened.sol\":70143:70147  bool */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":70159:70172  address owner */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":70175:70187  _msgSender() */\n      tag_114\n        /* \"contracts/ParticipationToken_flattened.sol\":70175:70185  _msgSender */\n      tag_115\n        /* \"contracts/ParticipationToken_flattened.sol\":70175:70187  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/ParticipationToken_flattened.sol\":70159:70187  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":70197:70228  _approve(owner, spender, value) */\n      tag_116\n        /* \"contracts/ParticipationToken_flattened.sol\":70206:70211  owner */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":70213:70220  spender */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":70222:70227  value */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":70197:70205  _approve */\n      tag_117\n        /* \"contracts/ParticipationToken_flattened.sol\":70197:70228  _approve(owner, spender, value) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/ParticipationToken_flattened.sol\":70245:70249  true */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":70238:70249  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":70070:70256  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":68921:69018  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"contracts/ParticipationToken_flattened.sol\":68973:68980  uint256 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":68999:69011  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ParticipationToken_flattened.sol\":68992:69011  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":68921:69018  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":70816:71060  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"contracts/ParticipationToken_flattened.sol\":70903:70907  bool */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":70919:70934  address spender */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":70937:70949  _msgSender() */\n      tag_120\n        /* \"contracts/ParticipationToken_flattened.sol\":70937:70947  _msgSender */\n      tag_115\n        /* \"contracts/ParticipationToken_flattened.sol\":70937:70949  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ParticipationToken_flattened.sol\":70919:70949  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":70959:70996  _spendAllowance(from, spender, value) */\n      tag_121\n        /* \"contracts/ParticipationToken_flattened.sol\":70975:70979  from */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":70981:70988  spender */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":70990:70995  value */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":70959:70974  _spendAllowance */\n      tag_122\n        /* \"contracts/ParticipationToken_flattened.sol\":70959:70996  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ParticipationToken_flattened.sol\":71006:71032  _transfer(from, to, value) */\n      tag_123\n        /* \"contracts/ParticipationToken_flattened.sol\":71016:71020  from */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":71022:71024  to */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":71026:71031  value */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":71006:71015  _transfer */\n      tag_124\n        /* \"contracts/ParticipationToken_flattened.sol\":71006:71032  _transfer(from, to, value) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ParticipationToken_flattened.sol\":71049:71053  true */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":71042:71053  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":70816:71060  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":68779:68861  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"contracts/ParticipationToken_flattened.sol\":68828:68833  uint8 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":68852:68854  18 */\n      0x12\n        /* \"contracts/ParticipationToken_flattened.sol\":68845:68854  return 18 */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":68779:68861  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":79364:79476  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_50:\n        /* \"contracts/ParticipationToken_flattened.sol\":79423:79430  bytes32 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":79449:79469  _domainSeparatorV4() */\n      tag_127\n        /* \"contracts/ParticipationToken_flattened.sol\":79449:79467  _domainSeparatorV4 */\n      tag_128\n        /* \"contracts/ParticipationToken_flattened.sol\":79449:79469  _domainSeparatorV4() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/ParticipationToken_flattened.sol\":79442:79469  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":79364:79476  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":80984:81107  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_55:\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60909  _checkOwner() */\n      tag_130\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60907  _checkOwner */\n      tag_131\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60909  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/ParticipationToken_flattened.sol\":81053:81100  _mint(to, amount * (10 ** uint256(decimals()))) */\n      tag_133\n        /* \"contracts/ParticipationToken_flattened.sol\":81059:81061  to */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":81087:81097  decimals() */\n      tag_134\n        /* \"contracts/ParticipationToken_flattened.sol\":81087:81095  decimals */\n      tag_46\n        /* \"contracts/ParticipationToken_flattened.sol\":81087:81097  decimals() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/ParticipationToken_flattened.sol\":81079:81098  uint256(decimals()) */\n      0xff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":81073:81075  10 */\n      0x0a\n        /* \"contracts/ParticipationToken_flattened.sol\":81073:81098  10 ** uint256(decimals()) */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/ParticipationToken_flattened.sol\":81063:81069  amount */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":81063:81099  amount * (10 ** uint256(decimals())) */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/ParticipationToken_flattened.sol\":81053:81058  _mint */\n      tag_139\n        /* \"contracts/ParticipationToken_flattened.sol\":81053:81100  _mint(to, amount * (10 ** uint256(decimals()))) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/ParticipationToken_flattened.sol\":80984:81107  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":80055:80142  function burn(uint256 value) public virtual {... */\n    tag_59:\n        /* \"contracts/ParticipationToken_flattened.sol\":80109:80135  _burn(_msgSender(), value) */\n      tag_141\n        /* \"contracts/ParticipationToken_flattened.sol\":80115:80127  _msgSender() */\n      tag_142\n        /* \"contracts/ParticipationToken_flattened.sol\":80115:80125  _msgSender */\n      tag_115\n        /* \"contracts/ParticipationToken_flattened.sol\":80115:80127  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ParticipationToken_flattened.sol\":80129:80134  value */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":80109:80114  _burn */\n      tag_143\n        /* \"contracts/ParticipationToken_flattened.sol\":80109:80135  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ParticipationToken_flattened.sol\":80055:80142  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":69076:69192  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"contracts/ParticipationToken_flattened.sol\":69141:69148  uint256 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":69167:69176  _balances */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":69167:69185  _balances[account] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":69177:69184  account */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":69167:69185  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ParticipationToken_flattened.sol\":69160:69185  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":69076:69192  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":61658:61759  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60909  _checkOwner() */\n      tag_146\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60907  _checkOwner */\n      tag_131\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60909  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/ParticipationToken_flattened.sol\":61722:61752  _transferOwnership(address(0)) */\n      tag_148\n        /* \"contracts/ParticipationToken_flattened.sol\":61749:61750  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":61722:61740  _transferOwnership */\n      tag_149\n        /* \"contracts/ParticipationToken_flattened.sol\":61722:61752  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ParticipationToken_flattened.sol\":61658:61759  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":80458:80616  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_69:\n        /* \"contracts/ParticipationToken_flattened.sol\":80533:80578  _spendAllowance(account, _msgSender(), value) */\n      tag_151\n        /* \"contracts/ParticipationToken_flattened.sol\":80549:80556  account */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":80558:80570  _msgSender() */\n      tag_152\n        /* \"contracts/ParticipationToken_flattened.sol\":80558:80568  _msgSender */\n      tag_115\n        /* \"contracts/ParticipationToken_flattened.sol\":80558:80570  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/ParticipationToken_flattened.sol\":80572:80577  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":80533:80548  _spendAllowance */\n      tag_122\n        /* \"contracts/ParticipationToken_flattened.sol\":80533:80578  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/ParticipationToken_flattened.sol\":80588:80609  _burn(account, value) */\n      tag_153\n        /* \"contracts/ParticipationToken_flattened.sol\":80594:80601  account */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":80603:80608  value */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":80588:80593  _burn */\n      tag_143\n        /* \"contracts/ParticipationToken_flattened.sol\":80588:80609  _burn(account, value) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/ParticipationToken_flattened.sol\":80458:80616  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":79114:79257  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_72:\n        /* \"contracts/ParticipationToken_flattened.sol\":79205:79212  uint256 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":79231:79250  super.nonces(owner) */\n      tag_155\n        /* \"contracts/ParticipationToken_flattened.sol\":79244:79249  owner */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":79231:79243  super.nonces */\n      tag_156\n        /* \"contracts/ParticipationToken_flattened.sol\":79231:79250  super.nonces(owner) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/ParticipationToken_flattened.sol\":79224:79250  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":79114:79257  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":38759:39316  function eip712Domain()... */\n    tag_75:\n        /* \"contracts/ParticipationToken_flattened.sol\":38857:38870  bytes1 fields */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":38884:38902  string memory name */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":38916:38937  string memory version */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":38951:38966  uint256 chainId */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":38980:39005  address verifyingContract */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":39019:39031  bytes32 salt */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":39045:39072  uint256[] memory extensions */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":39148:39161  _EIP712Name() */\n      tag_158\n        /* \"contracts/ParticipationToken_flattened.sol\":39148:39159  _EIP712Name */\n      tag_159\n        /* \"contracts/ParticipationToken_flattened.sol\":39148:39161  _EIP712Name() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/ParticipationToken_flattened.sol\":39175:39191  _EIP712Version() */\n      tag_160\n        /* \"contracts/ParticipationToken_flattened.sol\":39175:39189  _EIP712Version */\n      tag_161\n        /* \"contracts/ParticipationToken_flattened.sol\":39175:39191  _EIP712Version() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/ParticipationToken_flattened.sol\":39205:39218  block.chainid */\n      chainid\n        /* \"contracts/ParticipationToken_flattened.sol\":39240:39244  this */\n      address\n        /* \"contracts/ParticipationToken_flattened.sol\":39267:39268  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":39259:39269  bytes32(0) */\n      dup1\n      shl\n        /* \"contracts/ParticipationToken_flattened.sol\":39297:39298  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":39283:39299  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n    tag_162:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_165:\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":39097:39309  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":38759:39316  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":61003:61088  function owner() public view virtual returns (address) {... */\n    tag_79:\n        /* \"contracts/ParticipationToken_flattened.sol\":61049:61056  address */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":61075:61081  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":61068:61081  return _owner */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":61003:61088  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":68053:68146  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"contracts/ParticipationToken_flattened.sol\":68100:68113  string memory */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":68132:68139  _symbol */\n      0x04\n        /* \"contracts/ParticipationToken_flattened.sol\":68125:68139  return _symbol */\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_108\n      jump\t// in\n    tag_168:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_108\n      jump\t// in\n    tag_169:\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_171\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_170)\n    tag_171:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_172:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_172\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":68053:68146  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":69387:69565  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_87:\n        /* \"contracts/ParticipationToken_flattened.sol\":69456:69460  bool */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":69472:69485  address owner */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":69488:69500  _msgSender() */\n      tag_174\n        /* \"contracts/ParticipationToken_flattened.sol\":69488:69498  _msgSender */\n      tag_115\n        /* \"contracts/ParticipationToken_flattened.sol\":69488:69500  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/ParticipationToken_flattened.sol\":69472:69500  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":69510:69537  _transfer(owner, to, value) */\n      tag_175\n        /* \"contracts/ParticipationToken_flattened.sol\":69520:69525  owner */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":69527:69529  to */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":69531:69536  value */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":69510:69519  _transfer */\n      tag_124\n        /* \"contracts/ParticipationToken_flattened.sol\":69510:69537  _transfer(owner, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ParticipationToken_flattened.sol\":69554:69558  true */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":69547:69558  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":69387:69565  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":81113:81426  function transferParticipationToken(address from, address to, uint256 amount, address contractAddress) public virtual returns (bool){... */\n    tag_92:\n        /* \"contracts/ParticipationToken_flattened.sol\":81240:81244  bool */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":81255:81331  _spendAllowance(contractAddress, from, amount * (10 ** uint256(decimals()))) */\n      tag_177\n        /* \"contracts/ParticipationToken_flattened.sol\":81271:81286  contractAddress */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":81288:81292  from */\n      dup7\n        /* \"contracts/ParticipationToken_flattened.sol\":81318:81328  decimals() */\n      tag_178\n        /* \"contracts/ParticipationToken_flattened.sol\":81318:81326  decimals */\n      tag_46\n        /* \"contracts/ParticipationToken_flattened.sol\":81318:81328  decimals() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/ParticipationToken_flattened.sol\":81310:81329  uint256(decimals()) */\n      0xff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":81304:81306  10 */\n      0x0a\n        /* \"contracts/ParticipationToken_flattened.sol\":81304:81329  10 ** uint256(decimals()) */\n      tag_179\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_179:\n        /* \"contracts/ParticipationToken_flattened.sol\":81294:81300  amount */\n      dup7\n        /* \"contracts/ParticipationToken_flattened.sol\":81294:81330  amount * (10 ** uint256(decimals())) */\n      tag_180\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_180:\n        /* \"contracts/ParticipationToken_flattened.sol\":81255:81270  _spendAllowance */\n      tag_122\n        /* \"contracts/ParticipationToken_flattened.sol\":81255:81331  _spendAllowance(contractAddress, from, amount * (10 ** uint256(decimals()))) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/ParticipationToken_flattened.sol\":81341:81398  _transfer(from, to, amount * (10 ** uint256(decimals()))) */\n      tag_181\n        /* \"contracts/ParticipationToken_flattened.sol\":81351:81355  from */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":81357:81359  to */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":81385:81395  decimals() */\n      tag_182\n        /* \"contracts/ParticipationToken_flattened.sol\":81385:81393  decimals */\n      tag_46\n        /* \"contracts/ParticipationToken_flattened.sol\":81385:81395  decimals() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/ParticipationToken_flattened.sol\":81377:81396  uint256(decimals()) */\n      0xff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":81371:81373  10 */\n      0x0a\n        /* \"contracts/ParticipationToken_flattened.sol\":81371:81396  10 ** uint256(decimals()) */\n      tag_183\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_183:\n        /* \"contracts/ParticipationToken_flattened.sol\":81361:81367  amount */\n      dup7\n        /* \"contracts/ParticipationToken_flattened.sol\":81361:81397  amount * (10 ** uint256(decimals())) */\n      tag_184\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_184:\n        /* \"contracts/ParticipationToken_flattened.sol\":81341:81350  _transfer */\n      tag_124\n        /* \"contracts/ParticipationToken_flattened.sol\":81341:81398  _transfer(from, to, amount * (10 ** uint256(decimals()))) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/ParticipationToken_flattened.sol\":81415:81419  true */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":81408:81419  return true */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":81113:81426  function transferParticipationToken(address from, address to, uint256 amount, address contractAddress) public virtual returns (bool){... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":78388:79060  function permit(... */\n    tag_97:\n        /* \"contracts/ParticipationToken_flattened.sol\":78609:78617  deadline */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":78591:78606  block.timestamp */\n      timestamp\n        /* \"contracts/ParticipationToken_flattened.sol\":78591:78617  block.timestamp > deadline */\n      gt\n        /* \"contracts/ParticipationToken_flattened.sol\":78587:78684  if (block.timestamp > deadline) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":78664:78672  deadline */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":78640:78673  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":78587:78684  if (block.timestamp > deadline) {... */\n    tag_186:\n        /* \"contracts/ParticipationToken_flattened.sol\":78694:78712  bytes32 structHash */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":77730:77825  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/ParticipationToken_flattened.sol\":78753:78758  owner */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":78760:78767  spender */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":78769:78774  value */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":78776:78792  _useNonce(owner) */\n      tag_188\n        /* \"contracts/ParticipationToken_flattened.sol\":78786:78791  owner */\n      dup13\n        /* \"contracts/ParticipationToken_flattened.sol\":78776:78785  _useNonce */\n      tag_189\n        /* \"contracts/ParticipationToken_flattened.sol\":78776:78792  _useNonce(owner) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/ParticipationToken_flattened.sol\":78794:78802  deadline */\n      dup10\n        /* \"contracts/ParticipationToken_flattened.sol\":78725:78803  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_190\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ParticipationToken_flattened.sol\":78715:78804  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ParticipationToken_flattened.sol\":78694:78804  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":78815:78827  bytes32 hash */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":78830:78858  _hashTypedDataV4(structHash) */\n      tag_192\n        /* \"contracts/ParticipationToken_flattened.sol\":78847:78857  structHash */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":78830:78846  _hashTypedDataV4 */\n      tag_193\n        /* \"contracts/ParticipationToken_flattened.sol\":78830:78858  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/ParticipationToken_flattened.sol\":78815:78858  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":78869:78883  address signer */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":78886:78914  ECDSA.recover(hash, v, r, s) */\n      tag_194\n        /* \"contracts/ParticipationToken_flattened.sol\":78900:78904  hash */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":78906:78907  v */\n      dup8\n        /* \"contracts/ParticipationToken_flattened.sol\":78909:78910  r */\n      dup8\n        /* \"contracts/ParticipationToken_flattened.sol\":78912:78913  s */\n      dup8\n        /* \"contracts/ParticipationToken_flattened.sol\":78886:78899  ECDSA.recover */\n      tag_195\n        /* \"contracts/ParticipationToken_flattened.sol\":78886:78914  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/ParticipationToken_flattened.sol\":78869:78914  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":78938:78943  owner */\n      dup10\n        /* \"contracts/ParticipationToken_flattened.sol\":78928:78943  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":78928:78934  signer */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":78928:78943  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ParticipationToken_flattened.sol\":78924:79012  if (signer != owner) {... */\n      tag_196\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":78987:78993  signer */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":78995:79000  owner */\n      dup11\n        /* \"contracts/ParticipationToken_flattened.sol\":78966:79001  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":78924:79012  if (signer != owner) {... */\n    tag_196:\n        /* \"contracts/ParticipationToken_flattened.sol\":79022:79053  _approve(owner, spender, value) */\n      tag_199\n        /* \"contracts/ParticipationToken_flattened.sol\":79031:79036  owner */\n      dup11\n        /* \"contracts/ParticipationToken_flattened.sol\":79038:79045  spender */\n      dup11\n        /* \"contracts/ParticipationToken_flattened.sol\":79047:79052  value */\n      dup11\n        /* \"contracts/ParticipationToken_flattened.sol\":79022:79030  _approve */\n      tag_117\n        /* \"contracts/ParticipationToken_flattened.sol\":79022:79053  _approve(owner, spender, value) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/ParticipationToken_flattened.sol\":78577:79060  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":78388:79060  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":69623:69763  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_101:\n        /* \"contracts/ParticipationToken_flattened.sol\":69703:69710  uint256 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":69729:69740  _allowances */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":69729:69747  _allowances[owner] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":69741:69746  owner */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":69729:69747  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ParticipationToken_flattened.sol\":69729:69756  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":69748:69755  spender */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":69729:69756  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ParticipationToken_flattened.sol\":69722:69756  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":69623:69763  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":61908:62123  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60909  _checkOwner() */\n      tag_202\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60907  _checkOwner */\n      tag_131\n        /* \"contracts/ParticipationToken_flattened.sol\":60896:60909  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/ParticipationToken_flattened.sol\":62012:62013  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":61992:62014  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":61992:62000  newOwner */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":61992:62014  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":61988:62079  if (newOwner == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":62065:62066  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":62037:62068  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":61988:62079  if (newOwner == address(0)) {... */\n    tag_204:\n        /* \"contracts/ParticipationToken_flattened.sol\":62088:62116  _transferOwnership(newOwner) */\n      tag_206\n        /* \"contracts/ParticipationToken_flattened.sol\":62107:62115  newOwner */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":62088:62106  _transferOwnership */\n      tag_149\n        /* \"contracts/ParticipationToken_flattened.sol\":62088:62116  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/ParticipationToken_flattened.sol\":61908:62123  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":59081:59177  function _msgSender() internal view virtual returns (address) {... */\n    tag_115:\n        /* \"contracts/ParticipationToken_flattened.sol\":59134:59141  address */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":59160:59170  msg.sender */\n      caller\n        /* \"contracts/ParticipationToken_flattened.sol\":59153:59170  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":59081:59177  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":74766:74894  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_117:\n        /* \"contracts/ParticipationToken_flattened.sol\":74850:74887  _approve(owner, spender, value, true) */\n      tag_209\n        /* \"contracts/ParticipationToken_flattened.sol\":74859:74864  owner */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":74866:74873  spender */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":74875:74880  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":74882:74886  true */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":74850:74858  _approve */\n      tag_210\n        /* \"contracts/ParticipationToken_flattened.sol\":74850:74887  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/ParticipationToken_flattened.sol\":74766:74894  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":76440:76917  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_122:\n        /* \"contracts/ParticipationToken_flattened.sol\":76539:76563  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":76566:76591  allowance(owner, spender) */\n      tag_212\n        /* \"contracts/ParticipationToken_flattened.sol\":76576:76581  owner */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76583:76590  spender */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76566:76575  allowance */\n      tag_101\n        /* \"contracts/ParticipationToken_flattened.sol\":76566:76591  allowance(owner, spender) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/ParticipationToken_flattened.sol\":76539:76591  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":76625:76642  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ParticipationToken_flattened.sol\":76605:76621  currentAllowance */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":76605:76642  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/ParticipationToken_flattened.sol\":76601:76911  if (currentAllowance != type(uint256).max) {... */\n      tag_213\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":76681:76686  value */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":76662:76678  currentAllowance */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":76662:76686  currentAllowance < value */\n      lt\n        /* \"contracts/ParticipationToken_flattened.sol\":76658:76788  if (currentAllowance < value) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":76740:76747  spender */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":76749:76765  currentAllowance */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":76767:76772  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":76713:76773  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":76658:76788  if (currentAllowance < value) {... */\n    tag_214:\n        /* \"contracts/ParticipationToken_flattened.sol\":76829:76886  _approve(owner, spender, currentAllowance - value, false) */\n      tag_217\n        /* \"contracts/ParticipationToken_flattened.sol\":76838:76843  owner */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76845:76852  spender */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76873:76878  value */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76854:76870  currentAllowance */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76854:76878  currentAllowance - value */\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":76880:76885  false */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":76829:76837  _approve */\n      tag_210\n        /* \"contracts/ParticipationToken_flattened.sol\":76829:76886  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/ParticipationToken_flattened.sol\":76601:76911  if (currentAllowance != type(uint256).max) {... */\n    tag_213:\n        /* \"contracts/ParticipationToken_flattened.sol\":76529:76917  {... */\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":76440:76917  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":71433:71733  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_124:\n        /* \"contracts/ParticipationToken_flattened.sol\":71532:71533  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":71516:71534  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":71516:71520  from */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":71516:71534  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":71512:71598  if (from == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":71584:71585  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":71557:71587  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":71512:71598  if (from == address(0)) {... */\n    tag_219:\n        /* \"contracts/ParticipationToken_flattened.sol\":71625:71626  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":71611:71627  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":71611:71613  to */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":71611:71627  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":71607:71693  if (to == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":71679:71680  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":71650:71682  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":71607:71693  if (to == address(0)) {... */\n    tag_221:\n        /* \"contracts/ParticipationToken_flattened.sol\":71702:71726  _update(from, to, value) */\n      tag_223\n        /* \"contracts/ParticipationToken_flattened.sol\":71710:71714  from */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":71716:71718  to */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":71720:71725  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":71702:71709  _update */\n      tag_224\n        /* \"contracts/ParticipationToken_flattened.sol\":71702:71726  _update(from, to, value) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/ParticipationToken_flattened.sol\":71433:71733  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":37460:37722  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_128:\n        /* \"contracts/ParticipationToken_flattened.sol\":37513:37520  bytes32 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":37553:37564  _cachedThis */\n      immutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n        /* \"contracts/ParticipationToken_flattened.sol\":37536:37564  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":37544:37548  this */\n      address\n        /* \"contracts/ParticipationToken_flattened.sol\":37536:37564  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ParticipationToken_flattened.sol\":37536:37599  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":37585:37599  _cachedChainId */\n      immutable(\"0x89dda32db2afb3470ad3a855ff08175ef365ece0147067a2a9b89c9351412201\")\n        /* \"contracts/ParticipationToken_flattened.sol\":37568:37581  block.chainid */\n      chainid\n        /* \"contracts/ParticipationToken_flattened.sol\":37568:37599  block.chainid == _cachedChainId */\n      eq\n        /* \"contracts/ParticipationToken_flattened.sol\":37536:37599  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_226:\n        /* \"contracts/ParticipationToken_flattened.sol\":37532:37716  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":37622:37644  _cachedDomainSeparator */\n      immutable(\"0x3f9e555adc0bedaea160f26d13d68ea1bde6a5a9af64af415bccce823c8f9ad8\")\n        /* \"contracts/ParticipationToken_flattened.sol\":37615:37644  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_225)\n        /* \"contracts/ParticipationToken_flattened.sol\":37532:37716  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_227:\n        /* \"contracts/ParticipationToken_flattened.sol\":37682:37705  _buildDomainSeparator() */\n      tag_229\n        /* \"contracts/ParticipationToken_flattened.sol\":37682:37703  _buildDomainSeparator */\n      tag_230\n        /* \"contracts/ParticipationToken_flattened.sol\":37682:37705  _buildDomainSeparator() */\n      jump\t// in\n    tag_229:\n        /* \"contracts/ParticipationToken_flattened.sol\":37675:37705  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":37460:37722  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_225:\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":61161:61323  function _checkOwner() internal view virtual {... */\n    tag_131:\n        /* \"contracts/ParticipationToken_flattened.sol\":61231:61243  _msgSender() */\n      tag_232\n        /* \"contracts/ParticipationToken_flattened.sol\":61231:61241  _msgSender */\n      tag_115\n        /* \"contracts/ParticipationToken_flattened.sol\":61231:61243  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/ParticipationToken_flattened.sol\":61220:61243  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":61220:61227  owner() */\n      tag_233\n        /* \"contracts/ParticipationToken_flattened.sol\":61220:61225  owner */\n      tag_79\n        /* \"contracts/ParticipationToken_flattened.sol\":61220:61227  owner() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/ParticipationToken_flattened.sol\":61220:61243  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ParticipationToken_flattened.sol\":61216:61317  if (owner() != _msgSender()) {... */\n      tag_234\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":61293:61305  _msgSender() */\n      tag_235\n        /* \"contracts/ParticipationToken_flattened.sol\":61293:61303  _msgSender */\n      tag_115\n        /* \"contracts/ParticipationToken_flattened.sol\":61293:61305  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/ParticipationToken_flattened.sol\":61266:61306  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":61216:61317  if (owner() != _msgSender()) {... */\n    tag_234:\n        /* \"contracts/ParticipationToken_flattened.sol\":61161:61323  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":73498:73706  function _mint(address account, uint256 value) internal {... */\n    tag_139:\n        /* \"contracts/ParticipationToken_flattened.sol\":73587:73588  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":73568:73589  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":73568:73575  account */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":73568:73589  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":73564:73655  if (account == address(0)) {... */\n      tag_238\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":73641:73642  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":73612:73644  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":73564:73655  if (account == address(0)) {... */\n    tag_238:\n        /* \"contracts/ParticipationToken_flattened.sol\":73664:73699  _update(address(0), account, value) */\n      tag_240\n        /* \"contracts/ParticipationToken_flattened.sol\":73680:73681  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":73684:73691  account */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":73693:73698  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":73664:73671  _update */\n      tag_224\n        /* \"contracts/ParticipationToken_flattened.sol\":73664:73699  _update(address(0), account, value) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/ParticipationToken_flattened.sol\":73498:73706  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":74024:74230  function _burn(address account, uint256 value) internal {... */\n    tag_143:\n        /* \"contracts/ParticipationToken_flattened.sol\":74113:74114  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":74094:74115  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":74094:74101  account */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":74094:74115  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":74090:74179  if (account == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":74165:74166  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":74138:74168  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":74090:74179  if (account == address(0)) {... */\n    tag_242:\n        /* \"contracts/ParticipationToken_flattened.sol\":74188:74223  _update(account, address(0), value) */\n      tag_244\n        /* \"contracts/ParticipationToken_flattened.sol\":74196:74203  account */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":74213:74214  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":74217:74222  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":74188:74195  _update */\n      tag_224\n        /* \"contracts/ParticipationToken_flattened.sol\":74188:74223  _update(account, address(0), value) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/ParticipationToken_flattened.sol\":74024:74230  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":62277:62464  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_149:\n        /* \"contracts/ParticipationToken_flattened.sol\":62350:62366  address oldOwner */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":62369:62375  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":62350:62375  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":62394:62402  newOwner */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":62385:62391  _owner */\n      0x05\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":62385:62402  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":62448:62456  newOwner */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":62417:62457  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":62438:62446  oldOwner */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":62417:62457  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ParticipationToken_flattened.sol\":62340:62464  {... */\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":62277:62464  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":559:666  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_156:\n        /* \"contracts/ParticipationToken_flattened.sol\":619:626  uint256 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":645:652  _nonces */\n      0x08\n        /* \"contracts/ParticipationToken_flattened.sol\":645:659  _nonces[owner] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":653:658  owner */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":645:659  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ParticipationToken_flattened.sol\":638:659  return _nonces[owner] */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":559:666  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":39636:39762  function _EIP712Name() internal view returns (string memory) {... */\n    tag_159:\n        /* \"contracts/ParticipationToken_flattened.sol\":39682:39695  string memory */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":39714:39755  _name.toStringWithFallback(_nameFallback) */\n      tag_248\n        /* \"contracts/ParticipationToken_flattened.sol\":39741:39754  _nameFallback */\n      0x06\n        /* \"contracts/ParticipationToken_flattened.sol\":39714:39719  _name */\n      immutable(\"0xa7cd0fec000bc9bc829eee3f19124c6d92f9bf03bc5604d586b7a9d0b7293aeb\")\n        /* \"contracts/ParticipationToken_flattened.sol\":39714:39740  _name.toStringWithFallback */\n      tag_249\n      swap1\n        /* \"contracts/ParticipationToken_flattened.sol\":39714:39755  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/ParticipationToken_flattened.sol\":39707:39755  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":39636:39762  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":40088:40223  function _EIP712Version() internal view returns (string memory) {... */\n    tag_161:\n        /* \"contracts/ParticipationToken_flattened.sol\":40137:40150  string memory */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":40169:40216  _version.toStringWithFallback(_versionFallback) */\n      tag_251\n        /* \"contracts/ParticipationToken_flattened.sol\":40199:40215  _versionFallback */\n      0x07\n        /* \"contracts/ParticipationToken_flattened.sol\":40169:40177  _version */\n      immutable(\"0x2afe76337b531113eeb6984869209602297c0be432194d84882749ead3021a37\")\n        /* \"contracts/ParticipationToken_flattened.sol\":40169:40198  _version.toStringWithFallback */\n      tag_249\n      swap1\n        /* \"contracts/ParticipationToken_flattened.sol\":40169:40216  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"contracts/ParticipationToken_flattened.sol\":40162:40216  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":40088:40223  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":780:1175  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_189:\n        /* \"contracts/ParticipationToken_flattened.sol\":840:847  uint256 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":1142:1149  _nonces */\n      0x08\n        /* \"contracts/ParticipationToken_flattened.sol\":1142:1156  _nonces[owner] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":1150:1155  owner */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":1142:1156  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":1142:1158  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/ParticipationToken_flattened.sol\":1135:1158  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":780:1175  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":38532:38708  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_193:\n        /* \"contracts/ParticipationToken_flattened.sol\":38609:38616  bytes32 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":38635:38701  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_254\n        /* \"contracts/ParticipationToken_flattened.sol\":38668:38688  _domainSeparatorV4() */\n      tag_255\n        /* \"contracts/ParticipationToken_flattened.sol\":38668:38686  _domainSeparatorV4 */\n      tag_128\n        /* \"contracts/ParticipationToken_flattened.sol\":38668:38688  _domainSeparatorV4() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/ParticipationToken_flattened.sol\":38690:38700  structHash */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":38635:38667  MessageHashUtils.toTypedDataHash */\n      tag_256\n        /* \"contracts/ParticipationToken_flattened.sol\":38635:38701  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/ParticipationToken_flattened.sol\":38628:38701  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":38532:38708  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":47062:47322  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_195:\n        /* \"contracts/ParticipationToken_flattened.sol\":47147:47154  address */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":47167:47184  address recovered */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":47186:47204  RecoverError error */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":47206:47222  bytes32 errorArg */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":47226:47251  tryRecover(hash, v, r, s) */\n      tag_258\n        /* \"contracts/ParticipationToken_flattened.sol\":47237:47241  hash */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":47243:47244  v */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":47246:47247  r */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":47249:47250  s */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":47226:47236  tryRecover */\n      tag_259\n        /* \"contracts/ParticipationToken_flattened.sol\":47226:47251  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/ParticipationToken_flattened.sol\":47166:47251  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":47261:47289  _throwError(error, errorArg) */\n      tag_260\n        /* \"contracts/ParticipationToken_flattened.sol\":47273:47278  error */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":47280:47288  errorArg */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":47261:47272  _throwError */\n      tag_261\n        /* \"contracts/ParticipationToken_flattened.sol\":47261:47289  _throwError(error, errorArg) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/ParticipationToken_flattened.sol\":47306:47315  recovered */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":47299:47315  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":47062:47322  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":75726:76158  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_210:\n        /* \"contracts/ParticipationToken_flattened.sol\":75855:75856  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":75838:75857  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":75838:75843  owner */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":75838:75857  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":75834:75923  if (owner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":75909:75910  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":75880:75912  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":75834:75923  if (owner == address(0)) {... */\n    tag_263:\n        /* \"contracts/ParticipationToken_flattened.sol\":75955:75956  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":75936:75957  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":75936:75943  spender */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":75936:75957  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":75932:76022  if (spender == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":76008:76009  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":75980:76011  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":75932:76022  if (spender == address(0)) {... */\n    tag_265:\n        /* \"contracts/ParticipationToken_flattened.sol\":76061:76066  value */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":76031:76042  _allowances */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":76031:76049  _allowances[owner] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":76043:76048  owner */\n      dup7\n        /* \"contracts/ParticipationToken_flattened.sol\":76031:76049  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ParticipationToken_flattened.sol\":76031:76058  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":76050:76057  spender */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":76031:76058  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ParticipationToken_flattened.sol\":76031:76066  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":76080:76089  emitEvent */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":76076:76152  if (emitEvent) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":76126:76133  spender */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":76110:76141  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":76119:76124  owner */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76110:76141  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ParticipationToken_flattened.sol\":76135:76140  value */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":76110:76141  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ParticipationToken_flattened.sol\":76076:76152  if (emitEvent) {... */\n    tag_267:\n        /* \"contracts/ParticipationToken_flattened.sol\":75726:76158  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":72048:73155  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_224:\n        /* \"contracts/ParticipationToken_flattened.sol\":72153:72154  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":72137:72155  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":72137:72141  from */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":72137:72155  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":72133:72673  if (from == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":72289:72294  value */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":72273:72285  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":72273:72294  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":72133:72673  if (from == address(0)) {... */\n      jump(tag_273)\n    tag_270:\n        /* \"contracts/ParticipationToken_flattened.sol\":72325:72344  uint256 fromBalance */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":72347:72356  _balances */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":72347:72362  _balances[from] */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":72357:72361  from */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":72347:72362  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ParticipationToken_flattened.sol\":72325:72362  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":72394:72399  value */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":72380:72391  fromBalance */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":72380:72399  fromBalance < value */\n      lt\n        /* \"contracts/ParticipationToken_flattened.sol\":72376:72491  if (fromBalance < value) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":72451:72455  from */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":72457:72468  fromBalance */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":72470:72475  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":72426:72476  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":72376:72491  if (fromBalance < value) {... */\n    tag_274:\n        /* \"contracts/ParticipationToken_flattened.sol\":72643:72648  value */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":72629:72640  fromBalance */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":72629:72648  fromBalance - value */\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":72611:72620  _balances */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":72611:72626  _balances[from] */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":72621:72625  from */\n      dup7\n        /* \"contracts/ParticipationToken_flattened.sol\":72611:72626  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ParticipationToken_flattened.sol\":72611:72648  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":72311:72673  {... */\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":72133:72673  if (from == address(0)) {... */\n    tag_273:\n        /* \"contracts/ParticipationToken_flattened.sol\":72701:72702  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":72687:72703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":72687:72689  to */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":72687:72703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":72683:73108  if (to == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":72866:72871  value */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":72850:72862  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":72850:72871  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":72683:73108  if (to == address(0)) {... */\n      jump(tag_277)\n    tag_276:\n        /* \"contracts/ParticipationToken_flattened.sol\":73078:73083  value */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":73061:73070  _balances */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":73061:73074  _balances[to] */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":73071:73073  to */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":73061:73074  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":73061:73083  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":72683:73108  if (to == address(0)) {... */\n    tag_277:\n        /* \"contracts/ParticipationToken_flattened.sol\":73138:73140  to */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":73123:73148  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":73132:73136  from */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":73123:73148  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ParticipationToken_flattened.sol\":73142:73147  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":73123:73148  Transfer(from, to, value) */\n      mload(0x40)\n      tag_278\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ParticipationToken_flattened.sol\":72048:73155  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":37728:37907  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_230:\n        /* \"contracts/ParticipationToken_flattened.sol\":37783:37790  bytes32 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":35694:35789  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"contracts/ParticipationToken_flattened.sol\":37841:37852  _hashedName */\n      immutable(\"0xf9ba965def30954c13b9f17655d4bfcf079e819f9cc42b75928cd97e2c9f9020\")\n        /* \"contracts/ParticipationToken_flattened.sol\":37854:37868  _hashedVersion */\n      immutable(\"0x5444bf99e2aaa84d0c0adba4902ca441e981a14d987060ddd53a6e4272e74bca\")\n        /* \"contracts/ParticipationToken_flattened.sol\":37870:37883  block.chainid */\n      chainid\n        /* \"contracts/ParticipationToken_flattened.sol\":37893:37897  this */\n      address\n        /* \"contracts/ParticipationToken_flattened.sol\":37819:37899  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_280\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ParticipationToken_flattened.sol\":37809:37900  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ParticipationToken_flattened.sol\":37802:37900  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":37728:37907  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":9600:9867  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_249:\n        /* \"contracts/ParticipationToken_flattened.sol\":9694:9707  string memory */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":7605:7671  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"contracts/ParticipationToken_flattened.sol\":9752:9769  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"contracts/ParticipationToken_flattened.sol\":9742:9747  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":9723:9769  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"contracts/ParticipationToken_flattened.sol\":9719:9861  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_283\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":9792:9807  toString(value) */\n      tag_284\n        /* \"contracts/ParticipationToken_flattened.sol\":9801:9806  value */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":9792:9800  toString */\n      tag_285\n        /* \"contracts/ParticipationToken_flattened.sol\":9792:9807  toString(value) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/ParticipationToken_flattened.sol\":9785:9807  return toString(value) */\n      swap1\n      pop\n      jump(tag_282)\n        /* \"contracts/ParticipationToken_flattened.sol\":9719:9861  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_283:\n        /* \"contracts/ParticipationToken_flattened.sol\":9845:9850  store */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":9838:9850  return store */\n      dup1\n      sload\n      tag_287\n      swap1\n      tag_108\n      jump\t// in\n    tag_287:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_288\n      swap1\n      tag_108\n      jump\t// in\n    tag_288:\n      dup1\n      iszero\n      tag_289\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_290\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_289)\n    tag_290:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_291:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_291\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_289:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":9600:9867  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_282:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":33351:33752  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_256:\n        /* \"contracts/ParticipationToken_flattened.sol\":33444:33458  bytes32 digest */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":33553:33557  0x40 */\n      0x40\n        /* \"contracts/ParticipationToken_flattened.sol\":33547:33558  mload(0x40) */\n      mload\n        /* \"contracts/ParticipationToken_flattened.sol\":33583:33593  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ParticipationToken_flattened.sol\":33578:33581  ptr */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":33571:33594  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"contracts/ParticipationToken_flattened.sol\":33630:33645  domainSeparator */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":33623:33627  0x02 */\n      0x02\n        /* \"contracts/ParticipationToken_flattened.sol\":33618:33621  ptr */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":33614:33628  add(ptr, 0x02) */\n      add\n        /* \"contracts/ParticipationToken_flattened.sol\":33607:33646  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"contracts/ParticipationToken_flattened.sol\":33682:33692  structHash */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":33675:33679  0x22 */\n      0x22\n        /* \"contracts/ParticipationToken_flattened.sol\":33670:33673  ptr */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":33666:33680  add(ptr, 0x22) */\n      add\n        /* \"contracts/ParticipationToken_flattened.sol\":33659:33693  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"contracts/ParticipationToken_flattened.sol\":33731:33735  0x42 */\n      0x42\n        /* \"contracts/ParticipationToken_flattened.sol\":33726:33729  ptr */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":33716:33736  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"contracts/ParticipationToken_flattened.sol\":33706:33736  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":33522:33746  {... */\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":33351:33752  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":45399:46929  function tryRecover(... */\n    tag_259:\n        /* \"contracts/ParticipationToken_flattened.sol\":45525:45532  address */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":45534:45546  RecoverError */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":45548:45555  bytes32 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":46458:46524  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contracts/ParticipationToken_flattened.sol\":46453:46454  s */\n      dup5\n        /* \"contracts/ParticipationToken_flattened.sol\":46445:46455  uint256(s) */\n      0x00\n      shr\n        /* \"contracts/ParticipationToken_flattened.sol\":46445:46524  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"contracts/ParticipationToken_flattened.sol\":46441:46605  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":46556:46557  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":46560:46590  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contracts/ParticipationToken_flattened.sol\":46592:46593  s */\n      dup6\n        /* \"contracts/ParticipationToken_flattened.sol\":46540:46594  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_293)\n        /* \"contracts/ParticipationToken_flattened.sol\":46441:46605  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_294:\n        /* \"contracts/ParticipationToken_flattened.sol\":46699:46713  address signer */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":46716:46740  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":46726:46730  hash */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":46732:46733  v */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":46735:46736  r */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":46738:46739  s */\n      dup9\n        /* \"contracts/ParticipationToken_flattened.sol\":46716:46740  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_295\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/ParticipationToken_flattened.sol\":46699:46740  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":46772:46773  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":46754:46774  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":46754:46760  signer */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":46754:46774  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":46750:46863  if (signer == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":46806:46807  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":46810:46839  RecoverError.InvalidSignature */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":46849:46850  0 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":46841:46851  bytes32(0) */\n      dup1\n      shl\n        /* \"contracts/ParticipationToken_flattened.sol\":46790:46852  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_293)\n        /* \"contracts/ParticipationToken_flattened.sol\":46750:46863  if (signer == address(0)) {... */\n    tag_299:\n        /* \"contracts/ParticipationToken_flattened.sol\":46881:46887  signer */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":46889:46909  RecoverError.NoError */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":46919:46920  0 */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":46911:46921  bytes32(0) */\n      0x00\n      shl\n        /* \"contracts/ParticipationToken_flattened.sol\":46873:46922  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":45399:46929  function tryRecover(... */\n    tag_293:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":47455:47987  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_261:\n        /* \"contracts/ParticipationToken_flattened.sol\":47550:47570  RecoverError.NoError */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":47541:47570  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_302\n      tag_303\n      jump\t// in\n    tag_302:\n    tag_301:\n        /* \"contracts/ParticipationToken_flattened.sol\":47541:47546  error */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":47541:47570  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_304\n      jumpi\n      tag_305\n      tag_303\n      jump\t// in\n    tag_305:\n    tag_304:\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":47537:47981  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"contracts/ParticipationToken_flattened.sol\":47586:47593  return; */\n      tag_300\n        /* \"contracts/ParticipationToken_flattened.sol\":47537:47981  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":47646:47675  RecoverError.InvalidSignature */\n      0x01\n        /* \"contracts/ParticipationToken_flattened.sol\":47637:47675  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_308\n      jumpi\n      tag_309\n      tag_303\n      jump\t// in\n    tag_309:\n    tag_308:\n        /* \"contracts/ParticipationToken_flattened.sol\":47637:47642  error */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":47637:47675  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_310\n      jumpi\n      tag_311\n      tag_303\n      jump\t// in\n    tag_311:\n    tag_310:\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":47633:47981  if (error == RecoverError.InvalidSignature) {... */\n      tag_312\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":47698:47721  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":47633:47981  if (error == RecoverError.InvalidSignature) {... */\n    tag_312:\n        /* \"contracts/ParticipationToken_flattened.sol\":47751:47786  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"contracts/ParticipationToken_flattened.sol\":47742:47786  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_314\n      jumpi\n      tag_315\n      tag_303\n      jump\t// in\n    tag_315:\n    tag_314:\n        /* \"contracts/ParticipationToken_flattened.sol\":47742:47747  error */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":47742:47786  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_316\n      jumpi\n      tag_317\n      tag_303\n      jump\t// in\n    tag_317:\n    tag_316:\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":47738:47981  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_318\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":47845:47853  errorArg */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":47837:47854  uint256(errorArg) */\n      0x00\n      shr\n        /* \"contracts/ParticipationToken_flattened.sol\":47809:47855  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":47738:47981  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_318:\n        /* \"contracts/ParticipationToken_flattened.sol\":47885:47915  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contracts/ParticipationToken_flattened.sol\":47876:47915  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_321\n      jumpi\n      tag_322\n      tag_303\n      jump\t// in\n    tag_322:\n    tag_321:\n        /* \"contracts/ParticipationToken_flattened.sol\":47876:47881  error */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":47876:47915  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_323\n      jumpi\n      tag_324\n      tag_303\n      jump\t// in\n    tag_324:\n    tag_323:\n      sub\n        /* \"contracts/ParticipationToken_flattened.sol\":47872:47981  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_325\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":47961:47969  errorArg */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":47938:47970  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":47872:47981  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_325:\n        /* \"contracts/ParticipationToken_flattened.sol\":47455:47987  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_300:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":8293:8698  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_285:\n        /* \"contracts/ParticipationToken_flattened.sol\":8352:8365  string memory */\n      0x60\n        /* \"contracts/ParticipationToken_flattened.sol\":8377:8388  uint256 len */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":8391:8407  byteLength(sstr) */\n      tag_328\n        /* \"contracts/ParticipationToken_flattened.sol\":8402:8406  sstr */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":8391:8401  byteLength */\n      tag_329\n        /* \"contracts/ParticipationToken_flattened.sol\":8391:8407  byteLength(sstr) */\n      jump\t// in\n    tag_328:\n        /* \"contracts/ParticipationToken_flattened.sol\":8377:8407  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":8495:8512  string memory str */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":8526:8528  32 */\n      0x20\n        /* \"contracts/ParticipationToken_flattened.sol\":8515:8529  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_330\n      jumpi\n      tag_331\n      tag_164\n      jump\t// in\n    tag_331:\n    tag_330:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_332\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_332:\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":8495:8529  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":8617:8620  len */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":8612:8615  str */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":8605:8621  mstore(str, len) */\n      mstore\n        /* \"contracts/ParticipationToken_flattened.sol\":8657:8661  sstr */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":8650:8654  0x20 */\n      0x20\n        /* \"contracts/ParticipationToken_flattened.sol\":8645:8648  str */\n      dup3\n        /* \"contracts/ParticipationToken_flattened.sol\":8641:8655  add(str, 0x20) */\n      add\n        /* \"contracts/ParticipationToken_flattened.sol\":8634:8662  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"contracts/ParticipationToken_flattened.sol\":8688:8691  str */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":8681:8691  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":8293:8698  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ParticipationToken_flattened.sol\":8770:9015  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_329:\n        /* \"contracts/ParticipationToken_flattened.sol\":8831:8838  uint256 */\n      0x00\n        /* \"contracts/ParticipationToken_flattened.sol\":8850:8864  uint256 result */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":8903:8907  0xFF */\n      0xff\n        /* \"contracts/ParticipationToken_flattened.sol\":8894:8898  sstr */\n      dup4\n        /* \"contracts/ParticipationToken_flattened.sol\":8867:8900  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"contracts/ParticipationToken_flattened.sol\":8867:8907  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"contracts/ParticipationToken_flattened.sol\":8850:8907  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":8930:8932  31 */\n      0x1f\n        /* \"contracts/ParticipationToken_flattened.sol\":8921:8927  result */\n      dup2\n        /* \"contracts/ParticipationToken_flattened.sol\":8921:8932  result > 31 */\n      gt\n        /* \"contracts/ParticipationToken_flattened.sol\":8917:8986  if (result > 31) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"contracts/ParticipationToken_flattened.sol\":8955:8975  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ParticipationToken_flattened.sol\":8917:8986  if (result > 31) {... */\n    tag_334:\n        /* \"contracts/ParticipationToken_flattened.sol\":9002:9008  result */\n      dup1\n        /* \"contracts/ParticipationToken_flattened.sol\":8995:9008  return result */\n      swap2\n      pop\n      pop\n        /* \"contracts/ParticipationToken_flattened.sol\":8770:9015  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_335:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_336:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_337:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_380:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_380)\n    tag_382:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_338:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_339:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_385\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_335\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":818:889   */\n      tag_386\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_336\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_387\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_337\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":988:1017   */\n      tag_388\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_338\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_29:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_390\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_339\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_341:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_343:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_344:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_396\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_343\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_345:\n        /* \"#utility.yul\":1983:2007   */\n      tag_398\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_344\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_399:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_346:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_401\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_345\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_347:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_348:\n        /* \"#utility.yul\":2339:2363   */\n      tag_404\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_347\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_405:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_349:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_407\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_348\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_32:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_410\n      tag_341\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2632:2751   */\n    tag_409:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_411\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_346\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_412\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_349\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_350:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_351:\n        /* \"#utility.yul\":3196:3217   */\n      tag_415\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_350\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_35:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_417\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_351\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_352:\n        /* \"#utility.yul\":3533:3557   */\n      tag_419\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_347\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_39:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_421\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_352\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_42:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_424\n      tag_341\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3908:4027   */\n    tag_423:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_425\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_346\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_426\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_346\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_427\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_349\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_353:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_354:\n        /* \"#utility.yul\":4598:4620   */\n      tag_430\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_353\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_48:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_432\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_354\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_355:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_356:\n        /* \"#utility.yul\":5023:5047   */\n      tag_435\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_355\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_52:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_437\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_356\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_58:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_440\n      tag_341\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5364:5483   */\n    tag_439:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_441\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_349\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5952   */\n    tag_62:\n        /* \"#utility.yul\":5682:5688   */\n      0x00\n        /* \"#utility.yul\":5731:5733   */\n      0x20\n        /* \"#utility.yul\":5719:5728   */\n      dup3\n        /* \"#utility.yul\":5710:5717   */\n      dup5\n        /* \"#utility.yul\":5706:5729   */\n      sub\n        /* \"#utility.yul\":5702:5734   */\n      slt\n        /* \"#utility.yul\":5699:5818   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":5737:5816   */\n      tag_444\n      tag_341\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5699:5818   */\n    tag_443:\n        /* \"#utility.yul\":5857:5858   */\n      0x00\n        /* \"#utility.yul\":5882:5935   */\n      tag_445\n        /* \"#utility.yul\":5927:5934   */\n      dup5\n        /* \"#utility.yul\":5918:5924   */\n      dup3\n        /* \"#utility.yul\":5907:5916   */\n      dup6\n        /* \"#utility.yul\":5903:5925   */\n      add\n        /* \"#utility.yul\":5882:5935   */\n      tag_346\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5872:5935   */\n      swap2\n      pop\n        /* \"#utility.yul\":5828:5945   */\n      pop\n        /* \"#utility.yul\":5623:5952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5958:6107   */\n    tag_357:\n        /* \"#utility.yul\":5994:6001   */\n      0x00\n        /* \"#utility.yul\":6034:6100   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6027:6032   */\n      dup3\n        /* \"#utility.yul\":6023:6101   */\n      and\n        /* \"#utility.yul\":6012:6101   */\n      swap1\n      pop\n        /* \"#utility.yul\":5958:6107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6113:6228   */\n    tag_358:\n        /* \"#utility.yul\":6198:6221   */\n      tag_448\n        /* \"#utility.yul\":6215:6220   */\n      dup2\n        /* \"#utility.yul\":6198:6221   */\n      tag_357\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":6193:6196   */\n      dup3\n        /* \"#utility.yul\":6186:6222   */\n      mstore\n        /* \"#utility.yul\":6113:6228   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6234:6352   */\n    tag_359:\n        /* \"#utility.yul\":6321:6345   */\n      tag_450\n        /* \"#utility.yul\":6339:6344   */\n      dup2\n        /* \"#utility.yul\":6321:6345   */\n      tag_344\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6316:6319   */\n      dup3\n        /* \"#utility.yul\":6309:6346   */\n      mstore\n        /* \"#utility.yul\":6234:6352   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6358:6472   */\n    tag_360:\n        /* \"#utility.yul\":6425:6431   */\n      0x00\n        /* \"#utility.yul\":6459:6464   */\n      dup2\n        /* \"#utility.yul\":6453:6465   */\n      mload\n        /* \"#utility.yul\":6443:6465   */\n      swap1\n      pop\n        /* \"#utility.yul\":6358:6472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6662   */\n    tag_361:\n        /* \"#utility.yul\":6577:6588   */\n      0x00\n        /* \"#utility.yul\":6611:6617   */\n      dup3\n        /* \"#utility.yul\":6606:6609   */\n      dup3\n        /* \"#utility.yul\":6599:6618   */\n      mstore\n        /* \"#utility.yul\":6651:6655   */\n      0x20\n        /* \"#utility.yul\":6646:6649   */\n      dup3\n        /* \"#utility.yul\":6642:6656   */\n      add\n        /* \"#utility.yul\":6627:6656   */\n      swap1\n      pop\n        /* \"#utility.yul\":6478:6662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6668:6800   */\n    tag_362:\n        /* \"#utility.yul\":6735:6739   */\n      0x00\n        /* \"#utility.yul\":6758:6761   */\n      dup2\n        /* \"#utility.yul\":6750:6761   */\n      swap1\n      pop\n        /* \"#utility.yul\":6788:6792   */\n      0x20\n        /* \"#utility.yul\":6783:6786   */\n      dup3\n        /* \"#utility.yul\":6779:6793   */\n      add\n        /* \"#utility.yul\":6771:6793   */\n      swap1\n      pop\n        /* \"#utility.yul\":6668:6800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:6914   */\n    tag_363:\n        /* \"#utility.yul\":6883:6907   */\n      tag_455\n        /* \"#utility.yul\":6901:6906   */\n      dup2\n        /* \"#utility.yul\":6883:6907   */\n      tag_347\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6878:6881   */\n      dup3\n        /* \"#utility.yul\":6871:6908   */\n      mstore\n        /* \"#utility.yul\":6806:6914   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6920:7099   */\n    tag_364:\n        /* \"#utility.yul\":6989:6999   */\n      0x00\n        /* \"#utility.yul\":7010:7056   */\n      tag_457\n        /* \"#utility.yul\":7052:7055   */\n      dup4\n        /* \"#utility.yul\":7044:7050   */\n      dup4\n        /* \"#utility.yul\":7010:7056   */\n      tag_363\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":7088:7092   */\n      0x20\n        /* \"#utility.yul\":7083:7086   */\n      dup4\n        /* \"#utility.yul\":7079:7093   */\n      add\n        /* \"#utility.yul\":7065:7093   */\n      swap1\n      pop\n        /* \"#utility.yul\":6920:7099   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7105:7218   */\n    tag_365:\n        /* \"#utility.yul\":7175:7179   */\n      0x00\n        /* \"#utility.yul\":7207:7211   */\n      0x20\n        /* \"#utility.yul\":7202:7205   */\n      dup3\n        /* \"#utility.yul\":7198:7212   */\n      add\n        /* \"#utility.yul\":7190:7212   */\n      swap1\n      pop\n        /* \"#utility.yul\":7105:7218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7254:7986   */\n    tag_366:\n        /* \"#utility.yul\":7373:7376   */\n      0x00\n        /* \"#utility.yul\":7402:7456   */\n      tag_460\n        /* \"#utility.yul\":7450:7455   */\n      dup3\n        /* \"#utility.yul\":7402:7456   */\n      tag_360\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7472:7558   */\n      tag_461\n        /* \"#utility.yul\":7551:7557   */\n      dup2\n        /* \"#utility.yul\":7546:7549   */\n      dup6\n        /* \"#utility.yul\":7472:7558   */\n      tag_361\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7465:7558   */\n      swap4\n      pop\n        /* \"#utility.yul\":7582:7638   */\n      tag_462\n        /* \"#utility.yul\":7632:7637   */\n      dup4\n        /* \"#utility.yul\":7582:7638   */\n      tag_362\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7661:7668   */\n      dup1\n        /* \"#utility.yul\":7692:7693   */\n      0x00\n        /* \"#utility.yul\":7677:7961   */\n    tag_463:\n        /* \"#utility.yul\":7702:7708   */\n      dup4\n        /* \"#utility.yul\":7699:7700   */\n      dup2\n        /* \"#utility.yul\":7696:7709   */\n      lt\n        /* \"#utility.yul\":7677:7961   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":7778:7784   */\n      dup2\n        /* \"#utility.yul\":7772:7785   */\n      mload\n        /* \"#utility.yul\":7805:7868   */\n      tag_466\n        /* \"#utility.yul\":7864:7867   */\n      dup9\n        /* \"#utility.yul\":7849:7862   */\n      dup3\n        /* \"#utility.yul\":7805:7868   */\n      tag_364\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7798:7868   */\n      swap8\n      pop\n        /* \"#utility.yul\":7891:7951   */\n      tag_467\n        /* \"#utility.yul\":7944:7950   */\n      dup4\n        /* \"#utility.yul\":7891:7951   */\n      tag_365\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7881:7951   */\n      swap3\n      pop\n        /* \"#utility.yul\":7737:7961   */\n      pop\n        /* \"#utility.yul\":7724:7725   */\n      0x01\n        /* \"#utility.yul\":7721:7722   */\n      dup2\n        /* \"#utility.yul\":7717:7726   */\n      add\n        /* \"#utility.yul\":7712:7726   */\n      swap1\n      pop\n        /* \"#utility.yul\":7677:7961   */\n      jump(tag_463)\n    tag_465:\n        /* \"#utility.yul\":7681:7695   */\n      pop\n        /* \"#utility.yul\":7977:7980   */\n      dup6\n        /* \"#utility.yul\":7970:7980   */\n      swap4\n      pop\n        /* \"#utility.yul\":7378:7986   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7254:7986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7992:9207   */\n    tag_77:\n        /* \"#utility.yul\":8341:8345   */\n      0x00\n        /* \"#utility.yul\":8379:8382   */\n      0xe0\n        /* \"#utility.yul\":8368:8377   */\n      dup3\n        /* \"#utility.yul\":8364:8383   */\n      add\n        /* \"#utility.yul\":8356:8383   */\n      swap1\n      pop\n        /* \"#utility.yul\":8393:8462   */\n      tag_469\n        /* \"#utility.yul\":8459:8460   */\n      0x00\n        /* \"#utility.yul\":8448:8457   */\n      dup4\n        /* \"#utility.yul\":8444:8461   */\n      add\n        /* \"#utility.yul\":8435:8441   */\n      dup11\n        /* \"#utility.yul\":8393:8462   */\n      tag_358\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":8509:8518   */\n      dup2\n        /* \"#utility.yul\":8503:8507   */\n      dup2\n        /* \"#utility.yul\":8499:8519   */\n      sub\n        /* \"#utility.yul\":8494:8496   */\n      0x20\n        /* \"#utility.yul\":8483:8492   */\n      dup4\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8472:8520   */\n      mstore\n        /* \"#utility.yul\":8537:8615   */\n      tag_470\n        /* \"#utility.yul\":8610:8614   */\n      dup2\n        /* \"#utility.yul\":8601:8607   */\n      dup10\n        /* \"#utility.yul\":8537:8615   */\n      tag_339\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":8529:8615   */\n      swap1\n      pop\n        /* \"#utility.yul\":8662:8671   */\n      dup2\n        /* \"#utility.yul\":8656:8660   */\n      dup2\n        /* \"#utility.yul\":8652:8672   */\n      sub\n        /* \"#utility.yul\":8647:8649   */\n      0x40\n        /* \"#utility.yul\":8636:8645   */\n      dup4\n        /* \"#utility.yul\":8632:8650   */\n      add\n        /* \"#utility.yul\":8625:8673   */\n      mstore\n        /* \"#utility.yul\":8690:8768   */\n      tag_471\n        /* \"#utility.yul\":8763:8767   */\n      dup2\n        /* \"#utility.yul\":8754:8760   */\n      dup9\n        /* \"#utility.yul\":8690:8768   */\n      tag_339\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8682:8768   */\n      swap1\n      pop\n        /* \"#utility.yul\":8778:8850   */\n      tag_472\n        /* \"#utility.yul\":8846:8848   */\n      0x60\n        /* \"#utility.yul\":8835:8844   */\n      dup4\n        /* \"#utility.yul\":8831:8849   */\n      add\n        /* \"#utility.yul\":8822:8828   */\n      dup8\n        /* \"#utility.yul\":8778:8850   */\n      tag_352\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8860:8933   */\n      tag_473\n        /* \"#utility.yul\":8928:8931   */\n      0x80\n        /* \"#utility.yul\":8917:8926   */\n      dup4\n        /* \"#utility.yul\":8913:8932   */\n      add\n        /* \"#utility.yul\":8904:8910   */\n      dup7\n        /* \"#utility.yul\":8860:8933   */\n      tag_359\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8943:9016   */\n      tag_474\n        /* \"#utility.yul\":9011:9014   */\n      0xa0\n        /* \"#utility.yul\":9000:9009   */\n      dup4\n        /* \"#utility.yul\":8996:9015   */\n      add\n        /* \"#utility.yul\":8987:8993   */\n      dup6\n        /* \"#utility.yul\":8943:9016   */\n      tag_356\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9064:9073   */\n      dup2\n        /* \"#utility.yul\":9058:9062   */\n      dup2\n        /* \"#utility.yul\":9054:9074   */\n      sub\n        /* \"#utility.yul\":9048:9051   */\n      0xc0\n        /* \"#utility.yul\":9037:9046   */\n      dup4\n        /* \"#utility.yul\":9033:9052   */\n      add\n        /* \"#utility.yul\":9026:9075   */\n      mstore\n        /* \"#utility.yul\":9092:9200   */\n      tag_475\n        /* \"#utility.yul\":9195:9199   */\n      dup2\n        /* \"#utility.yul\":9186:9192   */\n      dup5\n        /* \"#utility.yul\":9092:9200   */\n      tag_366\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9084:9200   */\n      swap1\n      pop\n        /* \"#utility.yul\":7992:9207   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9213:9435   */\n    tag_81:\n        /* \"#utility.yul\":9306:9310   */\n      0x00\n        /* \"#utility.yul\":9344:9346   */\n      0x20\n        /* \"#utility.yul\":9333:9342   */\n      dup3\n        /* \"#utility.yul\":9329:9347   */\n      add\n        /* \"#utility.yul\":9321:9347   */\n      swap1\n      pop\n        /* \"#utility.yul\":9357:9428   */\n      tag_477\n        /* \"#utility.yul\":9425:9426   */\n      0x00\n        /* \"#utility.yul\":9414:9423   */\n      dup4\n        /* \"#utility.yul\":9410:9427   */\n      add\n        /* \"#utility.yul\":9401:9407   */\n      dup5\n        /* \"#utility.yul\":9357:9428   */\n      tag_359\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":9213:9435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9441:10206   */\n    tag_91:\n        /* \"#utility.yul\":9527:9533   */\n      0x00\n        /* \"#utility.yul\":9535:9541   */\n      dup1\n        /* \"#utility.yul\":9543:9549   */\n      0x00\n        /* \"#utility.yul\":9551:9557   */\n      dup1\n        /* \"#utility.yul\":9600:9603   */\n      0x80\n        /* \"#utility.yul\":9588:9597   */\n      dup6\n        /* \"#utility.yul\":9579:9586   */\n      dup8\n        /* \"#utility.yul\":9575:9598   */\n      sub\n        /* \"#utility.yul\":9571:9604   */\n      slt\n        /* \"#utility.yul\":9568:9688   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":9607:9686   */\n      tag_480\n      tag_341\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9568:9688   */\n    tag_479:\n        /* \"#utility.yul\":9727:9728   */\n      0x00\n        /* \"#utility.yul\":9752:9805   */\n      tag_481\n        /* \"#utility.yul\":9797:9804   */\n      dup8\n        /* \"#utility.yul\":9788:9794   */\n      dup3\n        /* \"#utility.yul\":9777:9786   */\n      dup9\n        /* \"#utility.yul\":9773:9795   */\n      add\n        /* \"#utility.yul\":9752:9805   */\n      tag_346\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9742:9805   */\n      swap5\n      pop\n        /* \"#utility.yul\":9698:9815   */\n      pop\n        /* \"#utility.yul\":9854:9856   */\n      0x20\n        /* \"#utility.yul\":9880:9933   */\n      tag_482\n        /* \"#utility.yul\":9925:9932   */\n      dup8\n        /* \"#utility.yul\":9916:9922   */\n      dup3\n        /* \"#utility.yul\":9905:9914   */\n      dup9\n        /* \"#utility.yul\":9901:9923   */\n      add\n        /* \"#utility.yul\":9880:9933   */\n      tag_346\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9870:9933   */\n      swap4\n      pop\n        /* \"#utility.yul\":9825:9943   */\n      pop\n        /* \"#utility.yul\":9982:9984   */\n      0x40\n        /* \"#utility.yul\":10008:10061   */\n      tag_483\n        /* \"#utility.yul\":10053:10060   */\n      dup8\n        /* \"#utility.yul\":10044:10050   */\n      dup3\n        /* \"#utility.yul\":10033:10042   */\n      dup9\n        /* \"#utility.yul\":10029:10051   */\n      add\n        /* \"#utility.yul\":10008:10061   */\n      tag_349\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":9998:10061   */\n      swap3\n      pop\n        /* \"#utility.yul\":9953:10071   */\n      pop\n        /* \"#utility.yul\":10110:10112   */\n      0x60\n        /* \"#utility.yul\":10136:10189   */\n      tag_484\n        /* \"#utility.yul\":10181:10188   */\n      dup8\n        /* \"#utility.yul\":10172:10178   */\n      dup3\n        /* \"#utility.yul\":10161:10170   */\n      dup9\n        /* \"#utility.yul\":10157:10179   */\n      add\n        /* \"#utility.yul\":10136:10189   */\n      tag_346\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10126:10189   */\n      swap2\n      pop\n        /* \"#utility.yul\":10081:10199   */\n      pop\n        /* \"#utility.yul\":9441:10206   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10212:10330   */\n    tag_367:\n        /* \"#utility.yul\":10283:10305   */\n      tag_486\n        /* \"#utility.yul\":10299:10304   */\n      dup2\n        /* \"#utility.yul\":10283:10305   */\n      tag_353\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10276:10281   */\n      dup2\n        /* \"#utility.yul\":10273:10306   */\n      eq\n        /* \"#utility.yul\":10263:10324   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":10320:10321   */\n      0x00\n        /* \"#utility.yul\":10317:10318   */\n      dup1\n        /* \"#utility.yul\":10310:10322   */\n      revert\n        /* \"#utility.yul\":10263:10324   */\n    tag_487:\n        /* \"#utility.yul\":10212:10330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10336:10471   */\n    tag_368:\n        /* \"#utility.yul\":10380:10385   */\n      0x00\n        /* \"#utility.yul\":10418:10424   */\n      dup2\n        /* \"#utility.yul\":10405:10425   */\n      calldataload\n        /* \"#utility.yul\":10396:10425   */\n      swap1\n      pop\n        /* \"#utility.yul\":10434:10465   */\n      tag_489\n        /* \"#utility.yul\":10459:10464   */\n      dup2\n        /* \"#utility.yul\":10434:10465   */\n      tag_367\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10336:10471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10477:10599   */\n    tag_369:\n        /* \"#utility.yul\":10550:10574   */\n      tag_491\n        /* \"#utility.yul\":10568:10573   */\n      dup2\n        /* \"#utility.yul\":10550:10574   */\n      tag_355\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10543:10548   */\n      dup2\n        /* \"#utility.yul\":10540:10575   */\n      eq\n        /* \"#utility.yul\":10530:10593   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":10589:10590   */\n      0x00\n        /* \"#utility.yul\":10586:10587   */\n      dup1\n        /* \"#utility.yul\":10579:10591   */\n      revert\n        /* \"#utility.yul\":10530:10593   */\n    tag_492:\n        /* \"#utility.yul\":10477:10599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10605:10744   */\n    tag_370:\n        /* \"#utility.yul\":10651:10656   */\n      0x00\n        /* \"#utility.yul\":10689:10695   */\n      dup2\n        /* \"#utility.yul\":10676:10696   */\n      calldataload\n        /* \"#utility.yul\":10667:10696   */\n      swap1\n      pop\n        /* \"#utility.yul\":10705:10738   */\n      tag_494\n        /* \"#utility.yul\":10732:10737   */\n      dup2\n        /* \"#utility.yul\":10705:10738   */\n      tag_369\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10605:10744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11949   */\n    tag_96:\n        /* \"#utility.yul\":10861:10867   */\n      0x00\n        /* \"#utility.yul\":10869:10875   */\n      dup1\n        /* \"#utility.yul\":10877:10883   */\n      0x00\n        /* \"#utility.yul\":10885:10891   */\n      dup1\n        /* \"#utility.yul\":10893:10899   */\n      0x00\n        /* \"#utility.yul\":10901:10907   */\n      dup1\n        /* \"#utility.yul\":10909:10915   */\n      0x00\n        /* \"#utility.yul\":10958:10961   */\n      0xe0\n        /* \"#utility.yul\":10946:10955   */\n      dup9\n        /* \"#utility.yul\":10937:10944   */\n      dup11\n        /* \"#utility.yul\":10933:10956   */\n      sub\n        /* \"#utility.yul\":10929:10962   */\n      slt\n        /* \"#utility.yul\":10926:11046   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":10965:11044   */\n      tag_497\n      tag_341\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10926:11046   */\n    tag_496:\n        /* \"#utility.yul\":11085:11086   */\n      0x00\n        /* \"#utility.yul\":11110:11163   */\n      tag_498\n        /* \"#utility.yul\":11155:11162   */\n      dup11\n        /* \"#utility.yul\":11146:11152   */\n      dup3\n        /* \"#utility.yul\":11135:11144   */\n      dup12\n        /* \"#utility.yul\":11131:11153   */\n      add\n        /* \"#utility.yul\":11110:11163   */\n      tag_346\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11100:11163   */\n      swap8\n      pop\n        /* \"#utility.yul\":11056:11173   */\n      pop\n        /* \"#utility.yul\":11212:11214   */\n      0x20\n        /* \"#utility.yul\":11238:11291   */\n      tag_499\n        /* \"#utility.yul\":11283:11290   */\n      dup11\n        /* \"#utility.yul\":11274:11280   */\n      dup3\n        /* \"#utility.yul\":11263:11272   */\n      dup12\n        /* \"#utility.yul\":11259:11281   */\n      add\n        /* \"#utility.yul\":11238:11291   */\n      tag_346\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11228:11291   */\n      swap7\n      pop\n        /* \"#utility.yul\":11183:11301   */\n      pop\n        /* \"#utility.yul\":11340:11342   */\n      0x40\n        /* \"#utility.yul\":11366:11419   */\n      tag_500\n        /* \"#utility.yul\":11411:11418   */\n      dup11\n        /* \"#utility.yul\":11402:11408   */\n      dup3\n        /* \"#utility.yul\":11391:11400   */\n      dup12\n        /* \"#utility.yul\":11387:11409   */\n      add\n        /* \"#utility.yul\":11366:11419   */\n      tag_349\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11356:11419   */\n      swap6\n      pop\n        /* \"#utility.yul\":11311:11429   */\n      pop\n        /* \"#utility.yul\":11468:11470   */\n      0x60\n        /* \"#utility.yul\":11494:11547   */\n      tag_501\n        /* \"#utility.yul\":11539:11546   */\n      dup11\n        /* \"#utility.yul\":11530:11536   */\n      dup3\n        /* \"#utility.yul\":11519:11528   */\n      dup12\n        /* \"#utility.yul\":11515:11537   */\n      add\n        /* \"#utility.yul\":11494:11547   */\n      tag_349\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11484:11547   */\n      swap5\n      pop\n        /* \"#utility.yul\":11439:11557   */\n      pop\n        /* \"#utility.yul\":11596:11599   */\n      0x80\n        /* \"#utility.yul\":11623:11674   */\n      tag_502\n        /* \"#utility.yul\":11666:11673   */\n      dup11\n        /* \"#utility.yul\":11657:11663   */\n      dup3\n        /* \"#utility.yul\":11646:11655   */\n      dup12\n        /* \"#utility.yul\":11642:11664   */\n      add\n        /* \"#utility.yul\":11623:11674   */\n      tag_368\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11613:11674   */\n      swap4\n      pop\n        /* \"#utility.yul\":11567:11684   */\n      pop\n        /* \"#utility.yul\":11723:11726   */\n      0xa0\n        /* \"#utility.yul\":11750:11803   */\n      tag_503\n        /* \"#utility.yul\":11795:11802   */\n      dup11\n        /* \"#utility.yul\":11786:11792   */\n      dup3\n        /* \"#utility.yul\":11775:11784   */\n      dup12\n        /* \"#utility.yul\":11771:11793   */\n      add\n        /* \"#utility.yul\":11750:11803   */\n      tag_370\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11740:11803   */\n      swap3\n      pop\n        /* \"#utility.yul\":11694:11813   */\n      pop\n        /* \"#utility.yul\":11852:11855   */\n      0xc0\n        /* \"#utility.yul\":11879:11932   */\n      tag_504\n        /* \"#utility.yul\":11924:11931   */\n      dup11\n        /* \"#utility.yul\":11915:11921   */\n      dup3\n        /* \"#utility.yul\":11904:11913   */\n      dup12\n        /* \"#utility.yul\":11900:11922   */\n      add\n        /* \"#utility.yul\":11879:11932   */\n      tag_370\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11869:11932   */\n      swap2\n      pop\n        /* \"#utility.yul\":11823:11942   */\n      pop\n        /* \"#utility.yul\":10750:11949   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11955:12429   */\n    tag_100:\n        /* \"#utility.yul\":12023:12029   */\n      0x00\n        /* \"#utility.yul\":12031:12037   */\n      dup1\n        /* \"#utility.yul\":12080:12082   */\n      0x40\n        /* \"#utility.yul\":12068:12077   */\n      dup4\n        /* \"#utility.yul\":12059:12066   */\n      dup6\n        /* \"#utility.yul\":12055:12078   */\n      sub\n        /* \"#utility.yul\":12051:12083   */\n      slt\n        /* \"#utility.yul\":12048:12167   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":12086:12165   */\n      tag_507\n      tag_341\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":12048:12167   */\n    tag_506:\n        /* \"#utility.yul\":12206:12207   */\n      0x00\n        /* \"#utility.yul\":12231:12284   */\n      tag_508\n        /* \"#utility.yul\":12276:12283   */\n      dup6\n        /* \"#utility.yul\":12267:12273   */\n      dup3\n        /* \"#utility.yul\":12256:12265   */\n      dup7\n        /* \"#utility.yul\":12252:12274   */\n      add\n        /* \"#utility.yul\":12231:12284   */\n      tag_346\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12221:12284   */\n      swap3\n      pop\n        /* \"#utility.yul\":12177:12294   */\n      pop\n        /* \"#utility.yul\":12333:12335   */\n      0x20\n        /* \"#utility.yul\":12359:12412   */\n      tag_509\n        /* \"#utility.yul\":12404:12411   */\n      dup6\n        /* \"#utility.yul\":12395:12401   */\n      dup3\n        /* \"#utility.yul\":12384:12393   */\n      dup7\n        /* \"#utility.yul\":12380:12402   */\n      add\n        /* \"#utility.yul\":12359:12412   */\n      tag_346\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12349:12412   */\n      swap2\n      pop\n        /* \"#utility.yul\":12304:12422   */\n      pop\n        /* \"#utility.yul\":11955:12429   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12435:12615   */\n    tag_371:\n        /* \"#utility.yul\":12483:12560   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12480:12481   */\n      0x00\n        /* \"#utility.yul\":12473:12561   */\n      mstore\n        /* \"#utility.yul\":12580:12584   */\n      0x22\n        /* \"#utility.yul\":12577:12578   */\n      0x04\n        /* \"#utility.yul\":12570:12585   */\n      mstore\n        /* \"#utility.yul\":12604:12608   */\n      0x24\n        /* \"#utility.yul\":12601:12602   */\n      0x00\n        /* \"#utility.yul\":12594:12609   */\n      revert\n        /* \"#utility.yul\":12621:12941   */\n    tag_108:\n        /* \"#utility.yul\":12665:12671   */\n      0x00\n        /* \"#utility.yul\":12702:12703   */\n      0x02\n        /* \"#utility.yul\":12696:12700   */\n      dup3\n        /* \"#utility.yul\":12692:12704   */\n      div\n        /* \"#utility.yul\":12682:12704   */\n      swap1\n      pop\n        /* \"#utility.yul\":12749:12750   */\n      0x01\n        /* \"#utility.yul\":12743:12747   */\n      dup3\n        /* \"#utility.yul\":12739:12751   */\n      and\n        /* \"#utility.yul\":12770:12788   */\n      dup1\n        /* \"#utility.yul\":12760:12841   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":12826:12830   */\n      0x7f\n        /* \"#utility.yul\":12818:12824   */\n      dup3\n        /* \"#utility.yul\":12814:12831   */\n      and\n        /* \"#utility.yul\":12804:12831   */\n      swap2\n      pop\n        /* \"#utility.yul\":12760:12841   */\n    tag_512:\n        /* \"#utility.yul\":12888:12890   */\n      0x20\n        /* \"#utility.yul\":12880:12886   */\n      dup3\n        /* \"#utility.yul\":12877:12891   */\n      lt\n        /* \"#utility.yul\":12857:12875   */\n      dup2\n        /* \"#utility.yul\":12854:12892   */\n      sub\n        /* \"#utility.yul\":12851:12935   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":12907:12925   */\n      tag_514\n      tag_371\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12851:12935   */\n    tag_513:\n        /* \"#utility.yul\":12672:12941   */\n      pop\n        /* \"#utility.yul\":12621:12941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12947:13127   */\n    tag_372:\n        /* \"#utility.yul\":12995:13072   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12992:12993   */\n      0x00\n        /* \"#utility.yul\":12985:13073   */\n      mstore\n        /* \"#utility.yul\":13092:13096   */\n      0x11\n        /* \"#utility.yul\":13089:13090   */\n      0x04\n        /* \"#utility.yul\":13082:13097   */\n      mstore\n        /* \"#utility.yul\":13116:13120   */\n      0x24\n        /* \"#utility.yul\":13113:13114   */\n      0x00\n        /* \"#utility.yul\":13106:13121   */\n      revert\n        /* \"#utility.yul\":13133:13235   */\n    tag_373:\n        /* \"#utility.yul\":13175:13183   */\n      0x00\n        /* \"#utility.yul\":13222:13227   */\n      dup2\n        /* \"#utility.yul\":13219:13220   */\n      0x01\n        /* \"#utility.yul\":13215:13228   */\n      shr\n        /* \"#utility.yul\":13194:13228   */\n      swap1\n      pop\n        /* \"#utility.yul\":13133:13235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13241:14089   */\n    tag_374:\n        /* \"#utility.yul\":13302:13307   */\n      0x00\n        /* \"#utility.yul\":13309:13313   */\n      dup1\n        /* \"#utility.yul\":13333:13339   */\n      dup3\n        /* \"#utility.yul\":13324:13339   */\n      swap2\n      pop\n        /* \"#utility.yul\":13357:13362   */\n      dup4\n        /* \"#utility.yul\":13348:13362   */\n      swap1\n      pop\n        /* \"#utility.yul\":13371:14083   */\n    tag_518:\n        /* \"#utility.yul\":13392:13393   */\n      0x01\n        /* \"#utility.yul\":13382:13390   */\n      dup6\n        /* \"#utility.yul\":13379:13394   */\n      gt\n        /* \"#utility.yul\":13371:14083   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":13487:13491   */\n      dup1\n        /* \"#utility.yul\":13482:13485   */\n      dup7\n        /* \"#utility.yul\":13478:13492   */\n      div\n        /* \"#utility.yul\":13472:13476   */\n      dup2\n        /* \"#utility.yul\":13469:13493   */\n      gt\n        /* \"#utility.yul\":13466:13516   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":13496:13514   */\n      tag_522\n      tag_372\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13466:13516   */\n    tag_521:\n        /* \"#utility.yul\":13546:13547   */\n      0x01\n        /* \"#utility.yul\":13536:13544   */\n      dup6\n        /* \"#utility.yul\":13532:13548   */\n      and\n        /* \"#utility.yul\":13529:13980   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":13961:13965   */\n      dup1\n        /* \"#utility.yul\":13954:13959   */\n      dup3\n        /* \"#utility.yul\":13950:13966   */\n      mul\n        /* \"#utility.yul\":13941:13966   */\n      swap2\n      pop\n        /* \"#utility.yul\":13529:13980   */\n    tag_523:\n        /* \"#utility.yul\":14011:14015   */\n      dup1\n        /* \"#utility.yul\":14005:14009   */\n      dup2\n        /* \"#utility.yul\":14001:14016   */\n      mul\n        /* \"#utility.yul\":13993:14016   */\n      swap1\n      pop\n        /* \"#utility.yul\":14041:14073   */\n      tag_524\n        /* \"#utility.yul\":14064:14072   */\n      dup6\n        /* \"#utility.yul\":14041:14073   */\n      tag_373\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14029:14073   */\n      swap5\n      pop\n        /* \"#utility.yul\":13371:14083   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":13241:14089   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14095:15168   */\n    tag_375:\n        /* \"#utility.yul\":14149:14154   */\n      0x00\n        /* \"#utility.yul\":14340:14348   */\n      dup3\n        /* \"#utility.yul\":14330:14370   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":14361:14362   */\n      0x01\n        /* \"#utility.yul\":14352:14362   */\n      swap1\n      pop\n        /* \"#utility.yul\":14363:14368   */\n      jump(tag_525)\n        /* \"#utility.yul\":14330:14370   */\n    tag_526:\n        /* \"#utility.yul\":14389:14393   */\n      dup2\n        /* \"#utility.yul\":14379:14415   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":14406:14407   */\n      0x00\n        /* \"#utility.yul\":14397:14407   */\n      swap1\n      pop\n        /* \"#utility.yul\":14408:14413   */\n      jump(tag_525)\n        /* \"#utility.yul\":14379:14415   */\n    tag_527:\n        /* \"#utility.yul\":14475:14479   */\n      dup2\n        /* \"#utility.yul\":14523:14524   */\n      0x01\n        /* \"#utility.yul\":14518:14545   */\n      dup2\n      eq\n      tag_529\n      jumpi\n        /* \"#utility.yul\":14559:14560   */\n      0x02\n        /* \"#utility.yul\":14554:14745   */\n      dup2\n      eq\n      tag_530\n      jumpi\n        /* \"#utility.yul\":14468:14745   */\n      jump(tag_528)\n        /* \"#utility.yul\":14518:14545   */\n    tag_529:\n        /* \"#utility.yul\":14536:14537   */\n      0x01\n        /* \"#utility.yul\":14527:14537   */\n      swap2\n      pop\n        /* \"#utility.yul\":14538:14543   */\n      pop\n      jump(tag_525)\n        /* \"#utility.yul\":14554:14745   */\n    tag_530:\n        /* \"#utility.yul\":14599:14602   */\n      0xff\n        /* \"#utility.yul\":14589:14597   */\n      dup5\n        /* \"#utility.yul\":14586:14603   */\n      gt\n        /* \"#utility.yul\":14583:14626   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":14606:14624   */\n      tag_532\n      tag_372\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14583:14626   */\n    tag_531:\n        /* \"#utility.yul\":14655:14663   */\n      dup4\n        /* \"#utility.yul\":14652:14653   */\n      0x02\n        /* \"#utility.yul\":14648:14664   */\n      exp\n        /* \"#utility.yul\":14639:14664   */\n      swap2\n      pop\n        /* \"#utility.yul\":14690:14693   */\n      dup5\n        /* \"#utility.yul\":14683:14688   */\n      dup3\n        /* \"#utility.yul\":14680:14694   */\n      gt\n        /* \"#utility.yul\":14677:14717   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":14697:14715   */\n      tag_534\n      tag_372\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":14677:14717   */\n    tag_533:\n        /* \"#utility.yul\":14730:14735   */\n      pop\n      jump(tag_525)\n        /* \"#utility.yul\":14468:14745   */\n    tag_528:\n      pop\n        /* \"#utility.yul\":14854:14856   */\n      0x20\n        /* \"#utility.yul\":14844:14852   */\n      dup4\n        /* \"#utility.yul\":14841:14857   */\n      lt\n        /* \"#utility.yul\":14835:14838   */\n      0x0133\n        /* \"#utility.yul\":14829:14833   */\n      dup4\n        /* \"#utility.yul\":14826:14839   */\n      lt\n        /* \"#utility.yul\":14822:14858   */\n      and\n        /* \"#utility.yul\":14804:14806   */\n      0x4e\n        /* \"#utility.yul\":14794:14802   */\n      dup5\n        /* \"#utility.yul\":14791:14807   */\n      lt\n        /* \"#utility.yul\":14786:14788   */\n      0x0b\n        /* \"#utility.yul\":14780:14784   */\n      dup5\n        /* \"#utility.yul\":14777:14789   */\n      lt\n        /* \"#utility.yul\":14773:14808   */\n      and\n        /* \"#utility.yul\":14757:14868   */\n      or\n        /* \"#utility.yul\":14754:15000   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":14910:14918   */\n      dup3\n        /* \"#utility.yul\":14904:14908   */\n      dup3\n        /* \"#utility.yul\":14900:14919   */\n      exp\n        /* \"#utility.yul\":14891:14919   */\n      swap1\n      pop\n        /* \"#utility.yul\":14945:14948   */\n      dup4\n        /* \"#utility.yul\":14938:14943   */\n      dup2\n        /* \"#utility.yul\":14935:14949   */\n      gt\n        /* \"#utility.yul\":14932:14972   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":14952:14970   */\n      tag_537\n      tag_372\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14932:14972   */\n    tag_536:\n        /* \"#utility.yul\":14985:14990   */\n      jump(tag_525)\n        /* \"#utility.yul\":14754:15000   */\n    tag_535:\n        /* \"#utility.yul\":15025:15067   */\n      tag_538\n        /* \"#utility.yul\":15063:15066   */\n      dup5\n        /* \"#utility.yul\":15053:15061   */\n      dup5\n        /* \"#utility.yul\":15047:15051   */\n      dup5\n        /* \"#utility.yul\":15044:15045   */\n      0x01\n        /* \"#utility.yul\":15025:15067   */\n      tag_374\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15010:15067   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":15099:15103   */\n      dup2\n        /* \"#utility.yul\":15094:15097   */\n      dup5\n        /* \"#utility.yul\":15090:15104   */\n      div\n        /* \"#utility.yul\":15083:15088   */\n      dup2\n        /* \"#utility.yul\":15080:15105   */\n      gt\n        /* \"#utility.yul\":15077:15128   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":15108:15126   */\n      tag_540\n      tag_372\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":15077:15128   */\n    tag_539:\n        /* \"#utility.yul\":15157:15161   */\n      dup2\n        /* \"#utility.yul\":15150:15155   */\n      dup2\n        /* \"#utility.yul\":15146:15162   */\n      mul\n        /* \"#utility.yul\":15137:15162   */\n      swap1\n      pop\n        /* \"#utility.yul\":14095:15168   */\n    tag_525:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15174:15459   */\n    tag_136:\n        /* \"#utility.yul\":15234:15239   */\n      0x00\n        /* \"#utility.yul\":15258:15281   */\n      tag_542\n        /* \"#utility.yul\":15276:15280   */\n      dup3\n        /* \"#utility.yul\":15258:15281   */\n      tag_347\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15250:15281   */\n      swap2\n      pop\n        /* \"#utility.yul\":15302:15329   */\n      tag_543\n        /* \"#utility.yul\":15320:15328   */\n      dup4\n        /* \"#utility.yul\":15302:15329   */\n      tag_347\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":15290:15329   */\n      swap3\n      pop\n        /* \"#utility.yul\":15348:15452   */\n      tag_544\n        /* \"#utility.yul\":15385:15451   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15375:15383   */\n      dup5\n        /* \"#utility.yul\":15369:15373   */\n      dup5\n        /* \"#utility.yul\":15348:15452   */\n      tag_375\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15339:15452   */\n      swap1\n      pop\n        /* \"#utility.yul\":15174:15459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15465:15875   */\n    tag_138:\n        /* \"#utility.yul\":15505:15512   */\n      0x00\n        /* \"#utility.yul\":15528:15548   */\n      tag_546\n        /* \"#utility.yul\":15546:15547   */\n      dup3\n        /* \"#utility.yul\":15528:15548   */\n      tag_347\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":15523:15548   */\n      swap2\n      pop\n        /* \"#utility.yul\":15562:15582   */\n      tag_547\n        /* \"#utility.yul\":15580:15581   */\n      dup4\n        /* \"#utility.yul\":15562:15582   */\n      tag_347\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":15557:15582   */\n      swap3\n      pop\n        /* \"#utility.yul\":15617:15618   */\n      dup3\n        /* \"#utility.yul\":15614:15615   */\n      dup3\n        /* \"#utility.yul\":15610:15619   */\n      mul\n        /* \"#utility.yul\":15639:15669   */\n      tag_548\n        /* \"#utility.yul\":15657:15668   */\n      dup2\n        /* \"#utility.yul\":15639:15669   */\n      tag_347\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15628:15669   */\n      swap2\n      pop\n        /* \"#utility.yul\":15818:15819   */\n      dup3\n        /* \"#utility.yul\":15809:15816   */\n      dup3\n        /* \"#utility.yul\":15805:15820   */\n      div\n        /* \"#utility.yul\":15802:15803   */\n      dup5\n        /* \"#utility.yul\":15799:15821   */\n      eq\n        /* \"#utility.yul\":15779:15780   */\n      dup4\n        /* \"#utility.yul\":15772:15781   */\n      iszero\n        /* \"#utility.yul\":15752:15835   */\n      or\n        /* \"#utility.yul\":15729:15868   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":15848:15866   */\n      tag_550\n      tag_372\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15729:15868   */\n    tag_549:\n        /* \"#utility.yul\":15513:15875   */\n      pop\n        /* \"#utility.yul\":15465:15875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15881:16061   */\n    tag_164:\n        /* \"#utility.yul\":15929:16006   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15926:15927   */\n      0x00\n        /* \"#utility.yul\":15919:16007   */\n      mstore\n        /* \"#utility.yul\":16026:16030   */\n      0x41\n        /* \"#utility.yul\":16023:16024   */\n      0x04\n        /* \"#utility.yul\":16016:16031   */\n      mstore\n        /* \"#utility.yul\":16050:16054   */\n      0x24\n        /* \"#utility.yul\":16047:16048   */\n      0x00\n        /* \"#utility.yul\":16040:16055   */\n      revert\n        /* \"#utility.yul\":16067:16842   */\n    tag_191:\n        /* \"#utility.yul\":16300:16304   */\n      0x00\n        /* \"#utility.yul\":16338:16341   */\n      0xc0\n        /* \"#utility.yul\":16327:16336   */\n      dup3\n        /* \"#utility.yul\":16323:16342   */\n      add\n        /* \"#utility.yul\":16315:16342   */\n      swap1\n      pop\n        /* \"#utility.yul\":16352:16423   */\n      tag_553\n        /* \"#utility.yul\":16420:16421   */\n      0x00\n        /* \"#utility.yul\":16409:16418   */\n      dup4\n        /* \"#utility.yul\":16405:16422   */\n      add\n        /* \"#utility.yul\":16396:16402   */\n      dup10\n        /* \"#utility.yul\":16352:16423   */\n      tag_356\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":16433:16505   */\n      tag_554\n        /* \"#utility.yul\":16501:16503   */\n      0x20\n        /* \"#utility.yul\":16490:16499   */\n      dup4\n        /* \"#utility.yul\":16486:16504   */\n      add\n        /* \"#utility.yul\":16477:16483   */\n      dup9\n        /* \"#utility.yul\":16433:16505   */\n      tag_359\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":16515:16587   */\n      tag_555\n        /* \"#utility.yul\":16583:16585   */\n      0x40\n        /* \"#utility.yul\":16572:16581   */\n      dup4\n        /* \"#utility.yul\":16568:16586   */\n      add\n        /* \"#utility.yul\":16559:16565   */\n      dup8\n        /* \"#utility.yul\":16515:16587   */\n      tag_359\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":16597:16669   */\n      tag_556\n        /* \"#utility.yul\":16665:16667   */\n      0x60\n        /* \"#utility.yul\":16654:16663   */\n      dup4\n        /* \"#utility.yul\":16650:16668   */\n      add\n        /* \"#utility.yul\":16641:16647   */\n      dup7\n        /* \"#utility.yul\":16597:16669   */\n      tag_352\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":16679:16752   */\n      tag_557\n        /* \"#utility.yul\":16747:16750   */\n      0x80\n        /* \"#utility.yul\":16736:16745   */\n      dup4\n        /* \"#utility.yul\":16732:16751   */\n      add\n        /* \"#utility.yul\":16723:16729   */\n      dup6\n        /* \"#utility.yul\":16679:16752   */\n      tag_352\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":16762:16835   */\n      tag_558\n        /* \"#utility.yul\":16830:16833   */\n      0xa0\n        /* \"#utility.yul\":16819:16828   */\n      dup4\n        /* \"#utility.yul\":16815:16834   */\n      add\n        /* \"#utility.yul\":16806:16812   */\n      dup5\n        /* \"#utility.yul\":16762:16835   */\n      tag_352\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":16067:16842   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16848:17180   */\n    tag_198:\n        /* \"#utility.yul\":16969:16973   */\n      0x00\n        /* \"#utility.yul\":17007:17009   */\n      0x40\n        /* \"#utility.yul\":16996:17005   */\n      dup3\n        /* \"#utility.yul\":16992:17010   */\n      add\n        /* \"#utility.yul\":16984:17010   */\n      swap1\n      pop\n        /* \"#utility.yul\":17020:17091   */\n      tag_560\n        /* \"#utility.yul\":17088:17089   */\n      0x00\n        /* \"#utility.yul\":17077:17086   */\n      dup4\n        /* \"#utility.yul\":17073:17090   */\n      add\n        /* \"#utility.yul\":17064:17070   */\n      dup6\n        /* \"#utility.yul\":17020:17091   */\n      tag_359\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":17101:17173   */\n      tag_561\n        /* \"#utility.yul\":17169:17171   */\n      0x20\n        /* \"#utility.yul\":17158:17167   */\n      dup4\n        /* \"#utility.yul\":17154:17172   */\n      add\n        /* \"#utility.yul\":17145:17151   */\n      dup5\n        /* \"#utility.yul\":17101:17173   */\n      tag_359\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16848:17180   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17186:17628   */\n    tag_216:\n        /* \"#utility.yul\":17335:17339   */\n      0x00\n        /* \"#utility.yul\":17373:17375   */\n      0x60\n        /* \"#utility.yul\":17362:17371   */\n      dup3\n        /* \"#utility.yul\":17358:17376   */\n      add\n        /* \"#utility.yul\":17350:17376   */\n      swap1\n      pop\n        /* \"#utility.yul\":17386:17457   */\n      tag_563\n        /* \"#utility.yul\":17454:17455   */\n      0x00\n        /* \"#utility.yul\":17443:17452   */\n      dup4\n        /* \"#utility.yul\":17439:17456   */\n      add\n        /* \"#utility.yul\":17430:17436   */\n      dup7\n        /* \"#utility.yul\":17386:17457   */\n      tag_359\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":17467:17539   */\n      tag_564\n        /* \"#utility.yul\":17535:17537   */\n      0x20\n        /* \"#utility.yul\":17524:17533   */\n      dup4\n        /* \"#utility.yul\":17520:17538   */\n      add\n        /* \"#utility.yul\":17511:17517   */\n      dup6\n        /* \"#utility.yul\":17467:17539   */\n      tag_352\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":17549:17621   */\n      tag_565\n        /* \"#utility.yul\":17617:17619   */\n      0x40\n        /* \"#utility.yul\":17606:17615   */\n      dup4\n        /* \"#utility.yul\":17602:17620   */\n      add\n        /* \"#utility.yul\":17593:17599   */\n      dup5\n        /* \"#utility.yul\":17549:17621   */\n      tag_352\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":17186:17628   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17634:17825   */\n    tag_272:\n        /* \"#utility.yul\":17674:17677   */\n      0x00\n        /* \"#utility.yul\":17693:17713   */\n      tag_567\n        /* \"#utility.yul\":17711:17712   */\n      dup3\n        /* \"#utility.yul\":17693:17713   */\n      tag_347\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":17688:17713   */\n      swap2\n      pop\n        /* \"#utility.yul\":17727:17747   */\n      tag_568\n        /* \"#utility.yul\":17745:17746   */\n      dup4\n        /* \"#utility.yul\":17727:17747   */\n      tag_347\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17722:17747   */\n      swap3\n      pop\n        /* \"#utility.yul\":17770:17771   */\n      dup3\n        /* \"#utility.yul\":17767:17768   */\n      dup3\n        /* \"#utility.yul\":17763:17772   */\n      add\n        /* \"#utility.yul\":17756:17772   */\n      swap1\n      pop\n        /* \"#utility.yul\":17791:17794   */\n      dup1\n        /* \"#utility.yul\":17788:17789   */\n      dup3\n        /* \"#utility.yul\":17785:17795   */\n      gt\n        /* \"#utility.yul\":17782:17818   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":17798:17816   */\n      tag_570\n      tag_372\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":17782:17818   */\n    tag_569:\n        /* \"#utility.yul\":17634:17825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17831:18495   */\n    tag_281:\n        /* \"#utility.yul\":18036:18040   */\n      0x00\n        /* \"#utility.yul\":18074:18077   */\n      0xa0\n        /* \"#utility.yul\":18063:18072   */\n      dup3\n        /* \"#utility.yul\":18059:18078   */\n      add\n        /* \"#utility.yul\":18051:18078   */\n      swap1\n      pop\n        /* \"#utility.yul\":18088:18159   */\n      tag_572\n        /* \"#utility.yul\":18156:18157   */\n      0x00\n        /* \"#utility.yul\":18145:18154   */\n      dup4\n        /* \"#utility.yul\":18141:18158   */\n      add\n        /* \"#utility.yul\":18132:18138   */\n      dup9\n        /* \"#utility.yul\":18088:18159   */\n      tag_356\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":18169:18241   */\n      tag_573\n        /* \"#utility.yul\":18237:18239   */\n      0x20\n        /* \"#utility.yul\":18226:18235   */\n      dup4\n        /* \"#utility.yul\":18222:18240   */\n      add\n        /* \"#utility.yul\":18213:18219   */\n      dup8\n        /* \"#utility.yul\":18169:18241   */\n      tag_356\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":18251:18323   */\n      tag_574\n        /* \"#utility.yul\":18319:18321   */\n      0x40\n        /* \"#utility.yul\":18308:18317   */\n      dup4\n        /* \"#utility.yul\":18304:18322   */\n      add\n        /* \"#utility.yul\":18295:18301   */\n      dup7\n        /* \"#utility.yul\":18251:18323   */\n      tag_356\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":18333:18405   */\n      tag_575\n        /* \"#utility.yul\":18401:18403   */\n      0x60\n        /* \"#utility.yul\":18390:18399   */\n      dup4\n        /* \"#utility.yul\":18386:18404   */\n      add\n        /* \"#utility.yul\":18377:18383   */\n      dup6\n        /* \"#utility.yul\":18333:18405   */\n      tag_352\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":18415:18488   */\n      tag_576\n        /* \"#utility.yul\":18483:18486   */\n      0x80\n        /* \"#utility.yul\":18472:18481   */\n      dup4\n        /* \"#utility.yul\":18468:18487   */\n      add\n        /* \"#utility.yul\":18459:18465   */\n      dup5\n        /* \"#utility.yul\":18415:18488   */\n      tag_359\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17831:18495   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18501:19046   */\n    tag_296:\n        /* \"#utility.yul\":18674:18678   */\n      0x00\n        /* \"#utility.yul\":18712:18715   */\n      0x80\n        /* \"#utility.yul\":18701:18710   */\n      dup3\n        /* \"#utility.yul\":18697:18716   */\n      add\n        /* \"#utility.yul\":18689:18716   */\n      swap1\n      pop\n        /* \"#utility.yul\":18726:18797   */\n      tag_578\n        /* \"#utility.yul\":18794:18795   */\n      0x00\n        /* \"#utility.yul\":18783:18792   */\n      dup4\n        /* \"#utility.yul\":18779:18796   */\n      add\n        /* \"#utility.yul\":18770:18776   */\n      dup8\n        /* \"#utility.yul\":18726:18797   */\n      tag_356\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18807:18875   */\n      tag_579\n        /* \"#utility.yul\":18871:18873   */\n      0x20\n        /* \"#utility.yul\":18860:18869   */\n      dup4\n        /* \"#utility.yul\":18856:18874   */\n      add\n        /* \"#utility.yul\":18847:18853   */\n      dup7\n        /* \"#utility.yul\":18807:18875   */\n      tag_354\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18885:18957   */\n      tag_580\n        /* \"#utility.yul\":18953:18955   */\n      0x40\n        /* \"#utility.yul\":18942:18951   */\n      dup4\n        /* \"#utility.yul\":18938:18956   */\n      add\n        /* \"#utility.yul\":18929:18935   */\n      dup6\n        /* \"#utility.yul\":18885:18957   */\n      tag_356\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":18967:19039   */\n      tag_581\n        /* \"#utility.yul\":19035:19037   */\n      0x60\n        /* \"#utility.yul\":19024:19033   */\n      dup4\n        /* \"#utility.yul\":19020:19038   */\n      add\n        /* \"#utility.yul\":19011:19017   */\n      dup5\n        /* \"#utility.yul\":18967:19039   */\n      tag_356\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":18501:19046   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19052:19232   */\n    tag_303:\n        /* \"#utility.yul\":19100:19177   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19097:19098   */\n      0x00\n        /* \"#utility.yul\":19090:19178   */\n      mstore\n        /* \"#utility.yul\":19197:19201   */\n      0x21\n        /* \"#utility.yul\":19194:19195   */\n      0x04\n        /* \"#utility.yul\":19187:19202   */\n      mstore\n        /* \"#utility.yul\":19221:19225   */\n      0x24\n        /* \"#utility.yul\":19218:19219   */\n      0x00\n        /* \"#utility.yul\":19211:19226   */\n      revert\n\n    auxdata: 0xa2646970667358221220b05360c70e06311116f33f330c5fa498e30447712803888829cd72c6f80839e864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1981": {
									"entryPoint": null,
									"id": 1981,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2706": {
									"entryPoint": null,
									"id": 2706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2946": {
									"entryPoint": null,
									"id": 2946,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3447": {
									"entryPoint": null,
									"id": 3447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3618": {
									"entryPoint": null,
									"id": 3618,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2028": {
									"entryPoint": 908,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2802": {
									"entryPoint": 628,
									"id": 2802,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStringSlot_177": {
									"entryPoint": 1106,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_355": {
									"entryPoint": 823,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_257": {
									"entryPoint": 1000,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 2464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10002:1",
										"nodeType": "YulBlock",
										"src": "0:10002:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1261:40:1",
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nativeSrc": "1282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:1",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:1",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nativeSrc": "1335:152:1",
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nativeSrc": "1345:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nativeSrc": "1345:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nativeSrc": "1442:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nativeSrc": "1466:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nativeSrc": "1521:152:1",
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nativeSrc": "1531:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nativeSrc": "1628:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nativeSrc": "1628:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nativeSrc": "1652:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nativeSrc": "1730:269:1",
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nativeSrc": "1740:22:1",
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nativeSrc": "1750:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nativeSrc": "1771:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nativeSrc": "1797:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:1",
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nativeSrc": "1862:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nativeSrc": "1872:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nativeSrc": "1821:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nativeSrc": "1818:81:1",
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nativeSrc": "1951:42:1",
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nativeSrc": "1965:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nativeSrc": "1965:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nativeSrc": "1935:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nativeSrc": "1912:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nativeSrc": "1909:84:1",
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:1",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:1",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nativeSrc": "2059:87:1",
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nativeSrc": "2069:11:1",
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:1",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nativeSrc": "2090:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nativeSrc": "2113:26:1",
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nativeSrc": "2121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:1",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:1",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nativeSrc": "2196:49:1",
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nativeSrc": "2206:33:1",
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nativeSrc": "2220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nativeSrc": "2216:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:1",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nativeSrc": "2304:54:1",
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nativeSrc": "2314:37:1",
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:1",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:1",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:1",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nativeSrc": "2440:317:1",
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nativeSrc": "2450:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nativeSrc": "2467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nativeSrc": "2506:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:1",
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nativeSrc": "2624:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nativeSrc": "2672:30:1",
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nativeSrc": "2692:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nativeSrc": "2681:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nativeSrc": "2711:40:1",
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nativeSrc": "2721:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:1",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:1",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:1",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:1",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nativeSrc": "2808:32:1",
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nativeSrc": "2818:16:1",
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:1",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:1",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:1",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nativeSrc": "2878:28:1",
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nativeSrc": "2888:12:1",
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:1",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:1",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:1",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nativeSrc": "2972:82:1",
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nativeSrc": "2982:66:1",
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nativeSrc": "3022:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nativeSrc": "3013:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:1",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:1",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nativeSrc": "3107:28:1",
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nativeSrc": "3117:12:1",
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:1",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:1",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:1",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nativeSrc": "3217:193:1",
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nativeSrc": "3227:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nativeSrc": "3251:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nativeSrc": "3340:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nativeSrc": "3361:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nativeSrc": "3312:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nativeSrc": "3299:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nativeSrc": "3299:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:1",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:1",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:1",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nativeSrc": "3465:24:1",
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nativeSrc": "3475:8:1",
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:1",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:1",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nativeSrc": "3548:136:1",
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nativeSrc": "3558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nativeSrc": "3572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nativeSrc": "3613:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nativeSrc": "3613:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:1",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nativeSrc": "3740:136:1",
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:1",
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nativeSrc": "3821:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nativeSrc": "3821:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nativeSrc": "3757:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nativeSrc": "3750:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:1",
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nativeSrc": "3774:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nativeSrc": "3783:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:1",
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:1",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nativeSrc": "3961:464:1",
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:1",
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nativeSrc": "4001:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nativeSrc": "4017:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nativeSrc": "4101:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nativeSrc": "4087:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:1",
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nativeSrc": "4269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nativeSrc": "4266:49:1",
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nativeSrc": "4384:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nativeSrc": "4370:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nativeSrc": "4328:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nativeSrc": "4328:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nativeSrc": "3975:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nativeSrc": "3972:446:1",
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:1",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:1",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:1",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nativeSrc": "4494:54:1",
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nativeSrc": "4504:37:1",
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nativeSrc": "4525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:1",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:1",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:1",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nativeSrc": "4605:118:1",
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nativeSrc": "4615:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nativeSrc": "4660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nativeSrc": "4675:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nativeSrc": "4631:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nativeSrc": "4627:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:1",
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:1",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:1",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:1",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nativeSrc": "4809:214:1",
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nativeSrc": "4942:37:1",
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nativeSrc": "4950:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nativeSrc": "4988:29:1",
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nativeSrc": "5005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nativeSrc": "4996:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:1",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:1",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:1",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:1",
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nativeSrc": "5131:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nativeSrc": "5145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:1",
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nativeSrc": "5269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nativeSrc": "5269:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nativeSrc": "5236:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nativeSrc": "5233:56:1",
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nativeSrc": "5299:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nativeSrc": "5339:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nativeSrc": "5313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nativeSrc": "5398:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nativeSrc": "5398:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nativeSrc": "5475:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:1",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:1",
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:1",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:1",
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nativeSrc": "5608:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nativeSrc": "5596:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nativeSrc": "5646:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:1",
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nativeSrc": "5803:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nativeSrc": "5797:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nativeSrc": "5782:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nativeSrc": "5782:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nativeSrc": "5841:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nativeSrc": "5851:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nativeSrc": "5895:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nativeSrc": "5727:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nativeSrc": "5719:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:1",
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nativeSrc": "5749:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:1",
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:1",
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nativeSrc": "6004:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nativeSrc": "5998:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nativeSrc": "6086:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nativeSrc": "6056:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nativeSrc": "6041:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nativeSrc": "6041:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nativeSrc": "5943:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nativeSrc": "5940:179:1",
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nativeSrc": "6149:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nativeSrc": "6145:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nativeSrc": "6132:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nativeSrc": "6132:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:1",
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:1",
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:1",
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nativeSrc": "6279:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nativeSrc": "6273:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nativeSrc": "6236:77:1",
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nativeSrc": "6339:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nativeSrc": "6326:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nativeSrc": "6326:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:1",
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nativeSrc": "5537:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nativeSrc": "5530:887:1",
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:1",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:1",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nativeSrc": "6826:32:1",
													"nodeType": "YulBlock",
													"src": "6826:32:1",
													"statements": [
														{
															"nativeSrc": "6836:16:1",
															"nodeType": "YulAssignment",
															"src": "6836:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "6847:5:1",
																"nodeType": "YulIdentifier",
																"src": "6847:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6836:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6836:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "6781:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6808:5:1",
														"nodeType": "YulTypedName",
														"src": "6808:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6818:7:1",
														"nodeType": "YulTypedName",
														"src": "6818:7:1",
														"type": ""
													}
												],
												"src": "6781:77:1"
											},
											{
												"body": {
													"nativeSrc": "6929:53:1",
													"nodeType": "YulBlock",
													"src": "6929:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6946:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6946:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6969:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6969:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6951:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6951:17:1"
																		},
																		"nativeSrc": "6951:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6951:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6939:6:1"
																},
																"nativeSrc": "6939:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6939:37:1"
															},
															"nativeSrc": "6939:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6939:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6864:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6917:5:1",
														"nodeType": "YulTypedName",
														"src": "6917:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6924:3:1",
														"nodeType": "YulTypedName",
														"src": "6924:3:1",
														"type": ""
													}
												],
												"src": "6864:118:1"
											},
											{
												"body": {
													"nativeSrc": "7053:53:1",
													"nodeType": "YulBlock",
													"src": "7053:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7070:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7070:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7093:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7093:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7075:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7075:17:1"
																		},
																		"nativeSrc": "7075:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7075:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7063:6:1"
																},
																"nativeSrc": "7063:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7063:37:1"
															},
															"nativeSrc": "7063:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "7063:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6988:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7041:5:1",
														"nodeType": "YulTypedName",
														"src": "7041:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7048:3:1",
														"nodeType": "YulTypedName",
														"src": "7048:3:1",
														"type": ""
													}
												],
												"src": "6988:118:1"
											},
											{
												"body": {
													"nativeSrc": "7322:454:1",
													"nodeType": "YulBlock",
													"src": "7322:454:1",
													"statements": [
														{
															"nativeSrc": "7332:27:1",
															"nodeType": "YulAssignment",
															"src": "7332:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7344:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7355:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7355:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7340:3:1"
																},
																"nativeSrc": "7340:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7340:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7332:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7413:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7413:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7426:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7426:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7437:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7437:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7422:3:1"
																		},
																		"nativeSrc": "7422:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7422:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7369:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7369:43:1"
																},
																"nativeSrc": "7369:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7369:71:1"
															},
															"nativeSrc": "7369:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7369:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7494:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7494:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7507:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7507:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7518:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7503:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7503:3:1"
																		},
																		"nativeSrc": "7503:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7503:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7450:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7450:43:1"
																},
																"nativeSrc": "7450:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7450:72:1"
															},
															"nativeSrc": "7450:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7450:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7576:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7576:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7589:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7589:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7600:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7600:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7585:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7585:3:1"
																		},
																		"nativeSrc": "7585:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7585:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7532:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7532:43:1"
																},
																"nativeSrc": "7532:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7532:72:1"
															},
															"nativeSrc": "7532:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7532:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7658:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7658:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7671:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7671:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7682:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7682:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7667:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7667:3:1"
																		},
																		"nativeSrc": "7667:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7667:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7614:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7614:43:1"
																},
																"nativeSrc": "7614:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7614:72:1"
															},
															"nativeSrc": "7614:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7614:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "7740:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7740:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7753:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7753:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7764:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7764:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7749:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7749:3:1"
																		},
																		"nativeSrc": "7749:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7749:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7696:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7696:43:1"
																},
																"nativeSrc": "7696:73:1",
																"nodeType": "YulFunctionCall",
																"src": "7696:73:1"
															},
															"nativeSrc": "7696:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "7696:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "7112:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7262:9:1",
														"nodeType": "YulTypedName",
														"src": "7262:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7274:6:1",
														"nodeType": "YulTypedName",
														"src": "7274:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7282:6:1",
														"nodeType": "YulTypedName",
														"src": "7282:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7290:6:1",
														"nodeType": "YulTypedName",
														"src": "7290:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7298:6:1",
														"nodeType": "YulTypedName",
														"src": "7298:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7306:6:1",
														"nodeType": "YulTypedName",
														"src": "7306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7317:4:1",
														"nodeType": "YulTypedName",
														"src": "7317:4:1",
														"type": ""
													}
												],
												"src": "7112:664:1"
											},
											{
												"body": {
													"nativeSrc": "7878:73:1",
													"nodeType": "YulBlock",
													"src": "7878:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7895:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7895:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7900:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7900:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7888:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7888:6:1"
																},
																"nativeSrc": "7888:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7888:19:1"
															},
															"nativeSrc": "7888:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "7888:19:1"
														},
														{
															"nativeSrc": "7916:29:1",
															"nodeType": "YulAssignment",
															"src": "7916:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7935:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7935:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7940:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7940:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7931:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7931:3:1"
																},
																"nativeSrc": "7931:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7931:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7916:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "7916:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7782:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7850:3:1",
														"nodeType": "YulTypedName",
														"src": "7850:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7855:6:1",
														"nodeType": "YulTypedName",
														"src": "7855:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7866:11:1",
														"nodeType": "YulTypedName",
														"src": "7866:11:1",
														"type": ""
													}
												],
												"src": "7782:169:1"
											},
											{
												"body": {
													"nativeSrc": "8019:184:1",
													"nodeType": "YulBlock",
													"src": "8019:184:1",
													"statements": [
														{
															"nativeSrc": "8029:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8029:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8038:1:1",
																"nodeType": "YulLiteral",
																"src": "8038:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8033:1:1",
																	"nodeType": "YulTypedName",
																	"src": "8033:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8098:63:1",
																"nodeType": "YulBlock",
																"src": "8098:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "8123:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8123:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "8128:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "8128:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8119:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8119:3:1"
																					},
																					"nativeSrc": "8119:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8119:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "8142:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8142:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "8147:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "8147:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8138:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8138:3:1"
																							},
																							"nativeSrc": "8138:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8138:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "8132:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8132:5:1"
																					},
																					"nativeSrc": "8132:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8132:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8112:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:1"
																			},
																			"nativeSrc": "8112:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:39:1"
																		},
																		"nativeSrc": "8112:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8059:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8059:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8062:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8062:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8056:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8056:2:1"
																},
																"nativeSrc": "8056:13:1",
																"nodeType": "YulFunctionCall",
																"src": "8056:13:1"
															},
															"nativeSrc": "8048:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8070:19:1",
																"nodeType": "YulBlock",
																"src": "8070:19:1",
																"statements": [
																	{
																		"nativeSrc": "8072:15:1",
																		"nodeType": "YulAssignment",
																		"src": "8072:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8081:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "8081:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8084:2:1",
																					"nodeType": "YulLiteral",
																					"src": "8084:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8077:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8077:3:1"
																			},
																			"nativeSrc": "8077:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8077:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8072:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "8072:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8052:3:1",
																"nodeType": "YulBlock",
																"src": "8052:3:1",
																"statements": []
															},
															"src": "8048:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8181:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8181:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8186:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8186:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8177:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8177:3:1"
																		},
																		"nativeSrc": "8177:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8177:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8195:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8195:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8170:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8170:6:1"
																},
																"nativeSrc": "8170:27:1",
																"nodeType": "YulFunctionCall",
																"src": "8170:27:1"
															},
															"nativeSrc": "8170:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "8170:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7957:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8001:3:1",
														"nodeType": "YulTypedName",
														"src": "8001:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8006:3:1",
														"nodeType": "YulTypedName",
														"src": "8006:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8011:6:1",
														"nodeType": "YulTypedName",
														"src": "8011:6:1",
														"type": ""
													}
												],
												"src": "7957:246:1"
											},
											{
												"body": {
													"nativeSrc": "8257:54:1",
													"nodeType": "YulBlock",
													"src": "8257:54:1",
													"statements": [
														{
															"nativeSrc": "8267:38:1",
															"nodeType": "YulAssignment",
															"src": "8267:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8285:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8285:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8281:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:1"
																		},
																		"nativeSrc": "8281:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8281:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8301:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8301:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8297:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:1"
																		},
																		"nativeSrc": "8297:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8297:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8277:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8277:3:1"
																},
																"nativeSrc": "8277:28:1",
																"nodeType": "YulFunctionCall",
																"src": "8277:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8267:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "8209:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8240:5:1",
														"nodeType": "YulTypedName",
														"src": "8240:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8250:6:1",
														"nodeType": "YulTypedName",
														"src": "8250:6:1",
														"type": ""
													}
												],
												"src": "8209:102:1"
											},
											{
												"body": {
													"nativeSrc": "8409:285:1",
													"nodeType": "YulBlock",
													"src": "8409:285:1",
													"statements": [
														{
															"nativeSrc": "8419:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8419:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8466:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8466:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8433:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "8433:32:1"
																},
																"nativeSrc": "8433:39:1",
																"nodeType": "YulFunctionCall",
																"src": "8433:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8423:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8481:78:1",
															"nodeType": "YulAssignment",
															"src": "8481:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8547:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8547:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8552:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8552:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8488:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "8488:58:1"
																},
																"nativeSrc": "8488:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8488:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8481:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8607:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8607:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8614:4:1",
																				"nodeType": "YulLiteral",
																				"src": "8614:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8603:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8603:3:1"
																		},
																		"nativeSrc": "8603:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8603:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8621:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8621:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8626:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8626:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8568:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "8568:34:1"
																},
																"nativeSrc": "8568:65:1",
																"nodeType": "YulFunctionCall",
																"src": "8568:65:1"
															},
															"nativeSrc": "8568:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "8568:65:1"
														},
														{
															"nativeSrc": "8642:46:1",
															"nodeType": "YulAssignment",
															"src": "8642:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8653:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8653:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8680:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8680:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8658:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "8658:21:1"
																		},
																		"nativeSrc": "8658:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8658:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8649:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8649:3:1"
																},
																"nativeSrc": "8649:39:1",
																"nodeType": "YulFunctionCall",
																"src": "8649:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8642:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8642:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8317:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8390:5:1",
														"nodeType": "YulTypedName",
														"src": "8390:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8397:3:1",
														"nodeType": "YulTypedName",
														"src": "8397:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8405:3:1",
														"nodeType": "YulTypedName",
														"src": "8405:3:1",
														"type": ""
													}
												],
												"src": "8317:377:1"
											},
											{
												"body": {
													"nativeSrc": "8818:195:1",
													"nodeType": "YulBlock",
													"src": "8818:195:1",
													"statements": [
														{
															"nativeSrc": "8828:26:1",
															"nodeType": "YulAssignment",
															"src": "8828:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8840:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8840:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8851:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8851:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:1"
																},
																"nativeSrc": "8836:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8836:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8828:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8828:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8875:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8886:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8886:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:1"
																		},
																		"nativeSrc": "8871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8871:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8894:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8894:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8900:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8900:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8890:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:1"
																		},
																		"nativeSrc": "8890:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8890:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8864:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:1"
																},
																"nativeSrc": "8864:47:1",
																"nodeType": "YulFunctionCall",
																"src": "8864:47:1"
															},
															"nativeSrc": "8864:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "8864:47:1"
														},
														{
															"nativeSrc": "8920:86:1",
															"nodeType": "YulAssignment",
															"src": "8920:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8992:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8992:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9001:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9001:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8928:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8928:63:1"
																},
																"nativeSrc": "8928:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8928:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8920:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8920:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8700:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8790:9:1",
														"nodeType": "YulTypedName",
														"src": "8790:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8802:6:1",
														"nodeType": "YulTypedName",
														"src": "8802:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8813:4:1",
														"nodeType": "YulTypedName",
														"src": "8813:4:1",
														"type": ""
													}
												],
												"src": "8700:313:1"
											},
											{
												"body": {
													"nativeSrc": "9077:40:1",
													"nodeType": "YulBlock",
													"src": "9077:40:1",
													"statements": [
														{
															"nativeSrc": "9088:22:1",
															"nodeType": "YulAssignment",
															"src": "9088:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9104:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9104:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9098:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9098:5:1"
																},
																"nativeSrc": "9098:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9098:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9088:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9088:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9019:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9060:5:1",
														"nodeType": "YulTypedName",
														"src": "9060:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9070:6:1",
														"nodeType": "YulTypedName",
														"src": "9070:6:1",
														"type": ""
													}
												],
												"src": "9019:98:1"
											},
											{
												"body": {
													"nativeSrc": "9179:60:1",
													"nodeType": "YulBlock",
													"src": "9179:60:1",
													"statements": [
														{
															"nativeSrc": "9189:11:1",
															"nodeType": "YulAssignment",
															"src": "9189:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "9197:3:1",
																"nodeType": "YulIdentifier",
																"src": "9197:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9189:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9189:4:1"
																}
															]
														},
														{
															"nativeSrc": "9210:22:1",
															"nodeType": "YulAssignment",
															"src": "9210:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9222:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9222:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9227:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9227:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9218:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9218:3:1"
																},
																"nativeSrc": "9218:14:1",
																"nodeType": "YulFunctionCall",
																"src": "9218:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9210:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9210:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "9123:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9166:3:1",
														"nodeType": "YulTypedName",
														"src": "9166:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9174:4:1",
														"nodeType": "YulTypedName",
														"src": "9174:4:1",
														"type": ""
													}
												],
												"src": "9123:116:1"
											},
											{
												"body": {
													"nativeSrc": "9300:99:1",
													"nodeType": "YulBlock",
													"src": "9300:99:1",
													"statements": [
														{
															"nativeSrc": "9311:42:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9311:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "9348:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9348:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9342:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "9342:5:1"
																		},
																		"nativeSrc": "9342:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9342:10:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "9324:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9324:17:1"
																},
																"nativeSrc": "9324:29:1",
																"nodeType": "YulFunctionCall",
																"src": "9324:29:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9315:5:1",
																	"nodeType": "YulTypedName",
																	"src": "9315:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9363:29:1",
															"nodeType": "YulAssignment",
															"src": "9363:29:1",
															"value": {
																"name": "value",
																"nativeSrc": "9387:5:1",
																"nodeType": "YulIdentifier",
																"src": "9387:5:1"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9363:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "9363:11:1"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "9245:154:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9280:3:1",
														"nodeType": "YulTypedName",
														"src": "9280:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "9288:11:1",
														"nodeType": "YulTypedName",
														"src": "9288:11:1",
														"type": ""
													}
												],
												"src": "9245:154:1"
											},
											{
												"body": {
													"nativeSrc": "9495:504:1",
													"nodeType": "YulBlock",
													"src": "9495:504:1",
													"statements": [
														{
															"nativeSrc": "9506:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9506:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9552:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9552:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "9520:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "9520:31:1"
																},
																"nativeSrc": "9520:38:1",
																"nodeType": "YulFunctionCall",
																"src": "9520:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9510:6:1",
																	"nodeType": "YulTypedName",
																	"src": "9510:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9567:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9567:21:1",
															"value": {
																"name": "array",
																"nativeSrc": "9583:5:1",
																"nodeType": "YulIdentifier",
																"src": "9583:5:1"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "9571:8:1",
																	"nodeType": "YulTypedName",
																	"src": "9571:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9598:52:1",
															"nodeType": "YulAssignment",
															"src": "9598:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9644:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9644:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "9610:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "9610:33:1"
																},
																"nativeSrc": "9610:40:1",
																"nodeType": "YulFunctionCall",
																"src": "9610:40:1"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "9598:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "9598:8:1"
																}
															]
														},
														{
															"nativeSrc": "9660:44:1",
															"nodeType": "YulAssignment",
															"src": "9660:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "9695:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9695:8:1"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "9669:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "9669:25:1"
																},
																"nativeSrc": "9669:35:1",
																"nodeType": "YulFunctionCall",
																"src": "9669:35:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9660:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9660:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9732:260:1",
																"nodeType": "YulBlock",
																"src": "9732:260:1",
																"statements": [
																	{
																		"nativeSrc": "9746:236:1",
																		"nodeType": "YulAssignment",
																		"src": "9746:236:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "9776:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "9776:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9843:1:1",
																									"nodeType": "YulLiteral",
																									"src": "9843:1:1",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "9850:2:1",
																											"nodeType": "YulLiteral",
																											"src": "9850:2:1",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "9854:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "9854:6:1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "9846:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "9846:3:1"
																									},
																									"nativeSrc": "9846:15:1",
																									"nodeType": "YulFunctionCall",
																									"src": "9846:15:1"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "9839:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "9839:3:1"
																							},
																							"nativeSrc": "9839:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "9839:23:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9884:66:1",
																							"nodeType": "YulLiteral",
																							"src": "9884:66:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "9799:18:1",
																						"nodeType": "YulIdentifier",
																						"src": "9799:18:1"
																					},
																					"nativeSrc": "9799:169:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9799:169:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9755:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9755:3:1"
																			},
																			"nativeSrc": "9755:227:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9755:227:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "9746:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9746:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9720:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9720:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9728:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9728:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9717:2:1"
																},
																"nativeSrc": "9717:14:1",
																"nodeType": "YulFunctionCall",
																"src": "9717:14:1"
															},
															"nativeSrc": "9714:278:1",
															"nodeType": "YulIf",
															"src": "9714:278:1"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "9405:594:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "9479:5:1",
														"nodeType": "YulTypedName",
														"src": "9479:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9489:5:1",
														"nodeType": "YulTypedName",
														"src": "9489:5:1",
														"type": ""
													}
												],
												"src": "9405:594:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405234801562000011575f80fd5b5060405162002d3938038062002d398339818101604052810190620000379190620004c0565b6040518060400160405280601281526020017f50617274696369706174696f6e546f6b656e0000000000000000000000000000815250806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250836040518060400160405280601281526020017f50617274696369706174696f6e546f6b656e00000000000000000000000000008152506040518060400160405280600381526020017f50544b0000000000000000000000000000000000000000000000000000000000815250816003908162000122919062000754565b50806004908162000134919062000754565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001a1919062000849565b60405180910390fd5b620001bb816200027460201b60201c565b50620001d26006836200033760201b90919060201c565b6101208181525050620001f06007826200033760201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200022f6200038c60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050505062000a34565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6020835110156200035c576200035483620003e860201b60201c565b905062000386565b826200036e836200045260201b60201c565b5f0190816200037e919062000754565b5060ff5f1b90505b92915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e051610100514630604051602001620003cd9594939291906200088f565b60405160208183030381529060405280519060200120905090565b5f80829050601f815111156200043757826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016200042e919062000974565b60405180910390fd5b8051816200044590620009c5565b5f1c175f1b915050919050565b5f819050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200048a826200045f565b9050919050565b6200049c816200047e565b8114620004a7575f80fd5b50565b5f81519050620004ba8162000491565b92915050565b5f60208284031215620004d857620004d76200045b565b5b5f620004e784828501620004aa565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200056c57607f821691505b60208210810362000582576200058162000527565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005e67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005a9565b620005f28683620005a9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200063c6200063662000630846200060a565b62000613565b6200060a565b9050919050565b5f819050919050565b62000657836200061c565b6200066f620006668262000643565b848454620005b5565b825550505050565b5f90565b6200068562000677565b620006928184846200064c565b505050565b5b81811015620006b957620006ad5f826200067b565b60018101905062000698565b5050565b601f8211156200070857620006d28162000588565b620006dd846200059a565b81016020851015620006ed578190505b62000705620006fc856200059a565b83018262000697565b50505b505050565b5f82821c905092915050565b5f6200072a5f19846008026200070d565b1980831691505092915050565b5f62000744838362000719565b9150826002028217905092915050565b6200075f82620004f0565b67ffffffffffffffff8111156200077b576200077a620004fa565b5b62000787825462000554565b62000794828285620006bd565b5f60209050601f831160018114620007ca575f8415620007b5578287015190505b620007c1858262000737565b86555062000830565b601f198416620007da8662000588565b5f5b828110156200080357848901518255600182019150602085019450602081019050620007dc565b868310156200082357848901516200081f601f89168262000719565b8355505b6001600288020188555050505b505050505050565b62000843816200047e565b82525050565b5f6020820190506200085e5f83018462000838565b92915050565b5f819050919050565b620008788162000864565b82525050565b62000889816200060a565b82525050565b5f60a082019050620008a45f8301886200086d565b620008b360208301876200086d565b620008c260408301866200086d565b620008d160608301856200087e565b620008e0608083018462000838565b9695505050505050565b5f82825260208201905092915050565b5f5b8381101562000919578082015181840152602081019050620008fc565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6200094082620004f0565b6200094c8185620008ea565b93506200095e818560208601620008fa565b620009698162000924565b840191505092915050565b5f6020820190508181035f8301526200098e818462000934565b905092915050565b5f81519050919050565b5f819050602082019050919050565b5f620009bc825162000864565b80915050919050565b5f620009d18262000996565b82620009dd84620009a0565b9050620009ea81620009af565b9250602082101562000a2d5762000a287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620005a9565b831692505b5050919050565b60805160a05160c05160e0516101005161012051610140516122b362000a865f395f610f1101525f610ed601525f61140a01525f6113e901525f610b8c01525f610be201525f610c0b01526122b35ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c806379cc6790116100ab578063a9059cbb1161006f578063a9059cbb14610324578063abd81ca214610354578063d505accf14610384578063dd62ed3e146103a0578063f2fde38b146103d05761012a565b806379cc6790146102785780637ecebe001461029457806384b0196e146102c45780638da5cb5b146102e857806395d89b41146103065761012a565b80633644e515116100f25780633644e515146101e857806340c10f191461020657806342966c681461022257806370a082311461023e578063715018a61461026e5761012a565b806306fdde031461012e578063095ea7b31461014c57806318160ddd1461017c57806323b872dd1461019a578063313ce567146101ca575b5f80fd5b6101366103ec565b60405161014391906118da565b60405180910390f35b6101666004803603810190610161919061198b565b61047c565b60405161017391906119e3565b60405180910390f35b61018461049e565b6040516101919190611a0b565b60405180910390f35b6101b460048036038101906101af9190611a24565b6104a7565b6040516101c191906119e3565b60405180910390f35b6101d26104d5565b6040516101df9190611a8f565b60405180910390f35b6101f06104dd565b6040516101fd9190611ac0565b60405180910390f35b610220600480360381019061021b919061198b565b6104eb565b005b61023c60048036038101906102379190611ad9565b610522565b005b61025860048036038101906102539190611b04565b610536565b6040516102659190611a0b565b60405180910390f35b61027661057b565b005b610292600480360381019061028d919061198b565b61058e565b005b6102ae60048036038101906102a99190611b04565b6105ae565b6040516102bb9190611a0b565b60405180910390f35b6102cc6105bf565b6040516102df9796959493929190611c2f565b60405180910390f35b6102f0610664565b6040516102fd9190611cb1565b60405180910390f35b61030e61068c565b60405161031b91906118da565b60405180910390f35b61033e6004803603810190610339919061198b565b61071c565b60405161034b91906119e3565b60405180910390f35b61036e60048036038101906103699190611cca565b61073e565b60405161037b91906119e3565b60405180910390f35b61039e60048036038101906103999190611d82565b6107a3565b005b6103ba60048036038101906103b59190611e1f565b6108e8565b6040516103c79190611a0b565b60405180910390f35b6103ea60048036038101906103e59190611b04565b61096a565b005b6060600380546103fb90611e8a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790611e8a565b80156104725780601f1061044957610100808354040283529160200191610472565b820191905f5260205f20905b81548152906001019060200180831161045557829003601f168201915b5050505050905090565b5f806104866109ee565b90506104938185856109f5565b600191505092915050565b5f600254905090565b5f806104b16109ee565b90506104be858285610a07565b6104c9858585610a99565b60019150509392505050565b5f6012905090565b5f6104e6610b89565b905090565b6104f3610c3f565b61051e826104ff6104d5565b60ff16600a61050e9190612016565b836105199190612060565b610cc6565b5050565b61053361052d6109ee565b82610d45565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610583610c3f565b61058c5f610dc4565b565b6105a08261059a6109ee565b83610a07565b6105aa8282610d45565b5050565b5f6105b882610e87565b9050919050565b5f6060805f805f60606105d0610ecd565b6105d8610f08565b46305f801b5f67ffffffffffffffff8111156105f7576105f66120a1565b5b6040519080825280602002602001820160405280156106255781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069b90611e8a565b80601f01602080910402602001604051908101604052809291908181526020018280546106c790611e8a565b80156107125780601f106106e957610100808354040283529160200191610712565b820191905f5260205f20905b8154815290600101906020018083116106f557829003601f168201915b5050505050905090565b5f806107266109ee565b9050610733818585610a99565b600191505092915050565b5f61076b828661074c6104d5565b60ff16600a61075b9190612016565b866107669190612060565b610a07565b61079785856107786104d5565b60ff16600a6107879190612016565b866107929190612060565b610a99565b60019050949350505050565b834211156107e857836040517f627913020000000000000000000000000000000000000000000000000000000081526004016107df9190611a0b565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108168c610f43565b8960405160200161082c969594939291906120ce565b6040516020818303038152906040528051906020012090505f61084e82610f96565b90505f61085d82878787610faf565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108d157808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016108c892919061212d565b60405180910390fd5b6108dc8a8a8a6109f5565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610972610c3f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109e2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109d99190611cb1565b60405180910390fd5b6109eb81610dc4565b50565b5f33905090565b610a028383836001610fdd565b505050565b5f610a1284846108e8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a935781811015610a84578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a7b93929190612154565b60405180910390fd5b610a9284848484035f610fdd565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b09575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b009190611cb1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b79575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b709190611cb1565b60405180910390fd5b610b848383836111ac565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610c0457507f000000000000000000000000000000000000000000000000000000000000000046145b15610c31577f00000000000000000000000000000000000000000000000000000000000000009050610c3c565b610c396113c5565b90505b90565b610c476109ee565b73ffffffffffffffffffffffffffffffffffffffff16610c65610664565b73ffffffffffffffffffffffffffffffffffffffff1614610cc457610c886109ee565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cbb9190611cb1565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d2d9190611cb1565b60405180910390fd5b610d415f83836111ac565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610db5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610dac9190611cb1565b60405180910390fd5b610dc0825f836111ac565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610f0360067f000000000000000000000000000000000000000000000000000000000000000061145a90919063ffffffff16565b905090565b6060610f3e60077f000000000000000000000000000000000000000000000000000000000000000061145a90919063ffffffff16565b905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610fa8610fa2610b89565b83611507565b9050919050565b5f805f80610fbf88888888611547565b925092509250610fcf828261162e565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361104d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110449190611cb1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110bd575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110b49190611cb1565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111a6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161119d9190611a0b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111fc578060025f8282546111f09190612189565b925050819055506112ca565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611285578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161127c93929190612154565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611311578060025f828254039250508190555061135b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113b89190611a0b565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161143f9594939291906121bc565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146114765761146f83611790565b9050611501565b81805461148290611e8a565b80601f01602080910402602001604051908101604052809291908181526020018280546114ae90611e8a565b80156114f95780601f106114d0576101008083540402835291602001916114f9565b820191905f5260205f20905b8154815290600101906020018083116114dc57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611583575f600385925092509250611624565b5f6001888888886040515f81526020016040526040516115a6949392919061220d565b6020604051602081039080840390855afa1580156115c6573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611617575f60015f801b93509350935050611624565b805f805f1b935093509350505b9450945094915050565b5f600381111561164157611640612250565b5b82600381111561165457611653612250565b5b031561178c576001600381111561166e5761166d612250565b5b82600381111561168157611680612250565b5b036116b8576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156116cc576116cb612250565b5b8260038111156116df576116de612250565b5b0361172357805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161171a9190611a0b565b60405180910390fd5b60038081111561173657611735612250565b5b82600381111561174957611748612250565b5b0361178b57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016117829190611ac0565b60405180910390fd5b5b5050565b60605f61179c83611802565b90505f602067ffffffffffffffff8111156117ba576117b96120a1565b5b6040519080825280601f01601f1916602001820160405280156117ec5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611847576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561188757808201518184015260208101905061186c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118ac82611850565b6118b6818561185a565b93506118c681856020860161186a565b6118cf81611892565b840191505092915050565b5f6020820190508181035f8301526118f281846118a2565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611927826118fe565b9050919050565b6119378161191d565b8114611941575f80fd5b50565b5f813590506119528161192e565b92915050565b5f819050919050565b61196a81611958565b8114611974575f80fd5b50565b5f8135905061198581611961565b92915050565b5f80604083850312156119a1576119a06118fa565b5b5f6119ae85828601611944565b92505060206119bf85828601611977565b9150509250929050565b5f8115159050919050565b6119dd816119c9565b82525050565b5f6020820190506119f65f8301846119d4565b92915050565b611a0581611958565b82525050565b5f602082019050611a1e5f8301846119fc565b92915050565b5f805f60608486031215611a3b57611a3a6118fa565b5b5f611a4886828701611944565b9350506020611a5986828701611944565b9250506040611a6a86828701611977565b9150509250925092565b5f60ff82169050919050565b611a8981611a74565b82525050565b5f602082019050611aa25f830184611a80565b92915050565b5f819050919050565b611aba81611aa8565b82525050565b5f602082019050611ad35f830184611ab1565b92915050565b5f60208284031215611aee57611aed6118fa565b5b5f611afb84828501611977565b91505092915050565b5f60208284031215611b1957611b186118fa565b5b5f611b2684828501611944565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b6381611b2f565b82525050565b611b728161191d565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611baa81611958565b82525050565b5f611bbb8383611ba1565b60208301905092915050565b5f602082019050919050565b5f611bdd82611b78565b611be78185611b82565b9350611bf283611b92565b805f5b83811015611c22578151611c098882611bb0565b9750611c1483611bc7565b925050600181019050611bf5565b5085935050505092915050565b5f60e082019050611c425f83018a611b5a565b8181036020830152611c5481896118a2565b90508181036040830152611c6881886118a2565b9050611c7760608301876119fc565b611c846080830186611b69565b611c9160a0830185611ab1565b81810360c0830152611ca38184611bd3565b905098975050505050505050565b5f602082019050611cc45f830184611b69565b92915050565b5f805f8060808587031215611ce257611ce16118fa565b5b5f611cef87828801611944565b9450506020611d0087828801611944565b9350506040611d1187828801611977565b9250506060611d2287828801611944565b91505092959194509250565b611d3781611a74565b8114611d41575f80fd5b50565b5f81359050611d5281611d2e565b92915050565b611d6181611aa8565b8114611d6b575f80fd5b50565b5f81359050611d7c81611d58565b92915050565b5f805f805f805f60e0888a031215611d9d57611d9c6118fa565b5b5f611daa8a828b01611944565b9750506020611dbb8a828b01611944565b9650506040611dcc8a828b01611977565b9550506060611ddd8a828b01611977565b9450506080611dee8a828b01611d44565b93505060a0611dff8a828b01611d6e565b92505060c0611e108a828b01611d6e565b91505092959891949750929550565b5f8060408385031215611e3557611e346118fa565b5b5f611e4285828601611944565b9250506020611e5385828601611944565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ea157607f821691505b602082108103611eb457611eb3611e5d565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611f3c57808604811115611f1857611f17611eba565b5b6001851615611f275780820291505b8081029050611f3585611ee7565b9450611efc565b94509492505050565b5f82611f54576001905061200f565b81611f61575f905061200f565b8160018114611f775760028114611f8157611fb0565b600191505061200f565b60ff841115611f9357611f92611eba565b5b8360020a915084821115611faa57611fa9611eba565b5b5061200f565b5060208310610133831016604e8410600b8410161715611fe55782820a905083811115611fe057611fdf611eba565b5b61200f565b611ff28484846001611ef3565b9250905081840481111561200957612008611eba565b5b81810290505b9392505050565b5f61202082611958565b915061202b83611958565b92506120587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611f45565b905092915050565b5f61206a82611958565b915061207583611958565b925082820261208381611958565b9150828204841483151761209a57612099611eba565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c0820190506120e15f830189611ab1565b6120ee6020830188611b69565b6120fb6040830187611b69565b61210860608301866119fc565b61211560808301856119fc565b61212260a08301846119fc565b979650505050505050565b5f6040820190506121405f830185611b69565b61214d6020830184611b69565b9392505050565b5f6060820190506121675f830186611b69565b61217460208301856119fc565b61218160408301846119fc565b949350505050565b5f61219382611958565b915061219e83611958565b92508282019050808211156121b6576121b5611eba565b5b92915050565b5f60a0820190506121cf5f830188611ab1565b6121dc6020830187611ab1565b6121e96040830186611ab1565b6121f660608301856119fc565b6122036080830184611b69565b9695505050505050565b5f6080820190506122205f830187611ab1565b61222d6020830186611a80565b61223a6040830185611ab1565b6122476060830184611ab1565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220b05360c70e06311116f33f330c5fa498e30447712803888829cd72c6f80839e864736f6c63430008180033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D39 CODESIZE SUB DUP1 PUSH3 0x2D39 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50617274696369706174696F6E546F6B656E0000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50617274696369706174696F6E546F6B656E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x122 SWAP2 SWAP1 PUSH3 0x754 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x134 SWAP2 SWAP1 PUSH3 0x754 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A1 SWAP2 SWAP1 PUSH3 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1BB DUP2 PUSH3 0x274 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1D2 PUSH1 0x6 DUP4 PUSH3 0x337 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x1F0 PUSH1 0x7 DUP3 PUSH3 0x337 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x22F PUSH3 0x38C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP PUSH3 0xA34 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x35C JUMPI PUSH3 0x354 DUP4 PUSH3 0x3E8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x386 JUMP JUMPDEST DUP3 PUSH3 0x36E DUP4 PUSH3 0x452 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x37E SWAP2 SWAP1 PUSH3 0x754 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x3CD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x437 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x42E SWAP2 SWAP1 PUSH3 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x445 SWAP1 PUSH3 0x9C5 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x48A DUP3 PUSH3 0x45F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x49C DUP2 PUSH3 0x47E JUMP JUMPDEST DUP2 EQ PUSH3 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x4BA DUP2 PUSH3 0x491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4D8 JUMPI PUSH3 0x4D7 PUSH3 0x45B JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x4E7 DUP5 DUP3 DUP6 ADD PUSH3 0x4AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x56C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x582 JUMPI PUSH3 0x581 PUSH3 0x527 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x5E6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x5A9 JUMP JUMPDEST PUSH3 0x5F2 DUP7 DUP4 PUSH3 0x5A9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x63C PUSH3 0x636 PUSH3 0x630 DUP5 PUSH3 0x60A JUMP JUMPDEST PUSH3 0x613 JUMP JUMPDEST PUSH3 0x60A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x657 DUP4 PUSH3 0x61C JUMP JUMPDEST PUSH3 0x66F PUSH3 0x666 DUP3 PUSH3 0x643 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5B5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x685 PUSH3 0x677 JUMP JUMPDEST PUSH3 0x692 DUP2 DUP5 DUP5 PUSH3 0x64C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6B9 JUMPI PUSH3 0x6AD PUSH0 DUP3 PUSH3 0x67B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x698 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x708 JUMPI PUSH3 0x6D2 DUP2 PUSH3 0x588 JUMP JUMPDEST PUSH3 0x6DD DUP5 PUSH3 0x59A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6ED JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x705 PUSH3 0x6FC DUP6 PUSH3 0x59A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x697 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x72A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x70D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x744 DUP4 DUP4 PUSH3 0x719 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x75F DUP3 PUSH3 0x4F0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x77B JUMPI PUSH3 0x77A PUSH3 0x4FA JUMP JUMPDEST JUMPDEST PUSH3 0x787 DUP3 SLOAD PUSH3 0x554 JUMP JUMPDEST PUSH3 0x794 DUP3 DUP3 DUP6 PUSH3 0x6BD JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7CA JUMPI PUSH0 DUP5 ISZERO PUSH3 0x7B5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7C1 DUP6 DUP3 PUSH3 0x737 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x830 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7DA DUP7 PUSH3 0x588 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x803 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7DC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x823 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x81F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x719 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x843 DUP2 PUSH3 0x47E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x85E PUSH0 DUP4 ADD DUP5 PUSH3 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x878 DUP2 PUSH3 0x864 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x889 DUP2 PUSH3 0x60A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x8A4 PUSH0 DUP4 ADD DUP9 PUSH3 0x86D JUMP JUMPDEST PUSH3 0x8B3 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x86D JUMP JUMPDEST PUSH3 0x8C2 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x86D JUMP JUMPDEST PUSH3 0x8D1 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x87E JUMP JUMPDEST PUSH3 0x8E0 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x838 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x919 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8FC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x940 DUP3 PUSH3 0x4F0 JUMP JUMPDEST PUSH3 0x94C DUP2 DUP6 PUSH3 0x8EA JUMP JUMPDEST SWAP4 POP PUSH3 0x95E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8FA JUMP JUMPDEST PUSH3 0x969 DUP2 PUSH3 0x924 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x98E DUP2 DUP5 PUSH3 0x934 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x9BC DUP3 MLOAD PUSH3 0x864 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x9D1 DUP3 PUSH3 0x996 JUMP JUMPDEST DUP3 PUSH3 0x9DD DUP5 PUSH3 0x9A0 JUMP JUMPDEST SWAP1 POP PUSH3 0x9EA DUP2 PUSH3 0x9AF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xA2D JUMPI PUSH3 0xA28 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x5A9 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x22B3 PUSH3 0xA86 PUSH0 CODECOPY PUSH0 PUSH2 0xF11 ADD MSTORE PUSH0 PUSH2 0xED6 ADD MSTORE PUSH0 PUSH2 0x140A ADD MSTORE PUSH0 PUSH2 0x13E9 ADD MSTORE PUSH0 PUSH2 0xB8C ADD MSTORE PUSH0 PUSH2 0xBE2 ADD MSTORE PUSH0 PUSH2 0xC0B ADD MSTORE PUSH2 0x22B3 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xABD81CA2 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D0 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x306 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x57B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x472 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x472 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x455 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x486 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH2 0x493 DUP2 DUP6 DUP6 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4B1 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH2 0x4BE DUP6 DUP3 DUP6 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x4C9 DUP6 DUP6 DUP6 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4E6 PUSH2 0xB89 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x51E DUP3 PUSH2 0x4FF PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP4 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x533 PUSH2 0x52D PUSH2 0x9EE JUMP JUMPDEST DUP3 PUSH2 0xD45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x583 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x58C PUSH0 PUSH2 0xDC4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5A0 DUP3 PUSH2 0x59A PUSH2 0x9EE JUMP JUMPDEST DUP4 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x5AA DUP3 DUP3 PUSH2 0xD45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5B8 DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x5D0 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0xF08 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x20A1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x625 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69B SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x712 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x712 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x726 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH2 0x733 DUP2 DUP6 DUP6 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x76B DUP3 DUP7 PUSH2 0x74C PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP7 PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x797 DUP6 DUP6 PUSH2 0x778 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP7 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x7E8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x816 DUP13 PUSH2 0xF43 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x84E DUP3 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x85D DUP3 DUP8 DUP8 DUP8 PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8D1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP3 SWAP2 SWAP1 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DC DUP11 DUP11 DUP11 PUSH2 0x9F5 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x972 PUSH2 0xC3F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EB DUP2 PUSH2 0xDC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA02 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA12 DUP5 DUP5 PUSH2 0x8E8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA93 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA84 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA92 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 DUP4 PUSH2 0x11AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC04 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC31 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xC39 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC47 PUSH2 0x9EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC65 PUSH2 0x664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC4 JUMPI PUSH2 0xC88 PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD41 PUSH0 DUP4 DUP4 PUSH2 0x11AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC0 DUP3 PUSH0 DUP4 PUSH2 0x11AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF03 PUSH1 0x6 PUSH32 0x0 PUSH2 0x145A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF3E PUSH1 0x7 PUSH32 0x0 PUSH2 0x145A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA8 PUSH2 0xFA2 PUSH2 0xB89 JUMP JUMPDEST DUP4 PUSH2 0x1507 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xFBF DUP9 DUP9 DUP9 DUP9 PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xFCF DUP3 DUP3 PUSH2 0x162E JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x104D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B4 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x119D SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x2189 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12CA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1285 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1311 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x135B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B8 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x143F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1476 JUMPI PUSH2 0x146F DUP4 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP PUSH2 0x1501 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1482 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14AE SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1583 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1624 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x15A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1617 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1624 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1653 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x178C JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x166E JUMPI PUSH2 0x166D PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1680 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1723 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171A SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1749 JUMPI PUSH2 0x1748 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x178B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x179C DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BA JUMPI PUSH2 0x17B9 PUSH2 0x20A1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1847 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1887 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x186C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AC DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x18B6 DUP2 DUP6 PUSH2 0x185A JUMP JUMPDEST SWAP4 POP PUSH2 0x18C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x186A JUMP JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x1892 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F2 DUP2 DUP5 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1927 DUP3 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1937 DUP2 PUSH2 0x191D JUMP JUMPDEST DUP2 EQ PUSH2 0x1941 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1952 DUP2 PUSH2 0x192E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196A DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP2 EQ PUSH2 0x1974 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1985 DUP2 PUSH2 0x1961 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BF DUP6 DUP3 DUP7 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DD DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A05 DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1E PUSH0 DUP4 ADD DUP5 PUSH2 0x19FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A48 DUP7 DUP3 DUP8 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A59 DUP7 DUP3 DUP8 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6A DUP7 DUP3 DUP8 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A89 DUP2 PUSH2 0x1A74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABA DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFB DUP5 DUP3 DUP6 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B26 DUP5 DUP3 DUP6 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B63 DUP2 PUSH2 0x1B2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B72 DUP2 PUSH2 0x191D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BAA DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBB DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDD DUP3 PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x1BE7 DUP2 DUP6 PUSH2 0x1B82 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BF2 DUP4 PUSH2 0x1B92 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C22 JUMPI DUP2 MLOAD PUSH2 0x1C09 DUP9 DUP3 PUSH2 0x1BB0 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C14 DUP4 PUSH2 0x1BC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BF5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1C42 PUSH0 DUP4 ADD DUP11 PUSH2 0x1B5A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C54 DUP2 DUP10 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1C68 DUP2 DUP9 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C77 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1C84 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x1C91 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1AB1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1CA3 DUP2 DUP5 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CEF DUP8 DUP3 DUP9 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D00 DUP8 DUP3 DUP9 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D11 DUP8 DUP3 DUP9 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1D22 DUP8 DUP3 DUP9 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1D37 DUP2 PUSH2 0x1A74 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D52 DUP2 PUSH2 0x1D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D61 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D7C DUP2 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAA DUP11 DUP3 DUP12 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DBB DUP11 DUP3 DUP12 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1DCC DUP11 DUP3 DUP12 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1DDD DUP11 DUP3 DUP12 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1DEE DUP11 DUP3 DUP12 ADD PUSH2 0x1D44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1DFF DUP11 DUP3 DUP12 ADD PUSH2 0x1D6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1E10 DUP11 DUP3 DUP12 ADD PUSH2 0x1D6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E35 JUMPI PUSH2 0x1E34 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E42 DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E53 DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EA1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EB4 JUMPI PUSH2 0x1EB3 PUSH2 0x1E5D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F3C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F18 JUMPI PUSH2 0x1F17 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F27 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F35 DUP6 PUSH2 0x1EE7 JUMP JUMPDEST SWAP5 POP PUSH2 0x1EFC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1F54 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x200F JUMP JUMPDEST DUP2 PUSH2 0x1F61 JUMPI PUSH0 SWAP1 POP PUSH2 0x200F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F77 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F81 JUMPI PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x200F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F92 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST POP PUSH2 0x200F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FE5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1FE0 JUMPI PUSH2 0x1FDF PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST PUSH2 0x200F JUMP JUMPDEST PUSH2 0x1FF2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1EF3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2009 JUMPI PUSH2 0x2008 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 DUP3 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP PUSH2 0x2058 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x206A DUP3 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x2075 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2083 DUP2 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x209A JUMPI PUSH2 0x2099 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x20E1 PUSH0 DUP4 ADD DUP10 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x20EE PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x20FB PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x2108 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2115 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2122 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x19FC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2140 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x214D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2167 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x2174 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2181 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19FC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2193 DUP3 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x219E DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x21CF PUSH0 DUP4 ADD DUP9 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x21DC PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x21E9 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x21F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2203 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B69 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2220 PUSH0 DUP4 ADD DUP8 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x222D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x223A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x2247 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AB1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 MSTORE8 PUSH1 0xC7 0xE MOD BALANCE GT AND RETURN EXTCODEHASH CALLER 0xC PUSH0 LOG4 SWAP9 0xE3 DIV SELFBALANCE PUSH18 0x2803888829CD72C6F80839E864736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "80743:685:0:-:0;;;80823:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;78282:52;;;;;;;;;;;;;;;;;78321:4;36943:431;;;;;;;;;;;;;;;;;80916:12;67673:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67747:5;67739;:13;;;;;;:::i;:::-;;67772:7;67762;:17;;;;;;:::i;:::-;;67673:113;;60662:1;60638:26;;:12;:26;;;60634:95;;60715:1;60687:31;;;;;;;;;;;:::i;:::-;;;;;;;;60634:95;60738:32;60757:12;60738:18;;;:32;;:::i;:::-;60590:187;37016:45;37047:13;37016:4;:30;;;;:45;;;;:::i;:::-;37008:53;;;;;;37082:51;37116:16;37082:7;:33;;;;:51;;;;:::i;:::-;37071:62;;;;;;37173:4;37157:22;;;;;;37143:36;;;;;;37222:7;37206:25;;;;;;37189:42;;;;;;37259:13;37242:30;;;;;;37307:23;:21;;;:23;;:::i;:::-;37282:48;;;;;;37362:4;37340:27;;;;;;;;;;36943:431;;78282:52;80823:155;80743:685;;62277:187;62350:16;62369:6;;;;;;;;;;;62350:25;;62394:8;62385:6;;:17;;;;;;;;;;;;;;;;;;62448:8;62417:40;;62438:8;62417:40;;;;;;;;;;;;62340:124;62277:187;:::o;9129:340::-;9225:11;9274:2;9258:5;9252:19;:24;9248:215;;;9299:20;9313:5;9299:13;;;:20;;:::i;:::-;9292:27;;;;9248:215;9391:5;9350:32;9376:5;9350:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;7605:66;9434:17;;9410:42;;9129:340;;;;;:::o;37728:179::-;37783:7;35694:95;37841:11;;37854:14;;37870:13;37893:4;37819:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37809:91;;;;;;37802:98;;37728:179;:::o;7923:286::-;7988:11;8011:17;8037:3;8011:30;;8069:2;8055:4;:11;:16;8051:72;;;8108:3;8094:18;;;;;;;;;;;:::i;:::-;;;;;;;;8051:72;8189:4;:11;8180:4;8172:13;;;:::i;:::-;8164:22;;:36;8156:45;;8132:70;;;7923:286;;;:::o;5439:202::-;5507:20;5615:10;5605:20;;5439:202;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:77::-;6818:7;6847:5;6836:16;;6781:77;;;:::o;6864:118::-;6951:24;6969:5;6951:24;:::i;:::-;6946:3;6939:37;6864:118;;:::o;6988:::-;7075:24;7093:5;7075:24;:::i;:::-;7070:3;7063:37;6988:118;;:::o;7112:664::-;7317:4;7355:3;7344:9;7340:19;7332:27;;7369:71;7437:1;7426:9;7422:17;7413:6;7369:71;:::i;:::-;7450:72;7518:2;7507:9;7503:18;7494:6;7450:72;:::i;:::-;7532;7600:2;7589:9;7585:18;7576:6;7532:72;:::i;:::-;7614;7682:2;7671:9;7667:18;7658:6;7614:72;:::i;:::-;7696:73;7764:3;7753:9;7749:19;7740:6;7696:73;:::i;:::-;7112:664;;;;;;;;:::o;7782:169::-;7866:11;7900:6;7895:3;7888:19;7940:4;7935:3;7931:14;7916:29;;7782:169;;;;:::o;7957:246::-;8038:1;8048:113;8062:6;8059:1;8056:13;8048:113;;;8147:1;8142:3;8138:11;8132:18;8128:1;8123:3;8119:11;8112:39;8084:2;8081:1;8077:10;8072:15;;8048:113;;;8195:1;8186:6;8181:3;8177:16;8170:27;8019:184;7957:246;;;:::o;8209:102::-;8250:6;8301:2;8297:7;8292:2;8285:5;8281:14;8277:28;8267:38;;8209:102;;;:::o;8317:377::-;8405:3;8433:39;8466:5;8433:39;:::i;:::-;8488:71;8552:6;8547:3;8488:71;:::i;:::-;8481:78;;8568:65;8626:6;8621:3;8614:4;8607:5;8603:16;8568:65;:::i;:::-;8658:29;8680:6;8658:29;:::i;:::-;8653:3;8649:39;8642:46;;8409:285;8317:377;;;;:::o;8700:313::-;8813:4;8851:2;8840:9;8836:18;8828:26;;8900:9;8894:4;8890:20;8886:1;8875:9;8871:17;8864:47;8928:78;9001:4;8992:6;8928:78;:::i;:::-;8920:86;;8700:313;;;;:::o;9019:98::-;9070:6;9104:5;9098:12;9088:22;;9019:98;;;:::o;9123:116::-;9174:4;9197:3;9189:11;;9227:4;9222:3;9218:14;9210:22;;9123:116;;;:::o;9245:154::-;9288:11;9324:29;9348:3;9342:10;9324:29;:::i;:::-;9387:5;9363:29;;9300:99;9245:154;;;:::o;9405:594::-;9489:5;9520:38;9552:5;9520:38;:::i;:::-;9583:5;9610:40;9644:5;9610:40;:::i;:::-;9598:52;;9669:35;9695:8;9669:35;:::i;:::-;9660:44;;9728:2;9720:6;9717:14;9714:278;;;9799:169;9884:66;9854:6;9850:2;9846:15;9843:1;9839:23;9799:169;:::i;:::-;9776:5;9755:227;9746:236;;9714:278;9495:504;;9405:594;;;:::o;80743:685:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3551": {
									"entryPoint": 1245,
									"id": 3551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2098": {
									"entryPoint": 3789,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2110": {
									"entryPoint": 3848,
									"id": 2110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_3300": {
									"entryPoint": 2549,
									"id": 3300,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_3360": {
									"entryPoint": 4061,
									"id": 3360,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2028": {
									"entryPoint": 5061,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_3282": {
									"entryPoint": 3397,
									"id": 3282,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_2740": {
									"entryPoint": 3135,
									"id": 2740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_2007": {
									"entryPoint": 2953,
									"id": 2007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2044": {
									"entryPoint": 3990,
									"id": 2044,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_3249": {
									"entryPoint": 3270,
									"id": 3249,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2640": {
									"entryPoint": 2542,
									"id": 2640,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_3408": {
									"entryPoint": 2567,
									"id": 3408,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2457": {
									"entryPoint": 5678,
									"id": 2457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_2802": {
									"entryPoint": 3524,
									"id": 2802,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_3139": {
									"entryPoint": 2713,
									"id": 3139,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_3216": {
									"entryPoint": 4524,
									"id": 3216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_41": {
									"entryPoint": 3907,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_3036": {
									"entryPoint": 2280,
									"id": 3036,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_3060": {
									"entryPoint": 1148,
									"id": 3060,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_2995": {
									"entryPoint": 1334,
									"id": 2995,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_3592": {
									"entryPoint": 1422,
									"id": 3592,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_3571": {
									"entryPoint": 1314,
									"id": 3571,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@byteLength_315": {
									"entryPoint": 6146,
									"id": 315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_2973": {
									"entryPoint": 1237,
									"id": 2973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2086": {
									"entryPoint": 1471,
									"id": 2086,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3642": {
									"entryPoint": 1259,
									"id": 3642,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_2955": {
									"entryPoint": 1004,
									"id": 2955,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_26": {
									"entryPoint": 3719,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3541": {
									"entryPoint": 1454,
									"id": 3541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2723": {
									"entryPoint": 1636,
									"id": 2723,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_3524": {
									"entryPoint": 1955,
									"id": 3524,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_2408": {
									"entryPoint": 4015,
									"id": 2408,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_2754": {
									"entryPoint": 1403,
									"id": 2754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_2964": {
									"entryPoint": 1676,
									"id": 2964,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_382": {
									"entryPoint": 5210,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_283": {
									"entryPoint": 6032,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_1891": {
									"entryPoint": 5383,
									"id": 1891,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_2982": {
									"entryPoint": 1182,
									"id": 2982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_3092": {
									"entryPoint": 1191,
									"id": 3092,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_2782": {
									"entryPoint": 2410,
									"id": 2782,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferParticipationToken_3688": {
									"entryPoint": 1854,
									"id": 3688,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@transfer_3019": {
									"entryPoint": 1820,
									"id": 3019,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_2372": {
									"entryPoint": 5447,
									"id": 2372,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 6468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 7492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_address": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 7554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 7002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8493,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8532,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7215,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8398,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19235:1",
										"nodeType": "YulBlock",
										"src": "0:19235:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:184:1",
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nativeSrc": "359:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:1",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:1",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:1",
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nativeSrc": "449:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nativeSrc": "468:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nativeSrc": "462:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nativeSrc": "442:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nativeSrc": "442:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nativeSrc": "386:13:1",
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nativeSrc": "378:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:1",
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nativeSrc": "402:15:1",
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:1",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nativeSrc": "407:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:1",
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nativeSrc": "507:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:1",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nativeSrc": "500:27:1",
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nativeSrc": "500:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nativeSrc": "587:54:1",
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nativeSrc": "597:38:1",
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:1",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nativeSrc": "611:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:1",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nativeSrc": "627:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nativeSrc": "607:28:1",
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:1",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:1",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nativeSrc": "739:285:1",
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nativeSrc": "749:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nativeSrc": "763:39:1",
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:1",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:1",
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nativeSrc": "818:71:1",
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:1",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nativeSrc": "933:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nativeSrc": "898:65:1",
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nativeSrc": "898:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nativeSrc": "972:46:1",
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nativeSrc": "988:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nativeSrc": "979:39:1",
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:1",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:1",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:1",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nativeSrc": "1148:195:1",
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nativeSrc": "1158:26:1",
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nativeSrc": "1166:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nativeSrc": "1201:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nativeSrc": "1194:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nativeSrc": "1194:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nativeSrc": "1250:86:1",
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nativeSrc": "1258:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:1",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:1",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:1",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nativeSrc": "1389:35:1",
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nativeSrc": "1399:19:1",
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nativeSrc": "1409:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:1",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nativeSrc": "1519:28:1",
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nativeSrc": "1529:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nativeSrc": "1529:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nativeSrc": "1642:28:1",
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nativeSrc": "1652:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nativeSrc": "1721:81:1",
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nativeSrc": "1731:65:1",
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nativeSrc": "1742:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:1",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:1",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nativeSrc": "1853:51:1",
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nativeSrc": "1863:35:1",
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nativeSrc": "1874:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:1",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:1",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nativeSrc": "1953:79:1",
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:1",
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nativeSrc": "2012:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nativeSrc": "2012:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nativeSrc": "1983:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nativeSrc": "1973:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nativeSrc": "1966:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nativeSrc": "1963:63:1",
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:1",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nativeSrc": "2090:87:1",
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nativeSrc": "2100:29:1",
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nativeSrc": "2109:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nativeSrc": "2138:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nativeSrc": "2138:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:1",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:1",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:1",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nativeSrc": "2228:32:1",
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nativeSrc": "2238:16:1",
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:1",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:1",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:1",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nativeSrc": "2309:79:1",
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:1",
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nativeSrc": "2368:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nativeSrc": "2368:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nativeSrc": "2339:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nativeSrc": "2329:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nativeSrc": "2322:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nativeSrc": "2319:63:1",
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:1",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nativeSrc": "2446:87:1",
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nativeSrc": "2456:29:1",
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nativeSrc": "2465:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nativeSrc": "2494:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nativeSrc": "2494:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:1",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:1",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:1",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nativeSrc": "2622:391:1",
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:1",
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nativeSrc": "2670:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nativeSrc": "2670:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nativeSrc": "2639:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nativeSrc": "2635:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nativeSrc": "2632:119:1",
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nativeSrc": "2761:117:1",
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nativeSrc": "2776:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nativeSrc": "2836:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nativeSrc": "2815:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:1",
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nativeSrc": "2903:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nativeSrc": "2964:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nativeSrc": "2943:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:1",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:1",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:1",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nativeSrc": "3061:48:1",
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nativeSrc": "3071:32:1",
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nativeSrc": "3089:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nativeSrc": "3082:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:1",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:1",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nativeSrc": "3174:50:1",
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nativeSrc": "3196:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nativeSrc": "3184:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nativeSrc": "3184:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:1",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:1",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nativeSrc": "3322:118:1",
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nativeSrc": "3332:26:1",
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nativeSrc": "3340:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nativeSrc": "3415:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nativeSrc": "3368:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nativeSrc": "3368:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:1",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:1",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:1",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nativeSrc": "3511:53:1",
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nativeSrc": "3533:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nativeSrc": "3521:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nativeSrc": "3521:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:1",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:1",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nativeSrc": "3668:124:1",
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nativeSrc": "3678:26:1",
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nativeSrc": "3686:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nativeSrc": "3767:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nativeSrc": "3714:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nativeSrc": "3714:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:1",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:1",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:1",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nativeSrc": "3898:519:1",
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:1",
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nativeSrc": "3946:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nativeSrc": "3946:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nativeSrc": "3915:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nativeSrc": "3911:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nativeSrc": "3908:119:1",
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nativeSrc": "4037:117:1",
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nativeSrc": "4052:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nativeSrc": "4112:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nativeSrc": "4091:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:1",
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nativeSrc": "4179:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nativeSrc": "4240:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nativeSrc": "4219:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:1",
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nativeSrc": "4307:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nativeSrc": "4368:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nativeSrc": "4347:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:1",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:1",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:1",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:1",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nativeSrc": "4466:43:1",
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nativeSrc": "4476:27:1",
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nativeSrc": "4487:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:1",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:1",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nativeSrc": "4576:51:1",
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nativeSrc": "4598:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nativeSrc": "4586:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nativeSrc": "4586:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:1",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:1",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nativeSrc": "4727:120:1",
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nativeSrc": "4737:26:1",
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nativeSrc": "4745:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nativeSrc": "4822:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nativeSrc": "4773:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nativeSrc": "4773:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:1",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:1",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:1",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nativeSrc": "4898:32:1",
													"nodeType": "YulBlock",
													"src": "4898:32:1",
													"statements": [
														{
															"nativeSrc": "4908:16:1",
															"nodeType": "YulAssignment",
															"src": "4908:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "4919:5:1",
																"nodeType": "YulIdentifier",
																"src": "4919:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4908:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4853:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4880:5:1",
														"nodeType": "YulTypedName",
														"src": "4880:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4890:7:1",
														"nodeType": "YulTypedName",
														"src": "4890:7:1",
														"type": ""
													}
												],
												"src": "4853:77:1"
											},
											{
												"body": {
													"nativeSrc": "5001:53:1",
													"nodeType": "YulBlock",
													"src": "5001:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5018:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5041:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5023:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:1"
																		},
																		"nativeSrc": "5023:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:1"
																},
																"nativeSrc": "5011:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5011:37:1"
															},
															"nativeSrc": "5011:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4936:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4989:5:1",
														"nodeType": "YulTypedName",
														"src": "4989:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4996:3:1",
														"nodeType": "YulTypedName",
														"src": "4996:3:1",
														"type": ""
													}
												],
												"src": "4936:118:1"
											},
											{
												"body": {
													"nativeSrc": "5158:124:1",
													"nodeType": "YulBlock",
													"src": "5158:124:1",
													"statements": [
														{
															"nativeSrc": "5168:26:1",
															"nodeType": "YulAssignment",
															"src": "5168:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5180:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5176:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:1"
																},
																"nativeSrc": "5176:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5176:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5168:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5248:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5272:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5257:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:1"
																		},
																		"nativeSrc": "5257:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5204:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:1"
																},
																"nativeSrc": "5204:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5204:71:1"
															},
															"nativeSrc": "5204:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5060:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5130:9:1",
														"nodeType": "YulTypedName",
														"src": "5130:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5142:6:1",
														"nodeType": "YulTypedName",
														"src": "5142:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5153:4:1",
														"nodeType": "YulTypedName",
														"src": "5153:4:1",
														"type": ""
													}
												],
												"src": "5060:222:1"
											},
											{
												"body": {
													"nativeSrc": "5354:263:1",
													"nodeType": "YulBlock",
													"src": "5354:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5400:83:1",
																"nodeType": "YulBlock",
																"src": "5400:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5402:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:1"
																			},
																			"nativeSrc": "5402:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:1"
																		},
																		"nativeSrc": "5402:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5375:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5371:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:1"
																		},
																		"nativeSrc": "5371:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5367:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:1"
																},
																"nativeSrc": "5367:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5367:32:1"
															},
															"nativeSrc": "5364:119:1",
															"nodeType": "YulIf",
															"src": "5364:119:1"
														},
														{
															"nativeSrc": "5493:117:1",
															"nodeType": "YulBlock",
															"src": "5493:117:1",
															"statements": [
																{
																	"nativeSrc": "5508:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5522:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5512:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5537:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5537:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5572:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5583:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5568:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:1"
																				},
																				"nativeSrc": "5568:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5592:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5547:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:1"
																		},
																		"nativeSrc": "5547:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5537:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5288:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:1",
														"nodeType": "YulTypedName",
														"src": "5324:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5335:7:1",
														"nodeType": "YulTypedName",
														"src": "5335:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5347:6:1",
														"nodeType": "YulTypedName",
														"src": "5347:6:1",
														"type": ""
													}
												],
												"src": "5288:329:1"
											},
											{
												"body": {
													"nativeSrc": "5689:263:1",
													"nodeType": "YulBlock",
													"src": "5689:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5735:83:1",
																"nodeType": "YulBlock",
																"src": "5735:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5737:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5737:77:1"
																			},
																			"nativeSrc": "5737:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5737:79:1"
																		},
																		"nativeSrc": "5737:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5737:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5710:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5710:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5719:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5706:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5706:3:1"
																		},
																		"nativeSrc": "5706:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5706:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5731:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5731:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5702:3:1"
																},
																"nativeSrc": "5702:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5702:32:1"
															},
															"nativeSrc": "5699:119:1",
															"nodeType": "YulIf",
															"src": "5699:119:1"
														},
														{
															"nativeSrc": "5828:117:1",
															"nodeType": "YulBlock",
															"src": "5828:117:1",
															"statements": [
																{
																	"nativeSrc": "5843:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5843:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5857:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5857:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5847:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5847:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5872:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5872:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5907:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5907:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5918:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5918:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5903:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5903:3:1"
																				},
																				"nativeSrc": "5903:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5903:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5927:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5927:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5882:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5882:20:1"
																		},
																		"nativeSrc": "5882:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5882:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5872:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5872:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5623:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5659:9:1",
														"nodeType": "YulTypedName",
														"src": "5659:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5670:7:1",
														"nodeType": "YulTypedName",
														"src": "5670:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5682:6:1",
														"nodeType": "YulTypedName",
														"src": "5682:6:1",
														"type": ""
													}
												],
												"src": "5623:329:1"
											},
											{
												"body": {
													"nativeSrc": "6002:105:1",
													"nodeType": "YulBlock",
													"src": "6002:105:1",
													"statements": [
														{
															"nativeSrc": "6012:89:1",
															"nodeType": "YulAssignment",
															"src": "6012:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6027:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6027:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6034:66:1",
																		"nodeType": "YulLiteral",
																		"src": "6034:66:1",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6023:3:1"
																},
																"nativeSrc": "6023:78:1",
																"nodeType": "YulFunctionCall",
																"src": "6023:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6012:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6012:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5958:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5984:5:1",
														"nodeType": "YulTypedName",
														"src": "5984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5994:7:1",
														"nodeType": "YulTypedName",
														"src": "5994:7:1",
														"type": ""
													}
												],
												"src": "5958:149:1"
											},
											{
												"body": {
													"nativeSrc": "6176:52:1",
													"nodeType": "YulBlock",
													"src": "6176:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6193:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6193:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6215:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6215:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "6198:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "6198:16:1"
																		},
																		"nativeSrc": "6198:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6198:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6186:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6186:6:1"
																},
																"nativeSrc": "6186:36:1",
																"nodeType": "YulFunctionCall",
																"src": "6186:36:1"
															},
															"nativeSrc": "6186:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "6186:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "6113:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6164:5:1",
														"nodeType": "YulTypedName",
														"src": "6164:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6171:3:1",
														"nodeType": "YulTypedName",
														"src": "6171:3:1",
														"type": ""
													}
												],
												"src": "6113:115:1"
											},
											{
												"body": {
													"nativeSrc": "6299:53:1",
													"nodeType": "YulBlock",
													"src": "6299:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6316:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6316:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6339:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6339:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6321:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6321:17:1"
																		},
																		"nativeSrc": "6321:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6321:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6309:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6309:6:1"
																},
																"nativeSrc": "6309:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6309:37:1"
															},
															"nativeSrc": "6309:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6309:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6234:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6287:5:1",
														"nodeType": "YulTypedName",
														"src": "6287:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6294:3:1",
														"nodeType": "YulTypedName",
														"src": "6294:3:1",
														"type": ""
													}
												],
												"src": "6234:118:1"
											},
											{
												"body": {
													"nativeSrc": "6432:40:1",
													"nodeType": "YulBlock",
													"src": "6432:40:1",
													"statements": [
														{
															"nativeSrc": "6443:22:1",
															"nodeType": "YulAssignment",
															"src": "6443:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6459:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6459:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6453:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6453:5:1"
																},
																"nativeSrc": "6453:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6453:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6443:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6358:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6415:5:1",
														"nodeType": "YulTypedName",
														"src": "6415:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6425:6:1",
														"nodeType": "YulTypedName",
														"src": "6425:6:1",
														"type": ""
													}
												],
												"src": "6358:114:1"
											},
											{
												"body": {
													"nativeSrc": "6589:73:1",
													"nodeType": "YulBlock",
													"src": "6589:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6606:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6606:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6611:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6611:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6599:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6599:6:1"
																},
																"nativeSrc": "6599:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6599:19:1"
															},
															"nativeSrc": "6599:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6599:19:1"
														},
														{
															"nativeSrc": "6627:29:1",
															"nodeType": "YulAssignment",
															"src": "6627:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6646:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6646:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6651:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6651:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6642:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6642:3:1"
																},
																"nativeSrc": "6642:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6642:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6627:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "6627:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6478:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6561:3:1",
														"nodeType": "YulTypedName",
														"src": "6561:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6566:6:1",
														"nodeType": "YulTypedName",
														"src": "6566:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6577:11:1",
														"nodeType": "YulTypedName",
														"src": "6577:11:1",
														"type": ""
													}
												],
												"src": "6478:184:1"
											},
											{
												"body": {
													"nativeSrc": "6740:60:1",
													"nodeType": "YulBlock",
													"src": "6740:60:1",
													"statements": [
														{
															"nativeSrc": "6750:11:1",
															"nodeType": "YulAssignment",
															"src": "6750:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "6758:3:1",
																"nodeType": "YulIdentifier",
																"src": "6758:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6750:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6750:4:1"
																}
															]
														},
														{
															"nativeSrc": "6771:22:1",
															"nodeType": "YulAssignment",
															"src": "6771:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6788:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6788:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6779:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6779:3:1"
																},
																"nativeSrc": "6779:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6779:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6771:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6771:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6668:132:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6727:3:1",
														"nodeType": "YulTypedName",
														"src": "6727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6735:4:1",
														"nodeType": "YulTypedName",
														"src": "6735:4:1",
														"type": ""
													}
												],
												"src": "6668:132:1"
											},
											{
												"body": {
													"nativeSrc": "6861:53:1",
													"nodeType": "YulBlock",
													"src": "6861:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6878:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6878:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6901:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6901:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6883:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6883:17:1"
																		},
																		"nativeSrc": "6883:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6883:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6871:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6871:6:1"
																},
																"nativeSrc": "6871:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6871:37:1"
															},
															"nativeSrc": "6871:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6871:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6806:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6849:5:1",
														"nodeType": "YulTypedName",
														"src": "6849:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6856:3:1",
														"nodeType": "YulTypedName",
														"src": "6856:3:1",
														"type": ""
													}
												],
												"src": "6806:108:1"
											},
											{
												"body": {
													"nativeSrc": "7000:99:1",
													"nodeType": "YulBlock",
													"src": "7000:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7044:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7052:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7052:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "7010:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "7010:33:1"
																},
																"nativeSrc": "7010:46:1",
																"nodeType": "YulFunctionCall",
																"src": "7010:46:1"
															},
															"nativeSrc": "7010:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "7010:46:1"
														},
														{
															"nativeSrc": "7065:28:1",
															"nodeType": "YulAssignment",
															"src": "7065:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7083:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7083:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7088:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7088:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7079:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7079:3:1"
																},
																"nativeSrc": "7079:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7079:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7065:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "7065:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6920:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6973:6:1",
														"nodeType": "YulTypedName",
														"src": "6973:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6981:3:1",
														"nodeType": "YulTypedName",
														"src": "6981:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6989:10:1",
														"nodeType": "YulTypedName",
														"src": "6989:10:1",
														"type": ""
													}
												],
												"src": "6920:179:1"
											},
											{
												"body": {
													"nativeSrc": "7180:38:1",
													"nodeType": "YulBlock",
													"src": "7180:38:1",
													"statements": [
														{
															"nativeSrc": "7190:22:1",
															"nodeType": "YulAssignment",
															"src": "7190:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7202:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7202:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7207:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7207:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7198:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7198:3:1"
																},
																"nativeSrc": "7198:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7198:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7190:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7190:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7105:113:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7167:3:1",
														"nodeType": "YulTypedName",
														"src": "7167:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7175:4:1",
														"nodeType": "YulTypedName",
														"src": "7175:4:1",
														"type": ""
													}
												],
												"src": "7105:113:1"
											},
											{
												"body": {
													"nativeSrc": "7378:608:1",
													"nodeType": "YulBlock",
													"src": "7378:608:1",
													"statements": [
														{
															"nativeSrc": "7388:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7388:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7450:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7450:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7402:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "7402:47:1"
																},
																"nativeSrc": "7402:54:1",
																"nodeType": "YulFunctionCall",
																"src": "7402:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7392:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7392:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7465:93:1",
															"nodeType": "YulAssignment",
															"src": "7465:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7546:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7546:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7551:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7551:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7472:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "7472:73:1"
																},
																"nativeSrc": "7472:86:1",
																"nodeType": "YulFunctionCall",
																"src": "7472:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7465:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7465:3:1"
																}
															]
														},
														{
															"nativeSrc": "7567:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7567:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7632:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7632:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7582:49:1",
																	"nodeType": "YulIdentifier",
																	"src": "7582:49:1"
																},
																"nativeSrc": "7582:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7582:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7571:7:1",
																	"nodeType": "YulTypedName",
																	"src": "7571:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7647:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7647:21:1",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7661:7:1",
																"nodeType": "YulIdentifier",
																"src": "7661:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7651:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7651:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7737:224:1",
																"nodeType": "YulBlock",
																"src": "7737:224:1",
																"statements": [
																	{
																		"nativeSrc": "7751:34:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7751:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7778:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7778:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7772:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7772:5:1"
																			},
																			"nativeSrc": "7772:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7772:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7755:13:1",
																				"nodeType": "YulTypedName",
																				"src": "7755:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7798:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7798:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7849:13:1",
																					"nodeType": "YulIdentifier",
																					"src": "7849:13:1"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7864:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7864:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7805:43:1",
																				"nodeType": "YulIdentifier",
																				"src": "7805:43:1"
																			},
																			"nativeSrc": "7805:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7805:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7798:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7798:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7881:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7881:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7944:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7944:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7891:52:1",
																				"nodeType": "YulIdentifier",
																				"src": "7891:52:1"
																			},
																			"nativeSrc": "7891:60:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7891:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7881:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7881:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7699:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7699:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7702:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7702:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7696:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7696:2:1"
																},
																"nativeSrc": "7696:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7696:13:1"
															},
															"nativeSrc": "7677:284:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7710:18:1",
																"nodeType": "YulBlock",
																"src": "7710:18:1",
																"statements": [
																	{
																		"nativeSrc": "7712:14:1",
																		"nodeType": "YulAssignment",
																		"src": "7712:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7721:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "7721:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7724:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7724:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7717:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7717:3:1"
																			},
																			"nativeSrc": "7717:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7717:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7712:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7712:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7681:14:1",
																"nodeType": "YulBlock",
																"src": "7681:14:1",
																"statements": [
																	{
																		"nativeSrc": "7683:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7683:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7692:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7692:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7687:1:1",
																				"nodeType": "YulTypedName",
																				"src": "7687:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7677:284:1"
														},
														{
															"nativeSrc": "7970:10:1",
															"nodeType": "YulAssignment",
															"src": "7970:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "7977:3:1",
																"nodeType": "YulIdentifier",
																"src": "7977:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7970:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7970:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7254:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7357:5:1",
														"nodeType": "YulTypedName",
														"src": "7357:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7364:3:1",
														"nodeType": "YulTypedName",
														"src": "7364:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7373:3:1",
														"nodeType": "YulTypedName",
														"src": "7373:3:1",
														"type": ""
													}
												],
												"src": "7254:732:1"
											},
											{
												"body": {
													"nativeSrc": "8346:861:1",
													"nodeType": "YulBlock",
													"src": "8346:861:1",
													"statements": [
														{
															"nativeSrc": "8356:27:1",
															"nodeType": "YulAssignment",
															"src": "8356:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8368:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8368:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8379:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8364:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8364:3:1"
																},
																"nativeSrc": "8364:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8364:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8356:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8435:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8435:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8448:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8448:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8459:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8459:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:1"
																		},
																		"nativeSrc": "8444:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8444:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "8393:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "8393:41:1"
																},
																"nativeSrc": "8393:69:1",
																"nodeType": "YulFunctionCall",
																"src": "8393:69:1"
															},
															"nativeSrc": "8393:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "8393:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8483:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8494:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8479:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:1"
																		},
																		"nativeSrc": "8479:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8503:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8503:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8509:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8509:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8499:3:1"
																		},
																		"nativeSrc": "8499:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8499:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8472:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8472:6:1"
																},
																"nativeSrc": "8472:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8472:48:1"
															},
															"nativeSrc": "8472:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8472:48:1"
														},
														{
															"nativeSrc": "8529:86:1",
															"nodeType": "YulAssignment",
															"src": "8529:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8601:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8601:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8610:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8610:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8537:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8537:63:1"
																},
																"nativeSrc": "8537:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8537:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8529:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8529:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8636:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8647:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8647:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8632:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8632:3:1"
																		},
																		"nativeSrc": "8632:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8632:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8656:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8656:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8662:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8662:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8652:3:1"
																		},
																		"nativeSrc": "8652:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8652:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8625:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8625:6:1"
																},
																"nativeSrc": "8625:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8625:48:1"
															},
															"nativeSrc": "8625:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8625:48:1"
														},
														{
															"nativeSrc": "8682:86:1",
															"nodeType": "YulAssignment",
															"src": "8682:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8754:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8754:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8763:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8763:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8690:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8690:63:1"
																},
																"nativeSrc": "8690:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8690:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8682:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8682:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8822:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8835:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8835:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8846:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8846:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8831:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8831:3:1"
																		},
																		"nativeSrc": "8831:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8831:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8778:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8778:43:1"
																},
																"nativeSrc": "8778:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8778:72:1"
															},
															"nativeSrc": "8778:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8778:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8904:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8904:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8917:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8917:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8928:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8928:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8913:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8913:3:1"
																		},
																		"nativeSrc": "8913:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8860:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:43:1"
																},
																"nativeSrc": "8860:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8860:73:1"
															},
															"nativeSrc": "8860:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8860:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8987:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8987:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9000:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9011:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8996:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8996:3:1"
																		},
																		"nativeSrc": "8996:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8996:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8943:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8943:43:1"
																},
																"nativeSrc": "8943:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8943:73:1"
															},
															"nativeSrc": "8943:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8943:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9037:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9037:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9048:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9048:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9033:3:1"
																		},
																		"nativeSrc": "9033:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9033:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9058:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9058:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9064:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9064:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9054:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9054:3:1"
																		},
																		"nativeSrc": "9054:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9054:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9026:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9026:6:1"
																},
																"nativeSrc": "9026:49:1",
																"nodeType": "YulFunctionCall",
																"src": "9026:49:1"
															},
															"nativeSrc": "9026:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "9026:49:1"
														},
														{
															"nativeSrc": "9084:116:1",
															"nodeType": "YulAssignment",
															"src": "9084:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "9186:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9186:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9195:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9195:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9092:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "9092:93:1"
																},
																"nativeSrc": "9092:108:1",
																"nodeType": "YulFunctionCall",
																"src": "9092:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9084:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9084:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7992:1215:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8270:9:1",
														"nodeType": "YulTypedName",
														"src": "8270:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "8282:6:1",
														"nodeType": "YulTypedName",
														"src": "8282:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8290:6:1",
														"nodeType": "YulTypedName",
														"src": "8290:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8298:6:1",
														"nodeType": "YulTypedName",
														"src": "8298:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8306:6:1",
														"nodeType": "YulTypedName",
														"src": "8306:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8314:6:1",
														"nodeType": "YulTypedName",
														"src": "8314:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8322:6:1",
														"nodeType": "YulTypedName",
														"src": "8322:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8330:6:1",
														"nodeType": "YulTypedName",
														"src": "8330:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8341:4:1",
														"nodeType": "YulTypedName",
														"src": "8341:4:1",
														"type": ""
													}
												],
												"src": "7992:1215:1"
											},
											{
												"body": {
													"nativeSrc": "9311:124:1",
													"nodeType": "YulBlock",
													"src": "9311:124:1",
													"statements": [
														{
															"nativeSrc": "9321:26:1",
															"nodeType": "YulAssignment",
															"src": "9321:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9333:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9333:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9344:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9344:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9329:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9329:3:1"
																},
																"nativeSrc": "9329:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9329:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9321:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9321:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9401:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9401:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9414:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9414:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9425:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9425:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9410:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9410:3:1"
																		},
																		"nativeSrc": "9410:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9410:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9357:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9357:43:1"
																},
																"nativeSrc": "9357:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9357:71:1"
															},
															"nativeSrc": "9357:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9357:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9213:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9283:9:1",
														"nodeType": "YulTypedName",
														"src": "9283:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9295:6:1",
														"nodeType": "YulTypedName",
														"src": "9295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9306:4:1",
														"nodeType": "YulTypedName",
														"src": "9306:4:1",
														"type": ""
													}
												],
												"src": "9213:222:1"
											},
											{
												"body": {
													"nativeSrc": "9558:648:1",
													"nodeType": "YulBlock",
													"src": "9558:648:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9605:83:1",
																"nodeType": "YulBlock",
																"src": "9605:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9607:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9607:77:1"
																			},
																			"nativeSrc": "9607:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9607:79:1"
																		},
																		"nativeSrc": "9607:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9607:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9579:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9579:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9588:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9588:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9575:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:1"
																		},
																		"nativeSrc": "9575:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9575:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9600:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9600:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9571:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9571:3:1"
																},
																"nativeSrc": "9571:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9571:33:1"
															},
															"nativeSrc": "9568:120:1",
															"nodeType": "YulIf",
															"src": "9568:120:1"
														},
														{
															"nativeSrc": "9698:117:1",
															"nodeType": "YulBlock",
															"src": "9698:117:1",
															"statements": [
																{
																	"nativeSrc": "9713:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9713:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9727:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9727:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9717:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9717:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9742:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9742:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9777:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9777:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9788:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9788:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9773:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9773:3:1"
																				},
																				"nativeSrc": "9773:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9773:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9797:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9797:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9752:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9752:20:1"
																		},
																		"nativeSrc": "9752:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9752:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9742:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9742:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9825:118:1",
															"nodeType": "YulBlock",
															"src": "9825:118:1",
															"statements": [
																{
																	"nativeSrc": "9840:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9840:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9854:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9854:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9844:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9844:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9870:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9870:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9905:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9905:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9916:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9916:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9901:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9901:3:1"
																				},
																				"nativeSrc": "9901:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9901:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9925:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9925:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9880:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9880:20:1"
																		},
																		"nativeSrc": "9880:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9880:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9870:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9870:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9953:118:1",
															"nodeType": "YulBlock",
															"src": "9953:118:1",
															"statements": [
																{
																	"nativeSrc": "9968:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9968:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9982:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9982:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9972:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9972:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9998:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9998:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10033:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10033:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10044:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10044:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10029:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10029:3:1"
																				},
																				"nativeSrc": "10029:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10029:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10053:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10053:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10008:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10008:20:1"
																		},
																		"nativeSrc": "10008:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10008:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9998:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9998:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10081:118:1",
															"nodeType": "YulBlock",
															"src": "10081:118:1",
															"statements": [
																{
																	"nativeSrc": "10096:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10096:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10110:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10110:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10100:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10100:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10126:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10126:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10161:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10161:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10172:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10172:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10157:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10157:3:1"
																				},
																				"nativeSrc": "10157:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10157:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10181:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10181:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10136:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10136:20:1"
																		},
																		"nativeSrc": "10136:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10136:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10126:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10126:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_address",
												"nativeSrc": "9441:765:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9504:9:1",
														"nodeType": "YulTypedName",
														"src": "9504:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9515:7:1",
														"nodeType": "YulTypedName",
														"src": "9515:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9527:6:1",
														"nodeType": "YulTypedName",
														"src": "9527:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9535:6:1",
														"nodeType": "YulTypedName",
														"src": "9535:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9543:6:1",
														"nodeType": "YulTypedName",
														"src": "9543:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9551:6:1",
														"nodeType": "YulTypedName",
														"src": "9551:6:1",
														"type": ""
													}
												],
												"src": "9441:765:1"
											},
											{
												"body": {
													"nativeSrc": "10253:77:1",
													"nodeType": "YulBlock",
													"src": "10253:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10308:16:1",
																"nodeType": "YulBlock",
																"src": "10308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10317:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10320:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10310:6:1"
																			},
																			"nativeSrc": "10310:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10310:12:1"
																		},
																		"nativeSrc": "10310:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10276:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10276:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10299:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "10299:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "10283:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "10283:15:1"
																				},
																				"nativeSrc": "10283:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10283:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10273:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10273:2:1"
																		},
																		"nativeSrc": "10273:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10273:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10266:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10266:6:1"
																},
																"nativeSrc": "10266:41:1",
																"nodeType": "YulFunctionCall",
																"src": "10266:41:1"
															},
															"nativeSrc": "10263:61:1",
															"nodeType": "YulIf",
															"src": "10263:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "10212:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10246:5:1",
														"nodeType": "YulTypedName",
														"src": "10246:5:1",
														"type": ""
													}
												],
												"src": "10212:118:1"
											},
											{
												"body": {
													"nativeSrc": "10386:85:1",
													"nodeType": "YulBlock",
													"src": "10386:85:1",
													"statements": [
														{
															"nativeSrc": "10396:29:1",
															"nodeType": "YulAssignment",
															"src": "10396:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10418:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10418:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10405:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "10405:12:1"
																},
																"nativeSrc": "10405:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10405:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10396:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10396:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10459:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "10434:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "10434:24:1"
																},
																"nativeSrc": "10434:31:1",
																"nodeType": "YulFunctionCall",
																"src": "10434:31:1"
															},
															"nativeSrc": "10434:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "10434:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "10336:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10364:6:1",
														"nodeType": "YulTypedName",
														"src": "10364:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10372:3:1",
														"nodeType": "YulTypedName",
														"src": "10372:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10380:5:1",
														"nodeType": "YulTypedName",
														"src": "10380:5:1",
														"type": ""
													}
												],
												"src": "10336:135:1"
											},
											{
												"body": {
													"nativeSrc": "10520:79:1",
													"nodeType": "YulBlock",
													"src": "10520:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10577:16:1",
																"nodeType": "YulBlock",
																"src": "10577:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10586:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10586:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10589:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10589:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10579:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10579:6:1"
																			},
																			"nativeSrc": "10579:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10579:12:1"
																		},
																		"nativeSrc": "10579:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10579:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10543:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10543:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10568:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "10568:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "10550:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "10550:17:1"
																				},
																				"nativeSrc": "10550:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10550:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10540:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10540:2:1"
																		},
																		"nativeSrc": "10540:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10533:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10533:6:1"
																},
																"nativeSrc": "10533:43:1",
																"nodeType": "YulFunctionCall",
																"src": "10533:43:1"
															},
															"nativeSrc": "10530:63:1",
															"nodeType": "YulIf",
															"src": "10530:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "10477:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10513:5:1",
														"nodeType": "YulTypedName",
														"src": "10513:5:1",
														"type": ""
													}
												],
												"src": "10477:122:1"
											},
											{
												"body": {
													"nativeSrc": "10657:87:1",
													"nodeType": "YulBlock",
													"src": "10657:87:1",
													"statements": [
														{
															"nativeSrc": "10667:29:1",
															"nodeType": "YulAssignment",
															"src": "10667:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10689:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10689:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10676:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "10676:12:1"
																},
																"nativeSrc": "10676:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10676:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10667:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10667:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10732:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10732:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "10705:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "10705:26:1"
																},
																"nativeSrc": "10705:33:1",
																"nodeType": "YulFunctionCall",
																"src": "10705:33:1"
															},
															"nativeSrc": "10705:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "10705:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "10605:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10635:6:1",
														"nodeType": "YulTypedName",
														"src": "10635:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10643:3:1",
														"nodeType": "YulTypedName",
														"src": "10643:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10651:5:1",
														"nodeType": "YulTypedName",
														"src": "10651:5:1",
														"type": ""
													}
												],
												"src": "10605:139:1"
											},
											{
												"body": {
													"nativeSrc": "10916:1033:1",
													"nodeType": "YulBlock",
													"src": "10916:1033:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10963:83:1",
																"nodeType": "YulBlock",
																"src": "10963:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10965:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10965:77:1"
																			},
																			"nativeSrc": "10965:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10965:79:1"
																		},
																		"nativeSrc": "10965:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10965:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10937:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10937:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10946:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10946:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10933:3:1"
																		},
																		"nativeSrc": "10933:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10933:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10958:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10958:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10929:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:1"
																},
																"nativeSrc": "10929:33:1",
																"nodeType": "YulFunctionCall",
																"src": "10929:33:1"
															},
															"nativeSrc": "10926:120:1",
															"nodeType": "YulIf",
															"src": "10926:120:1"
														},
														{
															"nativeSrc": "11056:117:1",
															"nodeType": "YulBlock",
															"src": "11056:117:1",
															"statements": [
																{
																	"nativeSrc": "11071:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11071:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11085:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11085:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11075:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11075:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11100:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11100:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11135:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11135:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11146:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11146:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11131:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11131:3:1"
																				},
																				"nativeSrc": "11131:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11131:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11155:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11155:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11110:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11110:20:1"
																		},
																		"nativeSrc": "11110:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11110:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11100:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11100:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11183:118:1",
															"nodeType": "YulBlock",
															"src": "11183:118:1",
															"statements": [
																{
																	"nativeSrc": "11198:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11198:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11212:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11212:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11202:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11202:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11228:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11228:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11263:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11263:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11274:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11274:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11259:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11259:3:1"
																				},
																				"nativeSrc": "11259:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11259:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11283:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11283:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11238:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11238:20:1"
																		},
																		"nativeSrc": "11238:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11228:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11228:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11311:118:1",
															"nodeType": "YulBlock",
															"src": "11311:118:1",
															"statements": [
																{
																	"nativeSrc": "11326:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11326:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11340:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11340:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11330:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11330:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11356:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11356:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11391:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11391:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11402:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11402:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11387:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11387:3:1"
																				},
																				"nativeSrc": "11387:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11387:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11411:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11411:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11366:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11366:20:1"
																		},
																		"nativeSrc": "11366:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11366:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11356:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11356:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11439:118:1",
															"nodeType": "YulBlock",
															"src": "11439:118:1",
															"statements": [
																{
																	"nativeSrc": "11454:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11454:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11468:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11468:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11458:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11458:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11484:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11484:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11519:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11519:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11530:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11530:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11515:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11515:3:1"
																				},
																				"nativeSrc": "11515:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11515:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11539:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11539:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11494:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11494:20:1"
																		},
																		"nativeSrc": "11494:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11494:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11484:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11484:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11567:117:1",
															"nodeType": "YulBlock",
															"src": "11567:117:1",
															"statements": [
																{
																	"nativeSrc": "11582:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11582:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11596:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11596:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11586:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11586:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11613:61:1",
																	"nodeType": "YulAssignment",
																	"src": "11613:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11646:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11646:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11657:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11657:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11642:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11642:3:1"
																				},
																				"nativeSrc": "11642:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11642:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11666:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11666:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "11623:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "11623:18:1"
																		},
																		"nativeSrc": "11623:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11623:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11613:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11613:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11694:119:1",
															"nodeType": "YulBlock",
															"src": "11694:119:1",
															"statements": [
																{
																	"nativeSrc": "11709:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11709:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11723:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11723:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11713:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11713:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11740:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11740:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11775:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11775:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11786:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11786:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11771:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11771:3:1"
																				},
																				"nativeSrc": "11771:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11771:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11795:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11795:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "11750:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11750:20:1"
																		},
																		"nativeSrc": "11750:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11750:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "11740:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11740:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11823:119:1",
															"nodeType": "YulBlock",
															"src": "11823:119:1",
															"statements": [
																{
																	"nativeSrc": "11838:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11838:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11852:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11852:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11842:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11842:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11869:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11869:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11904:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11904:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11915:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11915:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11900:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11900:3:1"
																				},
																				"nativeSrc": "11900:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11900:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11924:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11924:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "11879:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11879:20:1"
																		},
																		"nativeSrc": "11879:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11879:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "11869:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11869:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "10750:1199:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10838:9:1",
														"nodeType": "YulTypedName",
														"src": "10838:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10849:7:1",
														"nodeType": "YulTypedName",
														"src": "10849:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10861:6:1",
														"nodeType": "YulTypedName",
														"src": "10861:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10869:6:1",
														"nodeType": "YulTypedName",
														"src": "10869:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10877:6:1",
														"nodeType": "YulTypedName",
														"src": "10877:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10885:6:1",
														"nodeType": "YulTypedName",
														"src": "10885:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10893:6:1",
														"nodeType": "YulTypedName",
														"src": "10893:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10901:6:1",
														"nodeType": "YulTypedName",
														"src": "10901:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10909:6:1",
														"nodeType": "YulTypedName",
														"src": "10909:6:1",
														"type": ""
													}
												],
												"src": "10750:1199:1"
											},
											{
												"body": {
													"nativeSrc": "12038:391:1",
													"nodeType": "YulBlock",
													"src": "12038:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12084:83:1",
																"nodeType": "YulBlock",
																"src": "12084:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12086:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12086:77:1"
																			},
																			"nativeSrc": "12086:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12086:79:1"
																		},
																		"nativeSrc": "12086:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12086:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12059:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12059:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12068:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12068:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12055:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12055:3:1"
																		},
																		"nativeSrc": "12055:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12055:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12080:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12080:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12051:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12051:3:1"
																},
																"nativeSrc": "12051:32:1",
																"nodeType": "YulFunctionCall",
																"src": "12051:32:1"
															},
															"nativeSrc": "12048:119:1",
															"nodeType": "YulIf",
															"src": "12048:119:1"
														},
														{
															"nativeSrc": "12177:117:1",
															"nodeType": "YulBlock",
															"src": "12177:117:1",
															"statements": [
																{
																	"nativeSrc": "12192:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12192:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12206:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12206:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12196:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12196:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12221:63:1",
																	"nodeType": "YulAssignment",
																	"src": "12221:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12256:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12256:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12267:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12267:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12252:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12252:3:1"
																				},
																				"nativeSrc": "12252:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12252:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12276:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12276:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12231:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "12231:20:1"
																		},
																		"nativeSrc": "12231:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12231:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12221:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12221:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12304:118:1",
															"nodeType": "YulBlock",
															"src": "12304:118:1",
															"statements": [
																{
																	"nativeSrc": "12319:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12319:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12333:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12323:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12323:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12349:63:1",
																	"nodeType": "YulAssignment",
																	"src": "12349:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12384:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12384:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12395:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12395:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12380:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12380:3:1"
																				},
																				"nativeSrc": "12380:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12380:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12404:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12404:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12359:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "12359:20:1"
																		},
																		"nativeSrc": "12359:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12359:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12349:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11955:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12000:9:1",
														"nodeType": "YulTypedName",
														"src": "12000:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12011:7:1",
														"nodeType": "YulTypedName",
														"src": "12011:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12023:6:1",
														"nodeType": "YulTypedName",
														"src": "12023:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12031:6:1",
														"nodeType": "YulTypedName",
														"src": "12031:6:1",
														"type": ""
													}
												],
												"src": "11955:474:1"
											},
											{
												"body": {
													"nativeSrc": "12463:152:1",
													"nodeType": "YulBlock",
													"src": "12463:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12480:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12480:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12483:77:1",
																		"nodeType": "YulLiteral",
																		"src": "12483:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12473:6:1"
																},
																"nativeSrc": "12473:88:1",
																"nodeType": "YulFunctionCall",
																"src": "12473:88:1"
															},
															"nativeSrc": "12473:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "12473:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12577:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12577:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12580:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12580:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12570:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12570:6:1"
																},
																"nativeSrc": "12570:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12570:15:1"
															},
															"nativeSrc": "12570:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12570:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12601:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12601:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12604:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12604:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12594:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12594:6:1"
																},
																"nativeSrc": "12594:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12594:15:1"
															},
															"nativeSrc": "12594:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12594:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12435:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "12435:180:1"
											},
											{
												"body": {
													"nativeSrc": "12672:269:1",
													"nodeType": "YulBlock",
													"src": "12672:269:1",
													"statements": [
														{
															"nativeSrc": "12682:22:1",
															"nodeType": "YulAssignment",
															"src": "12682:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12696:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12696:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12702:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12702:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12692:3:1"
																},
																"nativeSrc": "12692:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12692:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12682:6:1"
																}
															]
														},
														{
															"nativeSrc": "12713:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12713:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12743:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12743:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12749:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12749:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12739:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:1"
																},
																"nativeSrc": "12739:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12739:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12717:18:1",
																	"nodeType": "YulTypedName",
																	"src": "12717:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12790:51:1",
																"nodeType": "YulBlock",
																"src": "12790:51:1",
																"statements": [
																	{
																		"nativeSrc": "12804:27:1",
																		"nodeType": "YulAssignment",
																		"src": "12804:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12818:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "12818:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12826:4:1",
																					"nodeType": "YulLiteral",
																					"src": "12826:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12814:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12814:3:1"
																			},
																			"nativeSrc": "12814:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12814:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12804:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12804:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12770:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "12770:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12763:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12763:6:1"
																},
																"nativeSrc": "12763:26:1",
																"nodeType": "YulFunctionCall",
																"src": "12763:26:1"
															},
															"nativeSrc": "12760:81:1",
															"nodeType": "YulIf",
															"src": "12760:81:1"
														},
														{
															"body": {
																"nativeSrc": "12893:42:1",
																"nodeType": "YulBlock",
																"src": "12893:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12907:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12907:16:1"
																			},
																			"nativeSrc": "12907:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12907:18:1"
																		},
																		"nativeSrc": "12907:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12907:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12857:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "12857:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12880:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12888:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12888:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12877:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12877:2:1"
																		},
																		"nativeSrc": "12877:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12877:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12854:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12854:2:1"
																},
																"nativeSrc": "12854:38:1",
																"nodeType": "YulFunctionCall",
																"src": "12854:38:1"
															},
															"nativeSrc": "12851:84:1",
															"nodeType": "YulIf",
															"src": "12851:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12621:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12656:4:1",
														"nodeType": "YulTypedName",
														"src": "12656:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12665:6:1",
														"nodeType": "YulTypedName",
														"src": "12665:6:1",
														"type": ""
													}
												],
												"src": "12621:320:1"
											},
											{
												"body": {
													"nativeSrc": "12975:152:1",
													"nodeType": "YulBlock",
													"src": "12975:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12992:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12992:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12995:77:1",
																		"nodeType": "YulLiteral",
																		"src": "12995:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12985:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12985:6:1"
																},
																"nativeSrc": "12985:88:1",
																"nodeType": "YulFunctionCall",
																"src": "12985:88:1"
															},
															"nativeSrc": "12985:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "12985:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13089:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13089:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13092:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13092:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13082:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13082:6:1"
																},
																"nativeSrc": "13082:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13082:15:1"
															},
															"nativeSrc": "13082:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13082:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13113:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13113:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13116:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13116:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13106:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13106:6:1"
																},
																"nativeSrc": "13106:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13106:15:1"
															},
															"nativeSrc": "13106:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13106:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12947:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "12947:180:1"
											},
											{
												"body": {
													"nativeSrc": "13184:51:1",
													"nodeType": "YulBlock",
													"src": "13184:51:1",
													"statements": [
														{
															"nativeSrc": "13194:34:1",
															"nodeType": "YulAssignment",
															"src": "13194:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13219:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13219:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13222:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13222:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13215:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13215:3:1"
																},
																"nativeSrc": "13215:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13215:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13194:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "13194:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "13133:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13165:5:1",
														"nodeType": "YulTypedName",
														"src": "13165:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13175:8:1",
														"nodeType": "YulTypedName",
														"src": "13175:8:1",
														"type": ""
													}
												],
												"src": "13133:102:1"
											},
											{
												"body": {
													"nativeSrc": "13314:775:1",
													"nodeType": "YulBlock",
													"src": "13314:775:1",
													"statements": [
														{
															"nativeSrc": "13324:15:1",
															"nodeType": "YulAssignment",
															"src": "13324:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "13333:6:1",
																"nodeType": "YulIdentifier",
																"src": "13333:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13324:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13324:5:1"
																}
															]
														},
														{
															"nativeSrc": "13348:14:1",
															"nodeType": "YulAssignment",
															"src": "13348:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "13357:5:1",
																"nodeType": "YulIdentifier",
																"src": "13357:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13348:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13348:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13406:677:1",
																"nodeType": "YulBlock",
																"src": "13406:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "13494:22:1",
																			"nodeType": "YulBlock",
																			"src": "13494:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "13496:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "13496:16:1"
																						},
																						"nativeSrc": "13496:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "13496:18:1"
																					},
																					"nativeSrc": "13496:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "13496:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "13472:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "13472:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "13482:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "13482:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "13487:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "13487:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "13478:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "13478:3:1"
																					},
																					"nativeSrc": "13478:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "13478:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "13469:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "13469:2:1"
																			},
																			"nativeSrc": "13469:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13469:24:1"
																		},
																		"nativeSrc": "13466:50:1",
																		"nodeType": "YulIf",
																		"src": "13466:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "13561:419:1",
																			"nodeType": "YulBlock",
																			"src": "13561:419:1",
																			"statements": [
																				{
																					"nativeSrc": "13941:25:1",
																					"nodeType": "YulAssignment",
																					"src": "13941:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "13954:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "13954:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "13961:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "13961:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "13950:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "13950:3:1"
																						},
																						"nativeSrc": "13950:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "13950:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "13941:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "13941:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "13536:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "13536:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13546:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13546:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13532:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "13532:3:1"
																			},
																			"nativeSrc": "13532:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13532:16:1"
																		},
																		"nativeSrc": "13529:451:1",
																		"nodeType": "YulIf",
																		"src": "13529:451:1"
																	},
																	{
																		"nativeSrc": "13993:23:1",
																		"nodeType": "YulAssignment",
																		"src": "13993:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14005:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "14005:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "14011:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "14011:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "14001:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "14001:3:1"
																			},
																			"nativeSrc": "14001:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14001:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "13993:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "13993:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14029:44:1",
																		"nodeType": "YulAssignment",
																		"src": "14029:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14064:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "14064:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "14041:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "14041:22:1"
																			},
																			"nativeSrc": "14041:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14041:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14029:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "14029:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13382:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "13382:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13392:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13392:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13379:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13379:2:1"
																},
																"nativeSrc": "13379:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13379:15:1"
															},
															"nativeSrc": "13371:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13395:2:1",
																"nodeType": "YulBlock",
																"src": "13395:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "13375:3:1",
																"nodeType": "YulBlock",
																"src": "13375:3:1",
																"statements": []
															},
															"src": "13371:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "13241:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "13269:6:1",
														"nodeType": "YulTypedName",
														"src": "13269:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "13277:5:1",
														"nodeType": "YulTypedName",
														"src": "13277:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13284:8:1",
														"nodeType": "YulTypedName",
														"src": "13284:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "13294:3:1",
														"nodeType": "YulTypedName",
														"src": "13294:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13302:5:1",
														"nodeType": "YulTypedName",
														"src": "13302:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "13309:4:1",
														"nodeType": "YulTypedName",
														"src": "13309:4:1",
														"type": ""
													}
												],
												"src": "13241:848:1"
											},
											{
												"body": {
													"nativeSrc": "14155:1013:1",
													"nodeType": "YulBlock",
													"src": "14155:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "14350:20:1",
																"nodeType": "YulBlock",
																"src": "14350:20:1",
																"statements": [
																	{
																		"nativeSrc": "14352:10:1",
																		"nodeType": "YulAssignment",
																		"src": "14352:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14361:1:1",
																			"nodeType": "YulLiteral",
																			"src": "14361:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14352:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "14352:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14363:5:1",
																		"nodeType": "YulLeave",
																		"src": "14363:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "14340:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "14340:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14333:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14333:6:1"
																},
																"nativeSrc": "14333:16:1",
																"nodeType": "YulFunctionCall",
																"src": "14333:16:1"
															},
															"nativeSrc": "14330:40:1",
															"nodeType": "YulIf",
															"src": "14330:40:1"
														},
														{
															"body": {
																"nativeSrc": "14395:20:1",
																"nodeType": "YulBlock",
																"src": "14395:20:1",
																"statements": [
																	{
																		"nativeSrc": "14397:10:1",
																		"nodeType": "YulAssignment",
																		"src": "14397:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14406:1:1",
																			"nodeType": "YulLiteral",
																			"src": "14406:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14397:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "14397:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14408:5:1",
																		"nodeType": "YulLeave",
																		"src": "14408:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14389:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14389:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14382:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14382:6:1"
																},
																"nativeSrc": "14382:12:1",
																"nodeType": "YulFunctionCall",
																"src": "14382:12:1"
															},
															"nativeSrc": "14379:36:1",
															"nodeType": "YulIf",
															"src": "14379:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14525:20:1",
																		"nodeType": "YulBlock",
																		"src": "14525:20:1",
																		"statements": [
																			{
																				"nativeSrc": "14527:10:1",
																				"nodeType": "YulAssignment",
																				"src": "14527:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14536:1:1",
																					"nodeType": "YulLiteral",
																					"src": "14536:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14527:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "14527:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "14538:5:1",
																				"nodeType": "YulLeave",
																				"src": "14538:5:1"
																			}
																		]
																	},
																	"nativeSrc": "14518:27:1",
																	"nodeType": "YulCase",
																	"src": "14518:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14523:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14523:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14569:176:1",
																		"nodeType": "YulBlock",
																		"src": "14569:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "14604:22:1",
																					"nodeType": "YulBlock",
																					"src": "14604:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "14606:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "14606:16:1"
																								},
																								"nativeSrc": "14606:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "14606:18:1"
																							},
																							"nativeSrc": "14606:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "14606:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "14589:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "14589:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14599:3:1",
																							"nodeType": "YulLiteral",
																							"src": "14599:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "14586:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "14586:2:1"
																					},
																					"nativeSrc": "14586:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "14586:17:1"
																				},
																				"nativeSrc": "14583:43:1",
																				"nodeType": "YulIf",
																				"src": "14583:43:1"
																			},
																			{
																				"nativeSrc": "14639:25:1",
																				"nodeType": "YulAssignment",
																				"src": "14639:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14652:1:1",
																							"nodeType": "YulLiteral",
																							"src": "14652:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "14655:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "14655:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "14648:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "14648:3:1"
																					},
																					"nativeSrc": "14648:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "14648:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14639:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "14639:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14695:22:1",
																					"nodeType": "YulBlock",
																					"src": "14695:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "14697:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "14697:16:1"
																								},
																								"nativeSrc": "14697:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "14697:18:1"
																							},
																							"nativeSrc": "14697:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "14697:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "14683:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "14683:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "14690:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "14690:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "14680:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "14680:2:1"
																					},
																					"nativeSrc": "14680:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "14680:14:1"
																				},
																				"nativeSrc": "14677:40:1",
																				"nodeType": "YulIf",
																				"src": "14677:40:1"
																			},
																			{
																				"nativeSrc": "14730:5:1",
																				"nodeType": "YulLeave",
																				"src": "14730:5:1"
																			}
																		]
																	},
																	"nativeSrc": "14554:191:1",
																	"nodeType": "YulCase",
																	"src": "14554:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14559:1:1",
																		"nodeType": "YulLiteral",
																		"src": "14559:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "14475:4:1",
																"nodeType": "YulIdentifier",
																"src": "14475:4:1"
															},
															"nativeSrc": "14468:277:1",
															"nodeType": "YulSwitch",
															"src": "14468:277:1"
														},
														{
															"body": {
																"nativeSrc": "14877:123:1",
																"nodeType": "YulBlock",
																"src": "14877:123:1",
																"statements": [
																	{
																		"nativeSrc": "14891:28:1",
																		"nodeType": "YulAssignment",
																		"src": "14891:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14904:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "14904:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "14910:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "14910:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "14900:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "14900:3:1"
																			},
																			"nativeSrc": "14900:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14900:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14891:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "14891:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14950:22:1",
																			"nodeType": "YulBlock",
																			"src": "14950:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "14952:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "14952:16:1"
																						},
																						"nativeSrc": "14952:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "14952:18:1"
																					},
																					"nativeSrc": "14952:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "14952:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "14938:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "14938:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "14945:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "14945:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14935:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "14935:2:1"
																			},
																			"nativeSrc": "14935:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14935:14:1"
																		},
																		"nativeSrc": "14932:40:1",
																		"nodeType": "YulIf",
																		"src": "14932:40:1"
																	},
																	{
																		"nativeSrc": "14985:5:1",
																		"nodeType": "YulLeave",
																		"src": "14985:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "14780:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "14780:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14786:2:1",
																						"nodeType": "YulLiteral",
																						"src": "14786:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14777:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "14777:2:1"
																				},
																				"nativeSrc": "14777:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14777:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "14794:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "14794:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14804:2:1",
																						"nodeType": "YulLiteral",
																						"src": "14804:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14791:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "14791:2:1"
																				},
																				"nativeSrc": "14791:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14791:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14773:3:1"
																		},
																		"nativeSrc": "14773:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14773:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "14829:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "14829:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14835:3:1",
																						"nodeType": "YulLiteral",
																						"src": "14835:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14826:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "14826:2:1"
																				},
																				"nativeSrc": "14826:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14826:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "14844:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "14844:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14854:2:1",
																						"nodeType": "YulLiteral",
																						"src": "14854:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14841:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "14841:2:1"
																				},
																				"nativeSrc": "14841:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14841:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14822:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14822:3:1"
																		},
																		"nativeSrc": "14822:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14822:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "14757:2:1"
																},
																"nativeSrc": "14757:111:1",
																"nodeType": "YulFunctionCall",
																"src": "14757:111:1"
															},
															"nativeSrc": "14754:246:1",
															"nodeType": "YulIf",
															"src": "14754:246:1"
														},
														{
															"nativeSrc": "15010:57:1",
															"nodeType": "YulAssignment",
															"src": "15010:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15044:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15044:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15047:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15047:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15053:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "15053:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "15063:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15063:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "15025:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "15025:18:1"
																},
																"nativeSrc": "15025:42:1",
																"nodeType": "YulFunctionCall",
																"src": "15025:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15010:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15010:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "15017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15017:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15106:22:1",
																"nodeType": "YulBlock",
																"src": "15106:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15108:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15108:16:1"
																			},
																			"nativeSrc": "15108:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15108:18:1"
																		},
																		"nativeSrc": "15108:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15108:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15083:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15083:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "15094:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15094:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "15099:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15099:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15090:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15090:3:1"
																		},
																		"nativeSrc": "15090:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15090:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15080:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "15080:2:1"
																},
																"nativeSrc": "15080:25:1",
																"nodeType": "YulFunctionCall",
																"src": "15080:25:1"
															},
															"nativeSrc": "15077:51:1",
															"nodeType": "YulIf",
															"src": "15077:51:1"
														},
														{
															"nativeSrc": "15137:25:1",
															"nodeType": "YulAssignment",
															"src": "15137:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15150:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15157:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15157:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15146:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15146:3:1"
																},
																"nativeSrc": "15146:16:1",
																"nodeType": "YulFunctionCall",
																"src": "15146:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15137:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15137:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "14095:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14125:4:1",
														"nodeType": "YulTypedName",
														"src": "14125:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14131:8:1",
														"nodeType": "YulTypedName",
														"src": "14131:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "14141:3:1",
														"nodeType": "YulTypedName",
														"src": "14141:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14149:5:1",
														"nodeType": "YulTypedName",
														"src": "14149:5:1",
														"type": ""
													}
												],
												"src": "14095:1073:1"
											},
											{
												"body": {
													"nativeSrc": "15240:219:1",
													"nodeType": "YulBlock",
													"src": "15240:219:1",
													"statements": [
														{
															"nativeSrc": "15250:31:1",
															"nodeType": "YulAssignment",
															"src": "15250:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15276:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15276:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15258:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15258:17:1"
																},
																"nativeSrc": "15258:23:1",
																"nodeType": "YulFunctionCall",
																"src": "15258:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15250:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15250:4:1"
																}
															]
														},
														{
															"nativeSrc": "15290:39:1",
															"nodeType": "YulAssignment",
															"src": "15290:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15320:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "15320:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15302:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15302:17:1"
																},
																"nativeSrc": "15302:27:1",
																"nodeType": "YulFunctionCall",
																"src": "15302:27:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "15290:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "15290:8:1"
																}
															]
														},
														{
															"nativeSrc": "15339:113:1",
															"nodeType": "YulAssignment",
															"src": "15339:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15369:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15369:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15375:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "15375:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15385:66:1",
																		"nodeType": "YulLiteral",
																		"src": "15385:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "15348:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "15348:20:1"
																},
																"nativeSrc": "15348:104:1",
																"nodeType": "YulFunctionCall",
																"src": "15348:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15339:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15339:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "15174:285:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "15215:4:1",
														"nodeType": "YulTypedName",
														"src": "15215:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15221:8:1",
														"nodeType": "YulTypedName",
														"src": "15221:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15234:5:1",
														"nodeType": "YulTypedName",
														"src": "15234:5:1",
														"type": ""
													}
												],
												"src": "15174:285:1"
											},
											{
												"body": {
													"nativeSrc": "15513:362:1",
													"nodeType": "YulBlock",
													"src": "15513:362:1",
													"statements": [
														{
															"nativeSrc": "15523:25:1",
															"nodeType": "YulAssignment",
															"src": "15523:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15546:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15546:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15528:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15528:17:1"
																},
																"nativeSrc": "15528:20:1",
																"nodeType": "YulFunctionCall",
																"src": "15528:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15523:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15523:1:1"
																}
															]
														},
														{
															"nativeSrc": "15557:25:1",
															"nodeType": "YulAssignment",
															"src": "15557:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15580:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15580:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15562:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15562:17:1"
																},
																"nativeSrc": "15562:20:1",
																"nodeType": "YulFunctionCall",
																"src": "15562:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15557:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15557:1:1"
																}
															]
														},
														{
															"nativeSrc": "15591:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "15591:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15614:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15614:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15617:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15617:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15610:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15610:3:1"
																},
																"nativeSrc": "15610:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15610:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15595:11:1",
																	"nodeType": "YulTypedName",
																	"src": "15595:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15628:41:1",
															"nodeType": "YulAssignment",
															"src": "15628:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15657:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "15657:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15639:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15639:17:1"
																},
																"nativeSrc": "15639:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15639:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15628:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "15628:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15846:22:1",
																"nodeType": "YulBlock",
																"src": "15846:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15848:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15848:16:1"
																			},
																			"nativeSrc": "15848:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15848:18:1"
																		},
																		"nativeSrc": "15848:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15848:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15779:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "15779:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15772:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "15772:6:1"
																				},
																				"nativeSrc": "15772:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15772:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15802:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "15802:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15809:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "15809:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15818:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "15818:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15805:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "15805:3:1"
																						},
																						"nativeSrc": "15805:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "15805:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15799:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "15799:2:1"
																				},
																				"nativeSrc": "15799:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15799:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15752:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "15752:2:1"
																		},
																		"nativeSrc": "15752:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15752:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15732:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15732:6:1"
																},
																"nativeSrc": "15732:113:1",
																"nodeType": "YulFunctionCall",
																"src": "15732:113:1"
															},
															"nativeSrc": "15729:139:1",
															"nodeType": "YulIf",
															"src": "15729:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15465:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15496:1:1",
														"nodeType": "YulTypedName",
														"src": "15496:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15499:1:1",
														"nodeType": "YulTypedName",
														"src": "15499:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15505:7:1",
														"nodeType": "YulTypedName",
														"src": "15505:7:1",
														"type": ""
													}
												],
												"src": "15465:410:1"
											},
											{
												"body": {
													"nativeSrc": "15909:152:1",
													"nodeType": "YulBlock",
													"src": "15909:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15926:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15926:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15929:77:1",
																		"nodeType": "YulLiteral",
																		"src": "15929:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15919:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15919:6:1"
																},
																"nativeSrc": "15919:88:1",
																"nodeType": "YulFunctionCall",
																"src": "15919:88:1"
															},
															"nativeSrc": "15919:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "15919:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16023:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16023:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16026:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16026:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16016:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16016:6:1"
																},
																"nativeSrc": "16016:15:1",
																"nodeType": "YulFunctionCall",
																"src": "16016:15:1"
															},
															"nativeSrc": "16016:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "16016:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16047:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16047:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16050:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16050:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16040:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16040:6:1"
																},
																"nativeSrc": "16040:15:1",
																"nodeType": "YulFunctionCall",
																"src": "16040:15:1"
															},
															"nativeSrc": "16040:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "16040:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "15881:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "15881:180:1"
											},
											{
												"body": {
													"nativeSrc": "16305:537:1",
													"nodeType": "YulBlock",
													"src": "16305:537:1",
													"statements": [
														{
															"nativeSrc": "16315:27:1",
															"nodeType": "YulAssignment",
															"src": "16315:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16327:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16327:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16338:3:1",
																		"nodeType": "YulLiteral",
																		"src": "16338:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16323:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16323:3:1"
																},
																"nativeSrc": "16323:19:1",
																"nodeType": "YulFunctionCall",
																"src": "16323:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16315:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16315:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16396:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16396:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16409:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16409:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16420:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16420:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16405:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16405:3:1"
																		},
																		"nativeSrc": "16405:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16405:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16352:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16352:43:1"
																},
																"nativeSrc": "16352:71:1",
																"nodeType": "YulFunctionCall",
																"src": "16352:71:1"
															},
															"nativeSrc": "16352:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "16352:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16477:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16477:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16490:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16490:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16501:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16501:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16486:3:1"
																		},
																		"nativeSrc": "16486:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16486:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16433:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16433:43:1"
																},
																"nativeSrc": "16433:72:1",
																"nodeType": "YulFunctionCall",
																"src": "16433:72:1"
															},
															"nativeSrc": "16433:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "16433:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16559:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16559:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16572:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16572:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16583:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16583:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16568:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16568:3:1"
																		},
																		"nativeSrc": "16568:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16568:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16515:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16515:43:1"
																},
																"nativeSrc": "16515:72:1",
																"nodeType": "YulFunctionCall",
																"src": "16515:72:1"
															},
															"nativeSrc": "16515:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "16515:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16641:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16641:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16654:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16654:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16665:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16665:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16650:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16650:3:1"
																		},
																		"nativeSrc": "16650:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16650:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16597:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16597:43:1"
																},
																"nativeSrc": "16597:72:1",
																"nodeType": "YulFunctionCall",
																"src": "16597:72:1"
															},
															"nativeSrc": "16597:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "16597:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "16723:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16723:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16736:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16736:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16747:3:1",
																				"nodeType": "YulLiteral",
																				"src": "16747:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16732:3:1"
																		},
																		"nativeSrc": "16732:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16732:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16679:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16679:43:1"
																},
																"nativeSrc": "16679:73:1",
																"nodeType": "YulFunctionCall",
																"src": "16679:73:1"
															},
															"nativeSrc": "16679:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "16679:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "16806:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16806:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16819:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16819:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16830:3:1",
																				"nodeType": "YulLiteral",
																				"src": "16830:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16815:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16815:3:1"
																		},
																		"nativeSrc": "16815:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16815:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16762:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16762:43:1"
																},
																"nativeSrc": "16762:73:1",
																"nodeType": "YulFunctionCall",
																"src": "16762:73:1"
															},
															"nativeSrc": "16762:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "16762:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16067:775:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16237:9:1",
														"nodeType": "YulTypedName",
														"src": "16237:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "16249:6:1",
														"nodeType": "YulTypedName",
														"src": "16249:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16257:6:1",
														"nodeType": "YulTypedName",
														"src": "16257:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16265:6:1",
														"nodeType": "YulTypedName",
														"src": "16265:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16273:6:1",
														"nodeType": "YulTypedName",
														"src": "16273:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16281:6:1",
														"nodeType": "YulTypedName",
														"src": "16281:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16289:6:1",
														"nodeType": "YulTypedName",
														"src": "16289:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16300:4:1",
														"nodeType": "YulTypedName",
														"src": "16300:4:1",
														"type": ""
													}
												],
												"src": "16067:775:1"
											},
											{
												"body": {
													"nativeSrc": "16974:206:1",
													"nodeType": "YulBlock",
													"src": "16974:206:1",
													"statements": [
														{
															"nativeSrc": "16984:26:1",
															"nodeType": "YulAssignment",
															"src": "16984:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16996:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16996:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17007:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17007:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16992:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16992:3:1"
																},
																"nativeSrc": "16992:18:1",
																"nodeType": "YulFunctionCall",
																"src": "16992:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16984:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16984:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17064:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17064:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17077:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17077:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17088:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17088:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17073:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17073:3:1"
																		},
																		"nativeSrc": "17073:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17073:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17020:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17020:43:1"
																},
																"nativeSrc": "17020:71:1",
																"nodeType": "YulFunctionCall",
																"src": "17020:71:1"
															},
															"nativeSrc": "17020:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "17020:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17145:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17145:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17158:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17158:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17169:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17169:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17154:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17154:3:1"
																		},
																		"nativeSrc": "17154:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17154:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17101:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17101:43:1"
																},
																"nativeSrc": "17101:72:1",
																"nodeType": "YulFunctionCall",
																"src": "17101:72:1"
															},
															"nativeSrc": "17101:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "17101:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "16848:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16938:9:1",
														"nodeType": "YulTypedName",
														"src": "16938:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16950:6:1",
														"nodeType": "YulTypedName",
														"src": "16950:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16958:6:1",
														"nodeType": "YulTypedName",
														"src": "16958:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16969:4:1",
														"nodeType": "YulTypedName",
														"src": "16969:4:1",
														"type": ""
													}
												],
												"src": "16848:332:1"
											},
											{
												"body": {
													"nativeSrc": "17340:288:1",
													"nodeType": "YulBlock",
													"src": "17340:288:1",
													"statements": [
														{
															"nativeSrc": "17350:26:1",
															"nodeType": "YulAssignment",
															"src": "17350:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17362:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17362:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17373:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17373:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17358:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17358:3:1"
																},
																"nativeSrc": "17358:18:1",
																"nodeType": "YulFunctionCall",
																"src": "17358:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17350:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17350:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17430:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17430:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17443:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17443:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17454:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17454:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17439:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17439:3:1"
																		},
																		"nativeSrc": "17439:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17439:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17386:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17386:43:1"
																},
																"nativeSrc": "17386:71:1",
																"nodeType": "YulFunctionCall",
																"src": "17386:71:1"
															},
															"nativeSrc": "17386:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "17386:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17511:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17511:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17524:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17524:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17535:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17535:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17520:3:1"
																		},
																		"nativeSrc": "17520:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17520:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17467:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17467:43:1"
																},
																"nativeSrc": "17467:72:1",
																"nodeType": "YulFunctionCall",
																"src": "17467:72:1"
															},
															"nativeSrc": "17467:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "17467:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17593:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17593:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17606:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17606:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17617:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17617:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17602:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17602:3:1"
																		},
																		"nativeSrc": "17602:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17602:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17549:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17549:43:1"
																},
																"nativeSrc": "17549:72:1",
																"nodeType": "YulFunctionCall",
																"src": "17549:72:1"
															},
															"nativeSrc": "17549:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "17549:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17186:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17296:9:1",
														"nodeType": "YulTypedName",
														"src": "17296:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17308:6:1",
														"nodeType": "YulTypedName",
														"src": "17308:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17316:6:1",
														"nodeType": "YulTypedName",
														"src": "17316:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17324:6:1",
														"nodeType": "YulTypedName",
														"src": "17324:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17335:4:1",
														"nodeType": "YulTypedName",
														"src": "17335:4:1",
														"type": ""
													}
												],
												"src": "17186:442:1"
											},
											{
												"body": {
													"nativeSrc": "17678:147:1",
													"nodeType": "YulBlock",
													"src": "17678:147:1",
													"statements": [
														{
															"nativeSrc": "17688:25:1",
															"nodeType": "YulAssignment",
															"src": "17688:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17711:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17711:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17693:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "17693:17:1"
																},
																"nativeSrc": "17693:20:1",
																"nodeType": "YulFunctionCall",
																"src": "17693:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17688:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "17688:1:1"
																}
															]
														},
														{
															"nativeSrc": "17722:25:1",
															"nodeType": "YulAssignment",
															"src": "17722:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17745:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17745:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17727:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "17727:17:1"
																},
																"nativeSrc": "17727:20:1",
																"nodeType": "YulFunctionCall",
																"src": "17727:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17722:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "17722:1:1"
																}
															]
														},
														{
															"nativeSrc": "17756:16:1",
															"nodeType": "YulAssignment",
															"src": "17756:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17767:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17767:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17770:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17770:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17763:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17763:3:1"
																},
																"nativeSrc": "17763:9:1",
																"nodeType": "YulFunctionCall",
																"src": "17763:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17756:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17796:22:1",
																"nodeType": "YulBlock",
																"src": "17796:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17798:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "17798:16:1"
																			},
																			"nativeSrc": "17798:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17798:18:1"
																		},
																		"nativeSrc": "17798:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17798:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17788:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17788:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17791:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "17791:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17785:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "17785:2:1"
																},
																"nativeSrc": "17785:10:1",
																"nodeType": "YulFunctionCall",
																"src": "17785:10:1"
															},
															"nativeSrc": "17782:36:1",
															"nodeType": "YulIf",
															"src": "17782:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17634:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17665:1:1",
														"nodeType": "YulTypedName",
														"src": "17665:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17668:1:1",
														"nodeType": "YulTypedName",
														"src": "17668:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17674:3:1",
														"nodeType": "YulTypedName",
														"src": "17674:3:1",
														"type": ""
													}
												],
												"src": "17634:191:1"
											},
											{
												"body": {
													"nativeSrc": "18041:454:1",
													"nodeType": "YulBlock",
													"src": "18041:454:1",
													"statements": [
														{
															"nativeSrc": "18051:27:1",
															"nodeType": "YulAssignment",
															"src": "18051:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "18063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18074:3:1",
																		"nodeType": "YulLiteral",
																		"src": "18074:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18059:3:1"
																},
																"nativeSrc": "18059:19:1",
																"nodeType": "YulFunctionCall",
																"src": "18059:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18132:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18132:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18145:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18145:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18156:1:1",
																				"nodeType": "YulLiteral",
																				"src": "18156:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18141:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18141:3:1"
																		},
																		"nativeSrc": "18141:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18141:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18088:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18088:43:1"
																},
																"nativeSrc": "18088:71:1",
																"nodeType": "YulFunctionCall",
																"src": "18088:71:1"
															},
															"nativeSrc": "18088:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "18088:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18213:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18213:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18226:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18226:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18237:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18237:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18222:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18222:3:1"
																		},
																		"nativeSrc": "18222:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18222:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18169:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18169:43:1"
																},
																"nativeSrc": "18169:72:1",
																"nodeType": "YulFunctionCall",
																"src": "18169:72:1"
															},
															"nativeSrc": "18169:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "18169:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18295:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18295:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18308:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18308:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18319:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18319:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18304:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18304:3:1"
																		},
																		"nativeSrc": "18304:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18304:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18251:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18251:43:1"
																},
																"nativeSrc": "18251:72:1",
																"nodeType": "YulFunctionCall",
																"src": "18251:72:1"
															},
															"nativeSrc": "18251:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "18251:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18377:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18377:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18390:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18390:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18401:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18401:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18386:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18386:3:1"
																		},
																		"nativeSrc": "18386:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18386:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18333:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18333:43:1"
																},
																"nativeSrc": "18333:72:1",
																"nodeType": "YulFunctionCall",
																"src": "18333:72:1"
															},
															"nativeSrc": "18333:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "18333:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "18459:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18459:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18472:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18472:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18483:3:1",
																				"nodeType": "YulLiteral",
																				"src": "18483:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18468:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18468:3:1"
																		},
																		"nativeSrc": "18468:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18468:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18415:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18415:43:1"
																},
																"nativeSrc": "18415:73:1",
																"nodeType": "YulFunctionCall",
																"src": "18415:73:1"
															},
															"nativeSrc": "18415:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "18415:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "17831:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17981:9:1",
														"nodeType": "YulTypedName",
														"src": "17981:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17993:6:1",
														"nodeType": "YulTypedName",
														"src": "17993:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18001:6:1",
														"nodeType": "YulTypedName",
														"src": "18001:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18009:6:1",
														"nodeType": "YulTypedName",
														"src": "18009:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18017:6:1",
														"nodeType": "YulTypedName",
														"src": "18017:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18025:6:1",
														"nodeType": "YulTypedName",
														"src": "18025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18036:4:1",
														"nodeType": "YulTypedName",
														"src": "18036:4:1",
														"type": ""
													}
												],
												"src": "17831:664:1"
											},
											{
												"body": {
													"nativeSrc": "18679:367:1",
													"nodeType": "YulBlock",
													"src": "18679:367:1",
													"statements": [
														{
															"nativeSrc": "18689:27:1",
															"nodeType": "YulAssignment",
															"src": "18689:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18701:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "18701:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18712:3:1",
																		"nodeType": "YulLiteral",
																		"src": "18712:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18697:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18697:3:1"
																},
																"nativeSrc": "18697:19:1",
																"nodeType": "YulFunctionCall",
																"src": "18697:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18689:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18689:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18770:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18770:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18783:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18783:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18794:1:1",
																				"nodeType": "YulLiteral",
																				"src": "18794:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18779:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18779:3:1"
																		},
																		"nativeSrc": "18779:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18779:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18726:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18726:43:1"
																},
																"nativeSrc": "18726:71:1",
																"nodeType": "YulFunctionCall",
																"src": "18726:71:1"
															},
															"nativeSrc": "18726:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "18726:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18847:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18847:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18860:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18860:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18871:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18871:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18856:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18856:3:1"
																		},
																		"nativeSrc": "18856:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18856:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "18807:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "18807:39:1"
																},
																"nativeSrc": "18807:68:1",
																"nodeType": "YulFunctionCall",
																"src": "18807:68:1"
															},
															"nativeSrc": "18807:68:1",
															"nodeType": "YulExpressionStatement",
															"src": "18807:68:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18929:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18929:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18942:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18942:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18953:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18953:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18938:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18938:3:1"
																		},
																		"nativeSrc": "18938:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18938:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18885:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18885:43:1"
																},
																"nativeSrc": "18885:72:1",
																"nodeType": "YulFunctionCall",
																"src": "18885:72:1"
															},
															"nativeSrc": "18885:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "18885:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19011:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19024:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19024:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19035:2:1",
																				"nodeType": "YulLiteral",
																				"src": "19035:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19020:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19020:3:1"
																		},
																		"nativeSrc": "19020:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19020:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18967:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18967:43:1"
																},
																"nativeSrc": "18967:72:1",
																"nodeType": "YulFunctionCall",
																"src": "18967:72:1"
															},
															"nativeSrc": "18967:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "18967:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "18501:545:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18627:9:1",
														"nodeType": "YulTypedName",
														"src": "18627:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18639:6:1",
														"nodeType": "YulTypedName",
														"src": "18639:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18647:6:1",
														"nodeType": "YulTypedName",
														"src": "18647:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18655:6:1",
														"nodeType": "YulTypedName",
														"src": "18655:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18663:6:1",
														"nodeType": "YulTypedName",
														"src": "18663:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18674:4:1",
														"nodeType": "YulTypedName",
														"src": "18674:4:1",
														"type": ""
													}
												],
												"src": "18501:545:1"
											},
											{
												"body": {
													"nativeSrc": "19080:152:1",
													"nodeType": "YulBlock",
													"src": "19080:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19100:77:1",
																		"nodeType": "YulLiteral",
																		"src": "19100:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19090:6:1"
																},
																"nativeSrc": "19090:88:1",
																"nodeType": "YulFunctionCall",
																"src": "19090:88:1"
															},
															"nativeSrc": "19090:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "19090:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19194:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19197:4:1",
																		"nodeType": "YulLiteral",
																		"src": "19197:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19187:6:1"
																},
																"nativeSrc": "19187:15:1",
																"nodeType": "YulFunctionCall",
																"src": "19187:15:1"
															},
															"nativeSrc": "19187:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "19187:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19218:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19218:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19221:4:1",
																		"nodeType": "YulLiteral",
																		"src": "19221:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19211:6:1"
																},
																"nativeSrc": "19211:15:1",
																"nodeType": "YulFunctionCall",
																"src": "19211:15:1"
															},
															"nativeSrc": "19211:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "19211:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "19052:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "19052:180:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1905": [
									{
										"length": 32,
										"start": 3083
									}
								],
								"1907": [
									{
										"length": 32,
										"start": 3042
									}
								],
								"1909": [
									{
										"length": 32,
										"start": 2956
									}
								],
								"1911": [
									{
										"length": 32,
										"start": 5097
									}
								],
								"1913": [
									{
										"length": 32,
										"start": 5130
									}
								],
								"1916": [
									{
										"length": 32,
										"start": 3798
									}
								],
								"1919": [
									{
										"length": 32,
										"start": 3857
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061012a575f3560e01c806379cc6790116100ab578063a9059cbb1161006f578063a9059cbb14610324578063abd81ca214610354578063d505accf14610384578063dd62ed3e146103a0578063f2fde38b146103d05761012a565b806379cc6790146102785780637ecebe001461029457806384b0196e146102c45780638da5cb5b146102e857806395d89b41146103065761012a565b80633644e515116100f25780633644e515146101e857806340c10f191461020657806342966c681461022257806370a082311461023e578063715018a61461026e5761012a565b806306fdde031461012e578063095ea7b31461014c57806318160ddd1461017c57806323b872dd1461019a578063313ce567146101ca575b5f80fd5b6101366103ec565b60405161014391906118da565b60405180910390f35b6101666004803603810190610161919061198b565b61047c565b60405161017391906119e3565b60405180910390f35b61018461049e565b6040516101919190611a0b565b60405180910390f35b6101b460048036038101906101af9190611a24565b6104a7565b6040516101c191906119e3565b60405180910390f35b6101d26104d5565b6040516101df9190611a8f565b60405180910390f35b6101f06104dd565b6040516101fd9190611ac0565b60405180910390f35b610220600480360381019061021b919061198b565b6104eb565b005b61023c60048036038101906102379190611ad9565b610522565b005b61025860048036038101906102539190611b04565b610536565b6040516102659190611a0b565b60405180910390f35b61027661057b565b005b610292600480360381019061028d919061198b565b61058e565b005b6102ae60048036038101906102a99190611b04565b6105ae565b6040516102bb9190611a0b565b60405180910390f35b6102cc6105bf565b6040516102df9796959493929190611c2f565b60405180910390f35b6102f0610664565b6040516102fd9190611cb1565b60405180910390f35b61030e61068c565b60405161031b91906118da565b60405180910390f35b61033e6004803603810190610339919061198b565b61071c565b60405161034b91906119e3565b60405180910390f35b61036e60048036038101906103699190611cca565b61073e565b60405161037b91906119e3565b60405180910390f35b61039e60048036038101906103999190611d82565b6107a3565b005b6103ba60048036038101906103b59190611e1f565b6108e8565b6040516103c79190611a0b565b60405180910390f35b6103ea60048036038101906103e59190611b04565b61096a565b005b6060600380546103fb90611e8a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790611e8a565b80156104725780601f1061044957610100808354040283529160200191610472565b820191905f5260205f20905b81548152906001019060200180831161045557829003601f168201915b5050505050905090565b5f806104866109ee565b90506104938185856109f5565b600191505092915050565b5f600254905090565b5f806104b16109ee565b90506104be858285610a07565b6104c9858585610a99565b60019150509392505050565b5f6012905090565b5f6104e6610b89565b905090565b6104f3610c3f565b61051e826104ff6104d5565b60ff16600a61050e9190612016565b836105199190612060565b610cc6565b5050565b61053361052d6109ee565b82610d45565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610583610c3f565b61058c5f610dc4565b565b6105a08261059a6109ee565b83610a07565b6105aa8282610d45565b5050565b5f6105b882610e87565b9050919050565b5f6060805f805f60606105d0610ecd565b6105d8610f08565b46305f801b5f67ffffffffffffffff8111156105f7576105f66120a1565b5b6040519080825280602002602001820160405280156106255781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069b90611e8a565b80601f01602080910402602001604051908101604052809291908181526020018280546106c790611e8a565b80156107125780601f106106e957610100808354040283529160200191610712565b820191905f5260205f20905b8154815290600101906020018083116106f557829003601f168201915b5050505050905090565b5f806107266109ee565b9050610733818585610a99565b600191505092915050565b5f61076b828661074c6104d5565b60ff16600a61075b9190612016565b866107669190612060565b610a07565b61079785856107786104d5565b60ff16600a6107879190612016565b866107929190612060565b610a99565b60019050949350505050565b834211156107e857836040517f627913020000000000000000000000000000000000000000000000000000000081526004016107df9190611a0b565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108168c610f43565b8960405160200161082c969594939291906120ce565b6040516020818303038152906040528051906020012090505f61084e82610f96565b90505f61085d82878787610faf565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108d157808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016108c892919061212d565b60405180910390fd5b6108dc8a8a8a6109f5565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610972610c3f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109e2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109d99190611cb1565b60405180910390fd5b6109eb81610dc4565b50565b5f33905090565b610a028383836001610fdd565b505050565b5f610a1284846108e8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a935781811015610a84578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a7b93929190612154565b60405180910390fd5b610a9284848484035f610fdd565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b09575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b009190611cb1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b79575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b709190611cb1565b60405180910390fd5b610b848383836111ac565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610c0457507f000000000000000000000000000000000000000000000000000000000000000046145b15610c31577f00000000000000000000000000000000000000000000000000000000000000009050610c3c565b610c396113c5565b90505b90565b610c476109ee565b73ffffffffffffffffffffffffffffffffffffffff16610c65610664565b73ffffffffffffffffffffffffffffffffffffffff1614610cc457610c886109ee565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cbb9190611cb1565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d2d9190611cb1565b60405180910390fd5b610d415f83836111ac565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610db5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610dac9190611cb1565b60405180910390fd5b610dc0825f836111ac565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610f0360067f000000000000000000000000000000000000000000000000000000000000000061145a90919063ffffffff16565b905090565b6060610f3e60077f000000000000000000000000000000000000000000000000000000000000000061145a90919063ffffffff16565b905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610fa8610fa2610b89565b83611507565b9050919050565b5f805f80610fbf88888888611547565b925092509250610fcf828261162e565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361104d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110449190611cb1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110bd575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110b49190611cb1565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111a6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161119d9190611a0b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111fc578060025f8282546111f09190612189565b925050819055506112ca565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611285578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161127c93929190612154565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611311578060025f828254039250508190555061135b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113b89190611a0b565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161143f9594939291906121bc565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146114765761146f83611790565b9050611501565b81805461148290611e8a565b80601f01602080910402602001604051908101604052809291908181526020018280546114ae90611e8a565b80156114f95780601f106114d0576101008083540402835291602001916114f9565b820191905f5260205f20905b8154815290600101906020018083116114dc57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611583575f600385925092509250611624565b5f6001888888886040515f81526020016040526040516115a6949392919061220d565b6020604051602081039080840390855afa1580156115c6573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611617575f60015f801b93509350935050611624565b805f805f1b935093509350505b9450945094915050565b5f600381111561164157611640612250565b5b82600381111561165457611653612250565b5b031561178c576001600381111561166e5761166d612250565b5b82600381111561168157611680612250565b5b036116b8576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156116cc576116cb612250565b5b8260038111156116df576116de612250565b5b0361172357805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161171a9190611a0b565b60405180910390fd5b60038081111561173657611735612250565b5b82600381111561174957611748612250565b5b0361178b57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016117829190611ac0565b60405180910390fd5b5b5050565b60605f61179c83611802565b90505f602067ffffffffffffffff8111156117ba576117b96120a1565b5b6040519080825280601f01601f1916602001820160405280156117ec5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611847576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561188757808201518184015260208101905061186c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118ac82611850565b6118b6818561185a565b93506118c681856020860161186a565b6118cf81611892565b840191505092915050565b5f6020820190508181035f8301526118f281846118a2565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611927826118fe565b9050919050565b6119378161191d565b8114611941575f80fd5b50565b5f813590506119528161192e565b92915050565b5f819050919050565b61196a81611958565b8114611974575f80fd5b50565b5f8135905061198581611961565b92915050565b5f80604083850312156119a1576119a06118fa565b5b5f6119ae85828601611944565b92505060206119bf85828601611977565b9150509250929050565b5f8115159050919050565b6119dd816119c9565b82525050565b5f6020820190506119f65f8301846119d4565b92915050565b611a0581611958565b82525050565b5f602082019050611a1e5f8301846119fc565b92915050565b5f805f60608486031215611a3b57611a3a6118fa565b5b5f611a4886828701611944565b9350506020611a5986828701611944565b9250506040611a6a86828701611977565b9150509250925092565b5f60ff82169050919050565b611a8981611a74565b82525050565b5f602082019050611aa25f830184611a80565b92915050565b5f819050919050565b611aba81611aa8565b82525050565b5f602082019050611ad35f830184611ab1565b92915050565b5f60208284031215611aee57611aed6118fa565b5b5f611afb84828501611977565b91505092915050565b5f60208284031215611b1957611b186118fa565b5b5f611b2684828501611944565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b6381611b2f565b82525050565b611b728161191d565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611baa81611958565b82525050565b5f611bbb8383611ba1565b60208301905092915050565b5f602082019050919050565b5f611bdd82611b78565b611be78185611b82565b9350611bf283611b92565b805f5b83811015611c22578151611c098882611bb0565b9750611c1483611bc7565b925050600181019050611bf5565b5085935050505092915050565b5f60e082019050611c425f83018a611b5a565b8181036020830152611c5481896118a2565b90508181036040830152611c6881886118a2565b9050611c7760608301876119fc565b611c846080830186611b69565b611c9160a0830185611ab1565b81810360c0830152611ca38184611bd3565b905098975050505050505050565b5f602082019050611cc45f830184611b69565b92915050565b5f805f8060808587031215611ce257611ce16118fa565b5b5f611cef87828801611944565b9450506020611d0087828801611944565b9350506040611d1187828801611977565b9250506060611d2287828801611944565b91505092959194509250565b611d3781611a74565b8114611d41575f80fd5b50565b5f81359050611d5281611d2e565b92915050565b611d6181611aa8565b8114611d6b575f80fd5b50565b5f81359050611d7c81611d58565b92915050565b5f805f805f805f60e0888a031215611d9d57611d9c6118fa565b5b5f611daa8a828b01611944565b9750506020611dbb8a828b01611944565b9650506040611dcc8a828b01611977565b9550506060611ddd8a828b01611977565b9450506080611dee8a828b01611d44565b93505060a0611dff8a828b01611d6e565b92505060c0611e108a828b01611d6e565b91505092959891949750929550565b5f8060408385031215611e3557611e346118fa565b5b5f611e4285828601611944565b9250506020611e5385828601611944565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ea157607f821691505b602082108103611eb457611eb3611e5d565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611f3c57808604811115611f1857611f17611eba565b5b6001851615611f275780820291505b8081029050611f3585611ee7565b9450611efc565b94509492505050565b5f82611f54576001905061200f565b81611f61575f905061200f565b8160018114611f775760028114611f8157611fb0565b600191505061200f565b60ff841115611f9357611f92611eba565b5b8360020a915084821115611faa57611fa9611eba565b5b5061200f565b5060208310610133831016604e8410600b8410161715611fe55782820a905083811115611fe057611fdf611eba565b5b61200f565b611ff28484846001611ef3565b9250905081840481111561200957612008611eba565b5b81810290505b9392505050565b5f61202082611958565b915061202b83611958565b92506120587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611f45565b905092915050565b5f61206a82611958565b915061207583611958565b925082820261208381611958565b9150828204841483151761209a57612099611eba565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c0820190506120e15f830189611ab1565b6120ee6020830188611b69565b6120fb6040830187611b69565b61210860608301866119fc565b61211560808301856119fc565b61212260a08301846119fc565b979650505050505050565b5f6040820190506121405f830185611b69565b61214d6020830184611b69565b9392505050565b5f6060820190506121675f830186611b69565b61217460208301856119fc565b61218160408301846119fc565b949350505050565b5f61219382611958565b915061219e83611958565b92508282019050808211156121b6576121b5611eba565b5b92915050565b5f60a0820190506121cf5f830188611ab1565b6121dc6020830187611ab1565b6121e96040830186611ab1565b6121f660608301856119fc565b6122036080830184611b69565b9695505050505050565b5f6080820190506122205f830187611ab1565b61222d6020830186611a80565b61223a6040830185611ab1565b6122476060830184611ab1565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220b05360c70e06311116f33f330c5fa498e30447712803888829cd72c6f80839e864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xABD81CA2 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D0 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x306 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x57B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x472 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x472 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x455 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x486 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH2 0x493 DUP2 DUP6 DUP6 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4B1 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH2 0x4BE DUP6 DUP3 DUP6 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x4C9 DUP6 DUP6 DUP6 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4E6 PUSH2 0xB89 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x51E DUP3 PUSH2 0x4FF PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP4 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x533 PUSH2 0x52D PUSH2 0x9EE JUMP JUMPDEST DUP3 PUSH2 0xD45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x583 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x58C PUSH0 PUSH2 0xDC4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5A0 DUP3 PUSH2 0x59A PUSH2 0x9EE JUMP JUMPDEST DUP4 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x5AA DUP3 DUP3 PUSH2 0xD45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5B8 DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x5D0 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0xF08 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x20A1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x625 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69B SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x712 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x712 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x726 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH2 0x733 DUP2 DUP6 DUP6 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x76B DUP3 DUP7 PUSH2 0x74C PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP7 PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x797 DUP6 DUP6 PUSH2 0x778 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP7 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x7E8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x816 DUP13 PUSH2 0xF43 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x84E DUP3 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x85D DUP3 DUP8 DUP8 DUP8 PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8D1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP3 SWAP2 SWAP1 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DC DUP11 DUP11 DUP11 PUSH2 0x9F5 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x972 PUSH2 0xC3F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EB DUP2 PUSH2 0xDC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA02 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA12 DUP5 DUP5 PUSH2 0x8E8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA93 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA84 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA92 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 DUP4 PUSH2 0x11AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC04 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC31 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xC39 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC47 PUSH2 0x9EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC65 PUSH2 0x664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC4 JUMPI PUSH2 0xC88 PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD41 PUSH0 DUP4 DUP4 PUSH2 0x11AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAC SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC0 DUP3 PUSH0 DUP4 PUSH2 0x11AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF03 PUSH1 0x6 PUSH32 0x0 PUSH2 0x145A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF3E PUSH1 0x7 PUSH32 0x0 PUSH2 0x145A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA8 PUSH2 0xFA2 PUSH2 0xB89 JUMP JUMPDEST DUP4 PUSH2 0x1507 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xFBF DUP9 DUP9 DUP9 DUP9 PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xFCF DUP3 DUP3 PUSH2 0x162E JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x104D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B4 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x119D SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x2189 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12CA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1285 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1311 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x135B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13B8 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x143F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1476 JUMPI PUSH2 0x146F DUP4 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP PUSH2 0x1501 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1482 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14AE SWAP1 PUSH2 0x1E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1583 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1624 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x15A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1617 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1624 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1653 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x178C JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x166E JUMPI PUSH2 0x166D PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1681 JUMPI PUSH2 0x1680 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1723 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171A SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1749 JUMPI PUSH2 0x1748 PUSH2 0x2250 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x178B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x179C DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BA JUMPI PUSH2 0x17B9 PUSH2 0x20A1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1847 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1887 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x186C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AC DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x18B6 DUP2 DUP6 PUSH2 0x185A JUMP JUMPDEST SWAP4 POP PUSH2 0x18C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x186A JUMP JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x1892 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F2 DUP2 DUP5 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1927 DUP3 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1937 DUP2 PUSH2 0x191D JUMP JUMPDEST DUP2 EQ PUSH2 0x1941 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1952 DUP2 PUSH2 0x192E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196A DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP2 EQ PUSH2 0x1974 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1985 DUP2 PUSH2 0x1961 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BF DUP6 DUP3 DUP7 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DD DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A05 DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1E PUSH0 DUP4 ADD DUP5 PUSH2 0x19FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A48 DUP7 DUP3 DUP8 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A59 DUP7 DUP3 DUP8 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6A DUP7 DUP3 DUP8 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A89 DUP2 PUSH2 0x1A74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABA DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEE JUMPI PUSH2 0x1AED PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFB DUP5 DUP3 DUP6 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B26 DUP5 DUP3 DUP6 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B63 DUP2 PUSH2 0x1B2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B72 DUP2 PUSH2 0x191D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BAA DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBB DUP4 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDD DUP3 PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x1BE7 DUP2 DUP6 PUSH2 0x1B82 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BF2 DUP4 PUSH2 0x1B92 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C22 JUMPI DUP2 MLOAD PUSH2 0x1C09 DUP9 DUP3 PUSH2 0x1BB0 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C14 DUP4 PUSH2 0x1BC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BF5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1C42 PUSH0 DUP4 ADD DUP11 PUSH2 0x1B5A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C54 DUP2 DUP10 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1C68 DUP2 DUP9 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C77 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1C84 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x1C91 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1AB1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1CA3 DUP2 DUP5 PUSH2 0x1BD3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CEF DUP8 DUP3 DUP9 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D00 DUP8 DUP3 DUP9 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D11 DUP8 DUP3 DUP9 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1D22 DUP8 DUP3 DUP9 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1D37 DUP2 PUSH2 0x1A74 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D52 DUP2 PUSH2 0x1D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D61 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D7C DUP2 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DAA DUP11 DUP3 DUP12 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DBB DUP11 DUP3 DUP12 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1DCC DUP11 DUP3 DUP12 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1DDD DUP11 DUP3 DUP12 ADD PUSH2 0x1977 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1DEE DUP11 DUP3 DUP12 ADD PUSH2 0x1D44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1DFF DUP11 DUP3 DUP12 ADD PUSH2 0x1D6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1E10 DUP11 DUP3 DUP12 ADD PUSH2 0x1D6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E35 JUMPI PUSH2 0x1E34 PUSH2 0x18FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E42 DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E53 DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EA1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EB4 JUMPI PUSH2 0x1EB3 PUSH2 0x1E5D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F3C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F18 JUMPI PUSH2 0x1F17 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F27 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F35 DUP6 PUSH2 0x1EE7 JUMP JUMPDEST SWAP5 POP PUSH2 0x1EFC JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1F54 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x200F JUMP JUMPDEST DUP2 PUSH2 0x1F61 JUMPI PUSH0 SWAP1 POP PUSH2 0x200F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F77 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F81 JUMPI PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x200F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F92 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST POP PUSH2 0x200F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FE5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1FE0 JUMPI PUSH2 0x1FDF PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST PUSH2 0x200F JUMP JUMPDEST PUSH2 0x1FF2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1EF3 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2009 JUMPI PUSH2 0x2008 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 DUP3 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x202B DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP PUSH2 0x2058 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x206A DUP3 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x2075 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2083 DUP2 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x209A JUMPI PUSH2 0x2099 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x20E1 PUSH0 DUP4 ADD DUP10 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x20EE PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x20FB PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x2108 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2115 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2122 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x19FC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2140 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x214D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2167 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x2174 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2181 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19FC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2193 DUP3 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x219E DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x1EBA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x21CF PUSH0 DUP4 ADD DUP9 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x21DC PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x21E9 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x21F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x2203 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B69 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2220 PUSH0 DUP4 ADD DUP8 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x222D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x223A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x2247 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AB1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 MSTORE8 PUSH1 0xC7 0xE MOD BALANCE GT AND RETURN EXTCODEHASH CALLER 0xC PUSH0 LOG4 SWAP9 0xE3 DIV SELFBALANCE PUSH18 0x2803888829CD72C6F80839E864736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "80743:685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67851:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;70070:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;68921:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;70816:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;68779:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79364:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;80984:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;80055:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;69076:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;61658:101;;;:::i;:::-;;80458:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;79114:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38759:557;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;61003:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;68053:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;69387:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;81113:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78388:672;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;69623:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;61908:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;67851:89;67896:13;67928:5;67921:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67851:89;:::o;70070:186::-;70143:4;70159:13;70175:12;:10;:12::i;:::-;70159:28;;70197:31;70206:5;70213:7;70222:5;70197:8;:31::i;:::-;70245:4;70238:11;;;70070:186;;;;:::o;68921:97::-;68973:7;68999:12;;68992:19;;68921:97;:::o;70816:244::-;70903:4;70919:15;70937:12;:10;:12::i;:::-;70919:30;;70959:37;70975:4;70981:7;70990:5;70959:15;:37::i;:::-;71006:26;71016:4;71022:2;71026:5;71006:9;:26::i;:::-;71049:4;71042:11;;;70816:244;;;;;:::o;68779:82::-;68828:5;68852:2;68845:9;;68779:82;:::o;79364:112::-;79423:7;79449:20;:18;:20::i;:::-;79442:27;;79364:112;:::o;80984:123::-;60896:13;:11;:13::i;:::-;81053:47:::1;81059:2;81087:10;:8;:10::i;:::-;81079:19;;81073:2;:25;;;;:::i;:::-;81063:6;:36;;;;:::i;:::-;81053:5;:47::i;:::-;80984:123:::0;;:::o;80055:87::-;80109:26;80115:12;:10;:12::i;:::-;80129:5;80109;:26::i;:::-;80055:87;:::o;69076:116::-;69141:7;69167:9;:18;69177:7;69167:18;;;;;;;;;;;;;;;;69160:25;;69076:116;;;:::o;61658:101::-;60896:13;:11;:13::i;:::-;61722:30:::1;61749:1;61722:18;:30::i;:::-;61658:101::o:0;80458:158::-;80533:45;80549:7;80558:12;:10;:12::i;:::-;80572:5;80533:15;:45::i;:::-;80588:21;80594:7;80603:5;80588;:21::i;:::-;80458:158;;:::o;79114:143::-;79205:7;79231:19;79244:5;79231:12;:19::i;:::-;79224:26;;79114:143;;;:::o;38759:557::-;38857:13;38884:18;38916:21;38951:15;38980:25;39019:12;39045:27;39148:13;:11;:13::i;:::-;39175:16;:14;:16::i;:::-;39205:13;39240:4;39267:1;39259:10;;39297:1;39283:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39097:212;;;;;;;;;;;;;;;;;;;;;38759:557;;;;;;;:::o;61003:85::-;61049:7;61075:6;;;;;;;;;;;61068:13;;61003:85;:::o;68053:93::-;68100:13;68132:7;68125:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68053:93;:::o;69387:178::-;69456:4;69472:13;69488:12;:10;:12::i;:::-;69472:28;;69510:27;69520:5;69527:2;69531:5;69510:9;:27::i;:::-;69554:4;69547:11;;;69387:178;;;;:::o;81113:313::-;81240:4;81255:76;81271:15;81288:4;81318:10;:8;:10::i;:::-;81310:19;;81304:2;:25;;;;:::i;:::-;81294:6;:36;;;;:::i;:::-;81255:15;:76::i;:::-;81341:57;81351:4;81357:2;81385:10;:8;:10::i;:::-;81377:19;;81371:2;:25;;;;:::i;:::-;81361:6;:36;;;;:::i;:::-;81341:9;:57::i;:::-;81415:4;81408:11;;81113:313;;;;;;:::o;78388:672::-;78609:8;78591:15;:26;78587:97;;;78664:8;78640:33;;;;;;;;;;;:::i;:::-;;;;;;;;78587:97;78694:18;77730:95;78753:5;78760:7;78769:5;78776:16;78786:5;78776:9;:16::i;:::-;78794:8;78725:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;78715:89;;;;;;78694:110;;78815:12;78830:28;78847:10;78830:16;:28::i;:::-;78815:43;;78869:14;78886:28;78900:4;78906:1;78909;78912;78886:13;:28::i;:::-;78869:45;;78938:5;78928:15;;:6;:15;;;78924:88;;78987:6;78995:5;78966:35;;;;;;;;;;;;:::i;:::-;;;;;;;;78924:88;79022:31;79031:5;79038:7;79047:5;79022:8;:31::i;:::-;78577:483;;;78388:672;;;;;;;:::o;69623:140::-;69703:7;69729:11;:18;69741:5;69729:18;;;;;;;;;;;;;;;:27;69748:7;69729:27;;;;;;;;;;;;;;;;69722:34;;69623:140;;;;:::o;61908:215::-;60896:13;:11;:13::i;:::-;62012:1:::1;61992:22;;:8;:22;;::::0;61988:91:::1;;62065:1;62037:31;;;;;;;;;;;:::i;:::-;;;;;;;;61988:91;62088:28;62107:8;62088:18;:28::i;:::-;61908:215:::0;:::o;59081:96::-;59134:7;59160:10;59153:17;;59081:96;:::o;74766:128::-;74850:37;74859:5;74866:7;74875:5;74882:4;74850:8;:37::i;:::-;74766:128;;;:::o;76440:477::-;76539:24;76566:25;76576:5;76583:7;76566:9;:25::i;:::-;76539:52;;76625:17;76605:16;:37;76601:310;;76681:5;76662:16;:24;76658:130;;;76740:7;76749:16;76767:5;76713:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;76658:130;76829:57;76838:5;76845:7;76873:5;76854:16;:24;76880:5;76829:8;:57::i;:::-;76601:310;76529:388;76440:477;;;:::o;71433:300::-;71532:1;71516:18;;:4;:18;;;71512:86;;71584:1;71557:30;;;;;;;;;;;:::i;:::-;;;;;;;;71512:86;71625:1;71611:16;;:2;:16;;;71607:86;;71679:1;71650:32;;;;;;;;;;;:::i;:::-;;;;;;;;71607:86;71702:24;71710:4;71716:2;71720:5;71702:7;:24::i;:::-;71433:300;;;:::o;37460:262::-;37513:7;37553:11;37536:28;;37544:4;37536:28;;;:63;;;;;37585:14;37568:13;:31;37536:63;37532:184;;;37622:22;37615:29;;;;37532:184;37682:23;:21;:23::i;:::-;37675:30;;37460:262;;:::o;61161:162::-;61231:12;:10;:12::i;:::-;61220:23;;:7;:5;:7::i;:::-;:23;;;61216:101;;61293:12;:10;:12::i;:::-;61266:40;;;;;;;;;;;:::i;:::-;;;;;;;;61216:101;61161:162::o;73498:208::-;73587:1;73568:21;;:7;:21;;;73564:91;;73641:1;73612:32;;;;;;;;;;;:::i;:::-;;;;;;;;73564:91;73664:35;73680:1;73684:7;73693:5;73664:7;:35::i;:::-;73498:208;;:::o;74024:206::-;74113:1;74094:21;;:7;:21;;;74090:89;;74165:1;74138:30;;;;;;;;;;;:::i;:::-;;;;;;;;74090:89;74188:35;74196:7;74213:1;74217:5;74188:7;:35::i;:::-;74024:206;;:::o;62277:187::-;62350:16;62369:6;;;;;;;;;;;62350:25;;62394:8;62385:6;;:17;;;;;;;;;;;;;;;;;;62448:8;62417:40;;62438:8;62417:40;;;;;;;;;;;;62340:124;62277:187;:::o;559:107::-;619:7;645;:14;653:5;645:14;;;;;;;;;;;;;;;;638:21;;559:107;;;:::o;39636:126::-;39682:13;39714:41;39741:13;39714:5;:26;;:41;;;;:::i;:::-;39707:48;;39636:126;:::o;40088:135::-;40137:13;40169:47;40199:16;40169:8;:29;;:47;;;;:::i;:::-;40162:54;;40088:135;:::o;780:395::-;840:7;1142;:14;1150:5;1142:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1135:23;;780:395;;;:::o;38532:176::-;38609:7;38635:66;38668:20;:18;:20::i;:::-;38690:10;38635:32;:66::i;:::-;38628:73;;38532:176;;;:::o;47062:260::-;47147:7;47167:17;47186:18;47206:16;47226:25;47237:4;47243:1;47246;47249;47226:10;:25::i;:::-;47166:85;;;;;;47261:28;47273:5;47280:8;47261:11;:28::i;:::-;47306:9;47299:16;;;;;47062:260;;;;;;:::o;75726:432::-;75855:1;75838:19;;:5;:19;;;75834:89;;75909:1;75880:32;;;;;;;;;;;:::i;:::-;;;;;;;;75834:89;75955:1;75936:21;;:7;:21;;;75932:90;;76008:1;75980:31;;;;;;;;;;;:::i;:::-;;;;;;;;75932:90;76061:5;76031:11;:18;76043:5;76031:18;;;;;;;;;;;;;;;:27;76050:7;76031:27;;;;;;;;;;;;;;;:35;;;;76080:9;76076:76;;;76126:7;76110:31;;76119:5;76110:31;;;76135:5;76110:31;;;;;;:::i;:::-;;;;;;;;76076:76;75726:432;;;;:::o;72048:1107::-;72153:1;72137:18;;:4;:18;;;72133:540;;72289:5;72273:12;;:21;;;;;;;:::i;:::-;;;;;;;;72133:540;;;72325:19;72347:9;:15;72357:4;72347:15;;;;;;;;;;;;;;;;72325:37;;72394:5;72380:11;:19;72376:115;;;72451:4;72457:11;72470:5;72426:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;72376:115;72643:5;72629:11;:19;72611:9;:15;72621:4;72611:15;;;;;;;;;;;;;;;:37;;;;72311:362;72133:540;72701:1;72687:16;;:2;:16;;;72683:425;;72866:5;72850:12;;:21;;;;;;;;;;;72683:425;;;73078:5;73061:9;:13;73071:2;73061:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;72683:425;73138:2;73123:25;;73132:4;73123:25;;;73142:5;73123:25;;;;;;:::i;:::-;;;;;;;;72048:1107;;;:::o;37728:179::-;37783:7;35694:95;37841:11;37854:14;37870:13;37893:4;37819:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37809:91;;;;;;37802:98;;37728:179;:::o;9600:267::-;9694:13;7605:66;9752:17;;9742:5;9723:46;9719:142;;9792:15;9801:5;9792:8;:15::i;:::-;9785:22;;;;9719:142;9845:5;9838:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9600:267;;;;;:::o;33351:401::-;33444:14;33553:4;33547:11;33583:10;33578:3;33571:23;33630:15;33623:4;33618:3;33614:14;33607:39;33682:10;33675:4;33670:3;33666:14;33659:34;33731:4;33726:3;33716:20;33706:30;;33522:224;33351:401;;;;:::o;45399:1530::-;45525:7;45534:12;45548:7;46458:66;46453:1;46445:10;;:79;46441:164;;;46556:1;46560:30;46592:1;46540:54;;;;;;;;46441:164;46699:14;46716:24;46726:4;46732:1;46735;46738;46716:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46699:41;;46772:1;46754:20;;:6;:20;;;46750:113;;46806:1;46810:29;46849:1;46841:10;;46790:62;;;;;;;;;46750:113;46881:6;46889:20;46919:1;46911:10;;46873:49;;;;;;;45399:1530;;;;;;;;;:::o;47455:532::-;47550:20;47541:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;47537:444;47586:7;47537:444;47646:29;47637:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;47633:348;;47698:23;;;;;;;;;;;;;;47633:348;47751:35;47742:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;47738:243;;47845:8;47837:17;;47809:46;;;;;;;;;;;:::i;:::-;;;;;;;;47738:243;47885:30;47876:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;47872:109;;47961:8;47938:32;;;;;;;;;;;:::i;:::-;;;;;;;;47872:109;47455:532;;;:::o;8293:405::-;8352:13;8377:11;8391:16;8402:4;8391:10;:16::i;:::-;8377:30;;8495:17;8526:2;8515:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8495:34;;8617:3;8612;8605:16;8657:4;8650;8645:3;8641:14;8634:28;8688:3;8681:10;;;;8293:405;;;:::o;8770:245::-;8831:7;8850:14;8903:4;8894;8867:33;;:40;8850:57;;8930:2;8921:6;:11;8917:69;;;8955:20;;;;;;;;;;;;;;8917:69;9002:6;8995:13;;;8770:245;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:::-;5682:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:119;;;5737:79;;:::i;:::-;5699:119;5857:1;5882:53;5927:7;5918:6;5907:9;5903:22;5882:53;:::i;:::-;5872:63;;5828:117;5623:329;;;;:::o;5958:149::-;5994:7;6034:66;6027:5;6023:78;6012:89;;5958:149;;;:::o;6113:115::-;6198:23;6215:5;6198:23;:::i;:::-;6193:3;6186:36;6113:115;;:::o;6234:118::-;6321:24;6339:5;6321:24;:::i;:::-;6316:3;6309:37;6234:118;;:::o;6358:114::-;6425:6;6459:5;6453:12;6443:22;;6358:114;;;:::o;6478:184::-;6577:11;6611:6;6606:3;6599:19;6651:4;6646:3;6642:14;6627:29;;6478:184;;;;:::o;6668:132::-;6735:4;6758:3;6750:11;;6788:4;6783:3;6779:14;6771:22;;6668:132;;;:::o;6806:108::-;6883:24;6901:5;6883:24;:::i;:::-;6878:3;6871:37;6806:108;;:::o;6920:179::-;6989:10;7010:46;7052:3;7044:6;7010:46;:::i;:::-;7088:4;7083:3;7079:14;7065:28;;6920:179;;;;:::o;7105:113::-;7175:4;7207;7202:3;7198:14;7190:22;;7105:113;;;:::o;7254:732::-;7373:3;7402:54;7450:5;7402:54;:::i;:::-;7472:86;7551:6;7546:3;7472:86;:::i;:::-;7465:93;;7582:56;7632:5;7582:56;:::i;:::-;7661:7;7692:1;7677:284;7702:6;7699:1;7696:13;7677:284;;;7778:6;7772:13;7805:63;7864:3;7849:13;7805:63;:::i;:::-;7798:70;;7891:60;7944:6;7891:60;:::i;:::-;7881:70;;7737:224;7724:1;7721;7717:9;7712:14;;7677:284;;;7681:14;7977:3;7970:10;;7378:608;;;7254:732;;;;:::o;7992:1215::-;8341:4;8379:3;8368:9;8364:19;8356:27;;8393:69;8459:1;8448:9;8444:17;8435:6;8393:69;:::i;:::-;8509:9;8503:4;8499:20;8494:2;8483:9;8479:18;8472:48;8537:78;8610:4;8601:6;8537:78;:::i;:::-;8529:86;;8662:9;8656:4;8652:20;8647:2;8636:9;8632:18;8625:48;8690:78;8763:4;8754:6;8690:78;:::i;:::-;8682:86;;8778:72;8846:2;8835:9;8831:18;8822:6;8778:72;:::i;:::-;8860:73;8928:3;8917:9;8913:19;8904:6;8860:73;:::i;:::-;8943;9011:3;9000:9;8996:19;8987:6;8943:73;:::i;:::-;9064:9;9058:4;9054:20;9048:3;9037:9;9033:19;9026:49;9092:108;9195:4;9186:6;9092:108;:::i;:::-;9084:116;;7992:1215;;;;;;;;;;:::o;9213:222::-;9306:4;9344:2;9333:9;9329:18;9321:26;;9357:71;9425:1;9414:9;9410:17;9401:6;9357:71;:::i;:::-;9213:222;;;;:::o;9441:765::-;9527:6;9535;9543;9551;9600:3;9588:9;9579:7;9575:23;9571:33;9568:120;;;9607:79;;:::i;:::-;9568:120;9727:1;9752:53;9797:7;9788:6;9777:9;9773:22;9752:53;:::i;:::-;9742:63;;9698:117;9854:2;9880:53;9925:7;9916:6;9905:9;9901:22;9880:53;:::i;:::-;9870:63;;9825:118;9982:2;10008:53;10053:7;10044:6;10033:9;10029:22;10008:53;:::i;:::-;9998:63;;9953:118;10110:2;10136:53;10181:7;10172:6;10161:9;10157:22;10136:53;:::i;:::-;10126:63;;10081:118;9441:765;;;;;;;:::o;10212:118::-;10283:22;10299:5;10283:22;:::i;:::-;10276:5;10273:33;10263:61;;10320:1;10317;10310:12;10263:61;10212:118;:::o;10336:135::-;10380:5;10418:6;10405:20;10396:29;;10434:31;10459:5;10434:31;:::i;:::-;10336:135;;;;:::o;10477:122::-;10550:24;10568:5;10550:24;:::i;:::-;10543:5;10540:35;10530:63;;10589:1;10586;10579:12;10530:63;10477:122;:::o;10605:139::-;10651:5;10689:6;10676:20;10667:29;;10705:33;10732:5;10705:33;:::i;:::-;10605:139;;;;:::o;10750:1199::-;10861:6;10869;10877;10885;10893;10901;10909;10958:3;10946:9;10937:7;10933:23;10929:33;10926:120;;;10965:79;;:::i;:::-;10926:120;11085:1;11110:53;11155:7;11146:6;11135:9;11131:22;11110:53;:::i;:::-;11100:63;;11056:117;11212:2;11238:53;11283:7;11274:6;11263:9;11259:22;11238:53;:::i;:::-;11228:63;;11183:118;11340:2;11366:53;11411:7;11402:6;11391:9;11387:22;11366:53;:::i;:::-;11356:63;;11311:118;11468:2;11494:53;11539:7;11530:6;11519:9;11515:22;11494:53;:::i;:::-;11484:63;;11439:118;11596:3;11623:51;11666:7;11657:6;11646:9;11642:22;11623:51;:::i;:::-;11613:61;;11567:117;11723:3;11750:53;11795:7;11786:6;11775:9;11771:22;11750:53;:::i;:::-;11740:63;;11694:119;11852:3;11879:53;11924:7;11915:6;11904:9;11900:22;11879:53;:::i;:::-;11869:63;;11823:119;10750:1199;;;;;;;;;;:::o;11955:474::-;12023:6;12031;12080:2;12068:9;12059:7;12055:23;12051:32;12048:119;;;12086:79;;:::i;:::-;12048:119;12206:1;12231:53;12276:7;12267:6;12256:9;12252:22;12231:53;:::i;:::-;12221:63;;12177:117;12333:2;12359:53;12404:7;12395:6;12384:9;12380:22;12359:53;:::i;:::-;12349:63;;12304:118;11955:474;;;;;:::o;12435:180::-;12483:77;12480:1;12473:88;12580:4;12577:1;12570:15;12604:4;12601:1;12594:15;12621:320;12665:6;12702:1;12696:4;12692:12;12682:22;;12749:1;12743:4;12739:12;12770:18;12760:81;;12826:4;12818:6;12814:17;12804:27;;12760:81;12888:2;12880:6;12877:14;12857:18;12854:38;12851:84;;12907:18;;:::i;:::-;12851:84;12672:269;12621:320;;;:::o;12947:180::-;12995:77;12992:1;12985:88;13092:4;13089:1;13082:15;13116:4;13113:1;13106:15;13133:102;13175:8;13222:5;13219:1;13215:13;13194:34;;13133:102;;;:::o;13241:848::-;13302:5;13309:4;13333:6;13324:15;;13357:5;13348:14;;13371:712;13392:1;13382:8;13379:15;13371:712;;;13487:4;13482:3;13478:14;13472:4;13469:24;13466:50;;;13496:18;;:::i;:::-;13466:50;13546:1;13536:8;13532:16;13529:451;;;13961:4;13954:5;13950:16;13941:25;;13529:451;14011:4;14005;14001:15;13993:23;;14041:32;14064:8;14041:32;:::i;:::-;14029:44;;13371:712;;;13241:848;;;;;;;:::o;14095:1073::-;14149:5;14340:8;14330:40;;14361:1;14352:10;;14363:5;;14330:40;14389:4;14379:36;;14406:1;14397:10;;14408:5;;14379:36;14475:4;14523:1;14518:27;;;;14559:1;14554:191;;;;14468:277;;14518:27;14536:1;14527:10;;14538:5;;;14554:191;14599:3;14589:8;14586:17;14583:43;;;14606:18;;:::i;:::-;14583:43;14655:8;14652:1;14648:16;14639:25;;14690:3;14683:5;14680:14;14677:40;;;14697:18;;:::i;:::-;14677:40;14730:5;;;14468:277;;14854:2;14844:8;14841:16;14835:3;14829:4;14826:13;14822:36;14804:2;14794:8;14791:16;14786:2;14780:4;14777:12;14773:35;14757:111;14754:246;;;14910:8;14904:4;14900:19;14891:28;;14945:3;14938:5;14935:14;14932:40;;;14952:18;;:::i;:::-;14932:40;14985:5;;14754:246;15025:42;15063:3;15053:8;15047:4;15044:1;15025:42;:::i;:::-;15010:57;;;;15099:4;15094:3;15090:14;15083:5;15080:25;15077:51;;;15108:18;;:::i;:::-;15077:51;15157:4;15150:5;15146:16;15137:25;;14095:1073;;;;;;:::o;15174:285::-;15234:5;15258:23;15276:4;15258:23;:::i;:::-;15250:31;;15302:27;15320:8;15302:27;:::i;:::-;15290:39;;15348:104;15385:66;15375:8;15369:4;15348:104;:::i;:::-;15339:113;;15174:285;;;;:::o;15465:410::-;15505:7;15528:20;15546:1;15528:20;:::i;:::-;15523:25;;15562:20;15580:1;15562:20;:::i;:::-;15557:25;;15617:1;15614;15610:9;15639:30;15657:11;15639:30;:::i;:::-;15628:41;;15818:1;15809:7;15805:15;15802:1;15799:22;15779:1;15772:9;15752:83;15729:139;;15848:18;;:::i;:::-;15729:139;15513:362;15465:410;;;;:::o;15881:180::-;15929:77;15926:1;15919:88;16026:4;16023:1;16016:15;16050:4;16047:1;16040:15;16067:775;16300:4;16338:3;16327:9;16323:19;16315:27;;16352:71;16420:1;16409:9;16405:17;16396:6;16352:71;:::i;:::-;16433:72;16501:2;16490:9;16486:18;16477:6;16433:72;:::i;:::-;16515;16583:2;16572:9;16568:18;16559:6;16515:72;:::i;:::-;16597;16665:2;16654:9;16650:18;16641:6;16597:72;:::i;:::-;16679:73;16747:3;16736:9;16732:19;16723:6;16679:73;:::i;:::-;16762;16830:3;16819:9;16815:19;16806:6;16762:73;:::i;:::-;16067:775;;;;;;;;;:::o;16848:332::-;16969:4;17007:2;16996:9;16992:18;16984:26;;17020:71;17088:1;17077:9;17073:17;17064:6;17020:71;:::i;:::-;17101:72;17169:2;17158:9;17154:18;17145:6;17101:72;:::i;:::-;16848:332;;;;;:::o;17186:442::-;17335:4;17373:2;17362:9;17358:18;17350:26;;17386:71;17454:1;17443:9;17439:17;17430:6;17386:71;:::i;:::-;17467:72;17535:2;17524:9;17520:18;17511:6;17467:72;:::i;:::-;17549;17617:2;17606:9;17602:18;17593:6;17549:72;:::i;:::-;17186:442;;;;;;:::o;17634:191::-;17674:3;17693:20;17711:1;17693:20;:::i;:::-;17688:25;;17727:20;17745:1;17727:20;:::i;:::-;17722:25;;17770:1;17767;17763:9;17756:16;;17791:3;17788:1;17785:10;17782:36;;;17798:18;;:::i;:::-;17782:36;17634:191;;;;:::o;17831:664::-;18036:4;18074:3;18063:9;18059:19;18051:27;;18088:71;18156:1;18145:9;18141:17;18132:6;18088:71;:::i;:::-;18169:72;18237:2;18226:9;18222:18;18213:6;18169:72;:::i;:::-;18251;18319:2;18308:9;18304:18;18295:6;18251:72;:::i;:::-;18333;18401:2;18390:9;18386:18;18377:6;18333:72;:::i;:::-;18415:73;18483:3;18472:9;18468:19;18459:6;18415:73;:::i;:::-;17831:664;;;;;;;;:::o;18501:545::-;18674:4;18712:3;18701:9;18697:19;18689:27;;18726:71;18794:1;18783:9;18779:17;18770:6;18726:71;:::i;:::-;18807:68;18871:2;18860:9;18856:18;18847:6;18807:68;:::i;:::-;18885:72;18953:2;18942:9;18938:18;18929:6;18885:72;:::i;:::-;18967;19035:2;19024:9;19020:18;19011:6;18967:72;:::i;:::-;18501:545;;;;;;;:::o;19052:180::-;19100:77;19097:1;19090:88;19197:4;19194:1;19187:15;19221:4;19218:1;19211:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1776600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "450",
								"eip712Domain()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"owner()": "2604",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferParticipationToken(address,address,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 80823,
									"end": 80978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "PUSH",
									"source": 0,
									"value": "50617274696369706174696F6E546F6B656E0000000000000000000000000000"
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78321,
									"end": 78325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "PUSH",
									"source": 0,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80916,
									"end": 80928,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "50617274696369706174696F6E546F6B656E0000000000000000000000000000"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "PUSH",
									"source": 0,
									"value": "50544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67747,
									"end": 67752,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67739,
									"end": 67744,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67739,
									"end": 67752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67739,
									"end": 67752,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67772,
									"end": 67779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67762,
									"end": 67769,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67762,
									"end": 67779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67762,
									"end": 67779,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67673,
									"end": 67786,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60662,
									"end": 60663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60638,
									"end": 60664,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60638,
									"end": 60664,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60638,
									"end": 60650,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60638,
									"end": 60664,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60638,
									"end": 60664,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60638,
									"end": 60664,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60634,
									"end": 60729,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 60634,
									"end": 60729,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60715,
									"end": 60716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 60687,
									"end": 60718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60687,
									"end": 60718,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60634,
									"end": 60729,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 60634,
									"end": 60729,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60738,
									"end": 60770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60757,
									"end": 60769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60738,
									"end": 60756,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 60738,
									"end": 60756,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60738,
									"end": 60756,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 60738,
									"end": 60770,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60738,
									"end": 60770,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 60738,
									"end": 60770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60738,
									"end": 60770,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60738,
									"end": 60770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60590,
									"end": 60777,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37061,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37047,
									"end": 37060,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 37016,
									"end": 37020,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37046,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 37016,
									"end": 37046,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37016,
									"end": 37046,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37046,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37061,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37061,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37061,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37016,
									"end": 37061,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37016,
									"end": 37061,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37016,
									"end": 37061,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37008,
									"end": 37061,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 37008,
									"end": 37061,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37008,
									"end": 37061,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37008,
									"end": 37061,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37008,
									"end": 37061,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37008,
									"end": 37061,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 37116,
									"end": 37132,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 37082,
									"end": 37089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37115,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 37082,
									"end": 37115,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37082,
									"end": 37115,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37115,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37133,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37133,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37082,
									"end": 37133,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37082,
									"end": 37133,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 37082,
									"end": 37133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37071,
									"end": 37133,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 37071,
									"end": 37133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37071,
									"end": 37133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37071,
									"end": 37133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37071,
									"end": 37133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37071,
									"end": 37133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37173,
									"end": 37177,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37157,
									"end": 37179,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37157,
									"end": 37179,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37157,
									"end": 37179,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37157,
									"end": 37179,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37157,
									"end": 37179,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37157,
									"end": 37179,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37143,
									"end": 37179,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 37143,
									"end": 37179,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37143,
									"end": 37179,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37143,
									"end": 37179,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37143,
									"end": 37179,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37143,
									"end": 37179,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37222,
									"end": 37229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37206,
									"end": 37231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37206,
									"end": 37231,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37206,
									"end": 37231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37206,
									"end": 37231,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37206,
									"end": 37231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37206,
									"end": 37231,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37189,
									"end": 37231,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 37189,
									"end": 37231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37189,
									"end": 37231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37189,
									"end": 37231,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37189,
									"end": 37231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37189,
									"end": 37231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37259,
									"end": 37272,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 37242,
									"end": 37272,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 37242,
									"end": 37272,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37242,
									"end": 37272,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37242,
									"end": 37272,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37242,
									"end": 37272,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37242,
									"end": 37272,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37307,
									"end": 37330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 37307,
									"end": 37328,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 37307,
									"end": 37328,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37307,
									"end": 37328,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 37307,
									"end": 37330,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37307,
									"end": 37330,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 37307,
									"end": 37330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37307,
									"end": 37330,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 37307,
									"end": 37330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37282,
									"end": 37330,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37282,
									"end": 37330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37282,
									"end": 37330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37282,
									"end": 37330,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37282,
									"end": 37330,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37282,
									"end": 37330,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37362,
									"end": 37366,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37340,
									"end": 37367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36943,
									"end": 37374,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78282,
									"end": 78334,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80823,
									"end": 80978,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62277,
									"end": 62464,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 62277,
									"end": 62464,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62350,
									"end": 62366,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62369,
									"end": 62375,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62350,
									"end": 62375,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62350,
									"end": 62375,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62394,
									"end": 62402,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62391,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 62385,
									"end": 62391,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 62385,
									"end": 62402,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62448,
									"end": 62456,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62438,
									"end": 62446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62417,
									"end": 62457,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 62340,
									"end": 62464,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62277,
									"end": 62464,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62277,
									"end": 62464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9225,
									"end": 9236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9274,
									"end": 9276,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9258,
									"end": 9263,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9252,
									"end": 9271,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9252,
									"end": 9276,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 9248,
									"end": 9463,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9248,
									"end": 9463,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 9248,
									"end": 9463,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9299,
									"end": 9319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 9313,
									"end": 9318,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9299,
									"end": 9312,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 9299,
									"end": 9312,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9299,
									"end": 9312,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9299,
									"end": 9319,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9299,
									"end": 9319,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9299,
									"end": 9319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9299,
									"end": 9319,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 9299,
									"end": 9319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 9292,
									"end": 9319,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9248,
									"end": 9463,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 9248,
									"end": 9463,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9391,
									"end": 9396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9382,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 9376,
									"end": 9381,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9375,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 9350,
									"end": 9375,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9350,
									"end": 9375,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9382,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9350,
									"end": 9382,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9382,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 9350,
									"end": 9382,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9388,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9350,
									"end": 9396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9350,
									"end": 9396,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7605,
									"end": 7671,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 9434,
									"end": 9451,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9434,
									"end": 9451,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9410,
									"end": 9452,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9410,
									"end": 9452,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9129,
									"end": 9469,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9129,
									"end": 9469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37728,
									"end": 37907,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 37728,
									"end": 37907,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37783,
									"end": 37790,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35694,
									"end": 35789,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 37841,
									"end": 37852,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 37841,
									"end": 37852,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37854,
									"end": 37868,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 37854,
									"end": 37868,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 37883,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 37893,
									"end": 37897,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 37819,
									"end": 37899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37819,
									"end": 37899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37809,
									"end": 37900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37809,
									"end": 37900,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37809,
									"end": 37900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37809,
									"end": 37900,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37809,
									"end": 37900,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37809,
									"end": 37900,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37802,
									"end": 37900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37802,
									"end": 37900,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37728,
									"end": 37907,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37728,
									"end": 37907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7923,
									"end": 8209,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 7923,
									"end": 8209,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7988,
									"end": 7999,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8011,
									"end": 8028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8037,
									"end": 8040,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8011,
									"end": 8041,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8011,
									"end": 8041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8069,
									"end": 8071,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8055,
									"end": 8059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8055,
									"end": 8066,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8055,
									"end": 8071,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8051,
									"end": 8123,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8051,
									"end": 8123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 8051,
									"end": 8123,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8108,
									"end": 8111,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "PUSH",
									"source": 0,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 8094,
									"end": 8112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8094,
									"end": 8112,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8051,
									"end": 8123,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 8051,
									"end": 8123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8189,
									"end": 8193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8189,
									"end": 8200,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8172,
									"end": 8185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 8172,
									"end": 8185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8172,
									"end": 8185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 8172,
									"end": 8185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8172,
									"end": 8185,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 8172,
									"end": 8185,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8164,
									"end": 8186,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8200,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8156,
									"end": 8201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8156,
									"end": 8201,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8132,
									"end": 8202,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8132,
									"end": 8202,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8132,
									"end": 8202,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7923,
									"end": 8209,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7923,
									"end": 8209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7923,
									"end": 8209,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7923,
									"end": 8209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5439,
									"end": 5641,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 5439,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5507,
									"end": 5527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5615,
									"end": 5625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5605,
									"end": 5625,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5605,
									"end": 5625,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5439,
									"end": 5641,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5439,
									"end": 5641,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5439,
									"end": 5641,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5439,
									"end": 5641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6858,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 6781,
									"end": 6858,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6818,
									"end": 6825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6847,
									"end": 6852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6836,
									"end": 6852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6836,
									"end": 6852,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6858,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6858,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6858,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6864,
									"end": 6982,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 6864,
									"end": 6982,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6951,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 6969,
									"end": 6974,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6951,
									"end": 6975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 6951,
									"end": 6975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6951,
									"end": 6975,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 6951,
									"end": 6975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6946,
									"end": 6949,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6939,
									"end": 6976,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6864,
									"end": 6982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6864,
									"end": 6982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6864,
									"end": 6982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6988,
									"end": 7106,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 6988,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7093,
									"end": 7098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 7075,
									"end": 7099,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7099,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7075,
									"end": 7099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7070,
									"end": 7073,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7063,
									"end": 7100,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6988,
									"end": 7106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6988,
									"end": 7106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6988,
									"end": 7106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7317,
									"end": 7321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7355,
									"end": 7358,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 7344,
									"end": 7353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7340,
									"end": 7359,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7332,
									"end": 7359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7332,
									"end": 7359,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7369,
									"end": 7440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 7437,
									"end": 7438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7426,
									"end": 7435,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7422,
									"end": 7439,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7413,
									"end": 7419,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 7369,
									"end": 7440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 7369,
									"end": 7440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7369,
									"end": 7440,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 7369,
									"end": 7440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7450,
									"end": 7522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 7518,
									"end": 7520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7507,
									"end": 7516,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7503,
									"end": 7521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7494,
									"end": 7500,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7450,
									"end": 7522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 7450,
									"end": 7522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7450,
									"end": 7522,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 7450,
									"end": 7522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7532,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 7600,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7589,
									"end": 7598,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7585,
									"end": 7603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7576,
									"end": 7582,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7532,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 7532,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7532,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 7532,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7614,
									"end": 7686,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 7682,
									"end": 7684,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 7671,
									"end": 7680,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7667,
									"end": 7685,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7658,
									"end": 7664,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7614,
									"end": 7686,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 7614,
									"end": 7686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7614,
									"end": 7686,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 7614,
									"end": 7686,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7769,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 7764,
									"end": 7767,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 7753,
									"end": 7762,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7749,
									"end": 7768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7740,
									"end": 7746,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7769,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 7696,
									"end": 7769,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7769,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 7696,
									"end": 7769,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7112,
									"end": 7776,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7782,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 7782,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7866,
									"end": 7877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7895,
									"end": 7898,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7888,
									"end": 7907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7940,
									"end": 7944,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7935,
									"end": 7938,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7931,
									"end": 7945,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7945,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7945,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7782,
									"end": 7951,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7782,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7782,
									"end": 7951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7782,
									"end": 7951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7782,
									"end": 7951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7957,
									"end": 8203,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 7957,
									"end": 8203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8038,
									"end": 8039,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8062,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8059,
									"end": 8060,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8056,
									"end": 8069,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 8148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8142,
									"end": 8145,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8138,
									"end": 8149,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8132,
									"end": 8150,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8128,
									"end": 8129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8123,
									"end": 8126,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8119,
									"end": 8130,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8112,
									"end": 8151,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8084,
									"end": 8086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8081,
									"end": 8082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8077,
									"end": 8087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8072,
									"end": 8087,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8072,
									"end": 8087,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8048,
									"end": 8161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8186,
									"end": 8192,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8181,
									"end": 8184,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8177,
									"end": 8193,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8170,
									"end": 8197,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8019,
									"end": 8203,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7957,
									"end": 8203,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7957,
									"end": 8203,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7957,
									"end": 8203,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7957,
									"end": 8203,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8209,
									"end": 8311,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 8209,
									"end": 8311,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8250,
									"end": 8256,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8301,
									"end": 8303,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8297,
									"end": 8304,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8292,
									"end": 8294,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8285,
									"end": 8290,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8281,
									"end": 8295,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8277,
									"end": 8305,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8305,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8267,
									"end": 8305,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8209,
									"end": 8311,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8209,
									"end": 8311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8209,
									"end": 8311,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8209,
									"end": 8311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8694,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 8317,
									"end": 8694,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8405,
									"end": 8408,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8433,
									"end": 8472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8466,
									"end": 8471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8433,
									"end": 8472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 8433,
									"end": 8472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8433,
									"end": 8472,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8433,
									"end": 8472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8488,
									"end": 8559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8552,
									"end": 8558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8547,
									"end": 8550,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8488,
									"end": 8559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 8488,
									"end": 8559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8488,
									"end": 8559,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8488,
									"end": 8559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8481,
									"end": 8559,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 8481,
									"end": 8559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8568,
									"end": 8633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8626,
									"end": 8632,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8621,
									"end": 8624,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8607,
									"end": 8612,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8603,
									"end": 8619,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8568,
									"end": 8633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 8568,
									"end": 8633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8568,
									"end": 8633,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8568,
									"end": 8633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8658,
									"end": 8687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 8680,
									"end": 8686,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8658,
									"end": 8687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 8658,
									"end": 8687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8658,
									"end": 8687,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 8658,
									"end": 8687,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8653,
									"end": 8656,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8649,
									"end": 8688,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8642,
									"end": 8688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8642,
									"end": 8688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8409,
									"end": 8694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8694,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8317,
									"end": 8694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8700,
									"end": 9013,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 8700,
									"end": 9013,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8813,
									"end": 8817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8851,
									"end": 8853,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8840,
									"end": 8849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8836,
									"end": 8854,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8828,
									"end": 8854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8828,
									"end": 8854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8900,
									"end": 8909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8894,
									"end": 8898,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8890,
									"end": 8910,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8886,
									"end": 8887,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8875,
									"end": 8884,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8871,
									"end": 8888,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8911,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 9006,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 9001,
									"end": 9005,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8992,
									"end": 8998,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 9006,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 8928,
									"end": 9006,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 9006,
									"name": "tag",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 8928,
									"end": 9006,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8920,
									"end": 9006,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8920,
									"end": 9006,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8700,
									"end": 9013,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8700,
									"end": 9013,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8700,
									"end": 9013,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8700,
									"end": 9013,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8700,
									"end": 9013,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9019,
									"end": 9117,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 9019,
									"end": 9117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9070,
									"end": 9076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9098,
									"end": 9110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9088,
									"end": 9110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9088,
									"end": 9110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9019,
									"end": 9117,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9019,
									"end": 9117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9019,
									"end": 9117,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9019,
									"end": 9117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9123,
									"end": 9239,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 9123,
									"end": 9239,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9178,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9197,
									"end": 9200,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9189,
									"end": 9200,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9189,
									"end": 9200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9227,
									"end": 9231,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9222,
									"end": 9225,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9218,
									"end": 9232,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9210,
									"end": 9232,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9210,
									"end": 9232,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9123,
									"end": 9239,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9123,
									"end": 9239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9123,
									"end": 9239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9123,
									"end": 9239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9245,
									"end": 9399,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 9245,
									"end": 9399,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9288,
									"end": 9299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9324,
									"end": 9353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9348,
									"end": 9351,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9342,
									"end": 9352,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9324,
									"end": 9353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 9324,
									"end": 9353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9324,
									"end": 9353,
									"name": "tag",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9324,
									"end": 9353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9392,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9392,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9392,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9300,
									"end": 9399,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9245,
									"end": 9399,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9245,
									"end": 9399,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9245,
									"end": 9399,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9245,
									"end": 9399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9405,
									"end": 9999,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 9405,
									"end": 9999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9489,
									"end": 9494,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9520,
									"end": 9558,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9552,
									"end": 9557,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9520,
									"end": 9558,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 9520,
									"end": 9558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9520,
									"end": 9558,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9520,
									"end": 9558,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9583,
									"end": 9588,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9610,
									"end": 9650,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9644,
									"end": 9649,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9610,
									"end": 9650,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 9610,
									"end": 9650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9610,
									"end": 9650,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9610,
									"end": 9650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9598,
									"end": 9650,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9598,
									"end": 9650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9669,
									"end": 9704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9695,
									"end": 9703,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9669,
									"end": 9704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 9669,
									"end": 9704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9669,
									"end": 9704,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9669,
									"end": 9704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9660,
									"end": 9704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9660,
									"end": 9704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9728,
									"end": 9730,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9720,
									"end": 9726,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9717,
									"end": 9731,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 9714,
									"end": 9992,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9714,
									"end": 9992,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 9714,
									"end": 9992,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9799,
									"end": 9968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 9884,
									"end": 9950,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9854,
									"end": 9860,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9850,
									"end": 9852,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9846,
									"end": 9861,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9843,
									"end": 9844,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 9839,
									"end": 9862,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9799,
									"end": 9968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 9799,
									"end": 9968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9799,
									"end": 9968,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 9799,
									"end": 9968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9776,
									"end": 9781,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9755,
									"end": 9982,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9746,
									"end": 9982,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9746,
									"end": 9982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9714,
									"end": 9992,
									"name": "tag",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 9714,
									"end": 9992,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9495,
									"end": 9999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9495,
									"end": 9999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9405,
									"end": 9999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9405,
									"end": 9999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9405,
									"end": 9999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9405,
									"end": 9999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1919"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1916"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1913"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1911"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1909"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1907"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1905"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 81428,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b05360c70e06311116f33f330c5fa498e30447712803888829cd72c6f80839e864736f6c63430008180033",
									".code": [
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "ABD81CA2"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80743,
											"end": 81428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 67851,
											"end": 67940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 67851,
											"end": 67940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 70070,
											"end": 70256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 70070,
											"end": 70256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 70070,
											"end": 70256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 68921,
											"end": 69018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 68921,
											"end": 69018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 70816,
											"end": 71060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 70816,
											"end": 71060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 70816,
											"end": 71060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 68779,
											"end": 68861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 68779,
											"end": 68861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79364,
											"end": 79476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79364,
											"end": 79476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 80984,
											"end": 81107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 80984,
											"end": 81107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 80055,
											"end": 80142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 80055,
											"end": 80142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 69076,
											"end": 69192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 69076,
											"end": 69192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 69076,
											"end": 69192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 61658,
											"end": 61759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 80458,
											"end": 80616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 80458,
											"end": 80616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 79114,
											"end": 79257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 79114,
											"end": 79257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 79114,
											"end": 79257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38759,
											"end": 39316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 38759,
											"end": 39316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 61003,
											"end": 61088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 61003,
											"end": 61088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 68053,
											"end": 68146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 68053,
											"end": 68146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 69387,
											"end": 69565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 69387,
											"end": 69565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 69387,
											"end": 69565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 81113,
											"end": 81426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 81113,
											"end": 81426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 81113,
											"end": 81426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 78388,
											"end": 79060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 78388,
											"end": 79060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 69623,
											"end": 69763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 69623,
											"end": 69763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 69623,
											"end": 69763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 61908,
											"end": 62123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 61908,
											"end": 62123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67896,
											"end": 67909,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 67928,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 67921,
											"end": 67933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 67921,
											"end": 67933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67921,
											"end": 67933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67851,
											"end": 67940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70143,
											"end": 70147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70159,
											"end": 70172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70175,
											"end": 70187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 70175,
											"end": 70185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 70175,
											"end": 70187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70175,
											"end": 70187,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 70175,
											"end": 70187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70159,
											"end": 70187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70159,
											"end": 70187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70197,
											"end": 70228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 70206,
											"end": 70211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70213,
											"end": 70220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70222,
											"end": 70227,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70197,
											"end": 70205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 70197,
											"end": 70228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70197,
											"end": 70228,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 70197,
											"end": 70228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70245,
											"end": 70249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70238,
											"end": 70249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70238,
											"end": 70249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70238,
											"end": 70249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70070,
											"end": 70256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68973,
											"end": 68980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68999,
											"end": 69011,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68999,
											"end": 69011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68992,
											"end": 69011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68992,
											"end": 69011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68921,
											"end": 69018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70903,
											"end": 70907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70919,
											"end": 70934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70937,
											"end": 70949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 70937,
											"end": 70947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 70937,
											"end": 70949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70937,
											"end": 70949,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 70937,
											"end": 70949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70919,
											"end": 70949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70919,
											"end": 70949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70959,
											"end": 70996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 70975,
											"end": 70979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70981,
											"end": 70988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70990,
											"end": 70995,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70959,
											"end": 70974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 70959,
											"end": 70996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70959,
											"end": 70996,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 70959,
											"end": 70996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71006,
											"end": 71032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 71016,
											"end": 71020,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71022,
											"end": 71024,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71026,
											"end": 71031,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71006,
											"end": 71015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 71006,
											"end": 71032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71006,
											"end": 71032,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 71006,
											"end": 71032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71049,
											"end": 71053,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71042,
											"end": 71053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71042,
											"end": 71053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71042,
											"end": 71053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70816,
											"end": 71060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68828,
											"end": 68833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68852,
											"end": 68854,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 68845,
											"end": 68854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68845,
											"end": 68854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68779,
											"end": 68861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79423,
											"end": 79430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79449,
											"end": 79469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 79449,
											"end": 79467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 79449,
											"end": 79469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79449,
											"end": 79469,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 79449,
											"end": 79469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79442,
											"end": 79469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79442,
											"end": 79469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79364,
											"end": 79476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 60896,
											"end": 60907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 60896,
											"end": 60909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81053,
											"end": 81100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 81059,
											"end": 81061,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81087,
											"end": 81097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 81087,
											"end": 81095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 81087,
											"end": 81097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81087,
											"end": 81097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 81087,
											"end": 81097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81079,
											"end": 81098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 81079,
											"end": 81098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 81073,
											"end": 81075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 81073,
											"end": 81098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 81073,
											"end": 81098,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81073,
											"end": 81098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81073,
											"end": 81098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 81073,
											"end": 81098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81073,
											"end": 81098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 81073,
											"end": 81098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81063,
											"end": 81069,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 81063,
											"end": 81099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 81063,
											"end": 81099,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81063,
											"end": 81099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81063,
											"end": 81099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 81063,
											"end": 81099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81063,
											"end": 81099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 81063,
											"end": 81099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81053,
											"end": 81058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 81053,
											"end": 81100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81053,
											"end": 81100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 81053,
											"end": 81100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80984,
											"end": 81107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80109,
											"end": 80135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 80115,
											"end": 80127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 80115,
											"end": 80125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 80115,
											"end": 80127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80115,
											"end": 80127,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 80115,
											"end": 80127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80129,
											"end": 80134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80109,
											"end": 80114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 80109,
											"end": 80135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80109,
											"end": 80135,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 80109,
											"end": 80135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80055,
											"end": 80142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69141,
											"end": 69148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69167,
											"end": 69176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69177,
											"end": 69184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69167,
											"end": 69185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69160,
											"end": 69185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69160,
											"end": 69185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69076,
											"end": 69192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 61658,
											"end": 61759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 60896,
											"end": 60907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 60896,
											"end": 60909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61722,
											"end": 61752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 61749,
											"end": 61750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61722,
											"end": 61740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 61722,
											"end": 61752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61722,
											"end": 61752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 61722,
											"end": 61752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61658,
											"end": 61759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80533,
											"end": 80578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 80549,
											"end": 80556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80558,
											"end": 80570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 80558,
											"end": 80568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 80558,
											"end": 80570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80558,
											"end": 80570,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 80558,
											"end": 80570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80572,
											"end": 80577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 80533,
											"end": 80548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 80533,
											"end": 80578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80533,
											"end": 80578,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 80533,
											"end": 80578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80588,
											"end": 80609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 80594,
											"end": 80601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80603,
											"end": 80608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80588,
											"end": 80593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 80588,
											"end": 80609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80588,
											"end": 80609,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 80588,
											"end": 80609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80458,
											"end": 80616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79205,
											"end": 79212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79231,
											"end": 79250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 79244,
											"end": 79249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79231,
											"end": 79243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 79231,
											"end": 79250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79231,
											"end": 79250,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 79231,
											"end": 79250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79224,
											"end": 79250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79224,
											"end": 79250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79114,
											"end": 79257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38857,
											"end": 38870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38884,
											"end": 38902,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38916,
											"end": 38937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38951,
											"end": 38966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38980,
											"end": 39005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39019,
											"end": 39031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39045,
											"end": 39072,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39148,
											"end": 39161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 39148,
											"end": 39159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 39148,
											"end": 39161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39148,
											"end": 39161,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 39148,
											"end": 39161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39175,
											"end": 39191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 39175,
											"end": 39189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 39175,
											"end": 39191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39175,
											"end": 39191,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 39175,
											"end": 39191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39218,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 39240,
											"end": 39244,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39267,
											"end": 39268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39259,
											"end": 39269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39259,
											"end": 39269,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 39297,
											"end": 39298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 39283,
											"end": 39299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39283,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "PUSH",
											"source": 0,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 38759,
											"end": 39316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61049,
											"end": 61056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61075,
											"end": 61081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61068,
											"end": 61081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61068,
											"end": 61081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68113,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 68132,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 68125,
											"end": 68139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 68125,
											"end": 68139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68125,
											"end": 68139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69456,
											"end": 69460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69472,
											"end": 69485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 69500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 69488,
											"end": 69498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 69488,
											"end": 69500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 69500,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 69488,
											"end": 69500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69472,
											"end": 69500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69472,
											"end": 69500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69510,
											"end": 69537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 69520,
											"end": 69525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69527,
											"end": 69529,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69531,
											"end": 69536,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69510,
											"end": 69519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 69510,
											"end": 69537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69510,
											"end": 69537,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 69510,
											"end": 69537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69554,
											"end": 69558,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69547,
											"end": 69558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69547,
											"end": 69558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69547,
											"end": 69558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69387,
											"end": 69565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81240,
											"end": 81244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81255,
											"end": 81331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 81271,
											"end": 81286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81288,
											"end": 81292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 81318,
											"end": 81328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 81318,
											"end": 81326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 81318,
											"end": 81328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81318,
											"end": 81328,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 81318,
											"end": 81328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81310,
											"end": 81329,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 81310,
											"end": 81329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 81304,
											"end": 81306,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 81304,
											"end": 81329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 81304,
											"end": 81329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81304,
											"end": 81329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81304,
											"end": 81329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 81304,
											"end": 81329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81304,
											"end": 81329,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 81304,
											"end": 81329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81294,
											"end": 81300,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 81294,
											"end": 81330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 81294,
											"end": 81330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81294,
											"end": 81330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81294,
											"end": 81330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 81294,
											"end": 81330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81294,
											"end": 81330,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 81294,
											"end": 81330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81255,
											"end": 81270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 81255,
											"end": 81331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81255,
											"end": 81331,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 81255,
											"end": 81331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81341,
											"end": 81398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 81351,
											"end": 81355,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 81357,
											"end": 81359,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 81385,
											"end": 81395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 81385,
											"end": 81393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 81385,
											"end": 81395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81385,
											"end": 81395,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 81385,
											"end": 81395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81377,
											"end": 81396,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 81377,
											"end": 81396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 81371,
											"end": 81373,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 81371,
											"end": 81396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 81371,
											"end": 81396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81371,
											"end": 81396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81371,
											"end": 81396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 81371,
											"end": 81396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81371,
											"end": 81396,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 81371,
											"end": 81396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81361,
											"end": 81367,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 81361,
											"end": 81397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 81361,
											"end": 81397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81361,
											"end": 81397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81361,
											"end": 81397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 81361,
											"end": 81397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81361,
											"end": 81397,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 81361,
											"end": 81397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81341,
											"end": 81350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 81341,
											"end": 81398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81341,
											"end": 81398,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 81341,
											"end": 81398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81415,
											"end": 81419,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 81408,
											"end": 81419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81408,
											"end": 81419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81113,
											"end": 81426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78609,
											"end": 78617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78591,
											"end": 78606,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 78591,
											"end": 78617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 78587,
											"end": 78684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78587,
											"end": 78684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 78587,
											"end": 78684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78664,
											"end": 78672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "PUSH",
											"source": 0,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 78640,
											"end": 78673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78673,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78587,
											"end": 78684,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 78587,
											"end": 78684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78694,
											"end": 78712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77730,
											"end": 77825,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 78753,
											"end": 78758,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78760,
											"end": 78767,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78769,
											"end": 78774,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78776,
											"end": 78792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 78786,
											"end": 78791,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 78776,
											"end": 78785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 78776,
											"end": 78792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78776,
											"end": 78792,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 78776,
											"end": 78792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78794,
											"end": 78802,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 78725,
											"end": 78803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78725,
											"end": 78803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78715,
											"end": 78804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78715,
											"end": 78804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78715,
											"end": 78804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78715,
											"end": 78804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78715,
											"end": 78804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78715,
											"end": 78804,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78694,
											"end": 78804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78694,
											"end": 78804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78815,
											"end": 78827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78830,
											"end": 78858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 78847,
											"end": 78857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78830,
											"end": 78846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 78830,
											"end": 78858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78830,
											"end": 78858,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 78830,
											"end": 78858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78815,
											"end": 78858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78815,
											"end": 78858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78869,
											"end": 78883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78886,
											"end": 78914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 78900,
											"end": 78904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78906,
											"end": 78907,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78909,
											"end": 78910,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78912,
											"end": 78913,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78886,
											"end": 78899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 78886,
											"end": 78914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78886,
											"end": 78914,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 78886,
											"end": 78914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78869,
											"end": 78914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78869,
											"end": 78914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78938,
											"end": 78943,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78928,
											"end": 78943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78928,
											"end": 78943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78928,
											"end": 78934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78928,
											"end": 78943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78928,
											"end": 78943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78928,
											"end": 78943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78924,
											"end": 79012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 78924,
											"end": 79012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78987,
											"end": 78993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78995,
											"end": 79000,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "PUSH",
											"source": 0,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 78966,
											"end": 79001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 79001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78924,
											"end": 79012,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 78924,
											"end": 79012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79022,
											"end": 79053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 79031,
											"end": 79036,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79038,
											"end": 79045,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79047,
											"end": 79052,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79022,
											"end": 79030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 79022,
											"end": 79053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79022,
											"end": 79053,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 79022,
											"end": 79053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78577,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78577,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78577,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78388,
											"end": 79060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69703,
											"end": 69710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69729,
											"end": 69740,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69741,
											"end": 69746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69729,
											"end": 69747,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69748,
											"end": 69755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69722,
											"end": 69756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69722,
											"end": 69756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69623,
											"end": 69763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 60896,
											"end": 60907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 60896,
											"end": 60909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 60896,
											"end": 60909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62012,
											"end": 62013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61992,
											"end": 62014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61992,
											"end": 62014,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61992,
											"end": 62014,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61988,
											"end": 62079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 61988,
											"end": 62079,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62065,
											"end": 62066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 62037,
											"end": 62068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62037,
											"end": 62068,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61988,
											"end": 62079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 61988,
											"end": 62079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62088,
											"end": 62116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 62107,
											"end": 62115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62088,
											"end": 62106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 62088,
											"end": 62116,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62088,
											"end": 62116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 62088,
											"end": 62116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61908,
											"end": 62123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59177,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59081,
											"end": 59177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59134,
											"end": 59141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59160,
											"end": 59170,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59153,
											"end": 59170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59153,
											"end": 59170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74766,
											"end": 74894,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 74766,
											"end": 74894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74850,
											"end": 74887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 74859,
											"end": 74864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74866,
											"end": 74873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74875,
											"end": 74880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74882,
											"end": 74886,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74850,
											"end": 74858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 74850,
											"end": 74887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74850,
											"end": 74887,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 74850,
											"end": 74887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74766,
											"end": 74894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74766,
											"end": 74894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74766,
											"end": 74894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74766,
											"end": 74894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76440,
											"end": 76917,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 76440,
											"end": 76917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76539,
											"end": 76563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76566,
											"end": 76591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 76576,
											"end": 76581,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76583,
											"end": 76590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76566,
											"end": 76575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 76566,
											"end": 76591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76566,
											"end": 76591,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 76566,
											"end": 76591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76539,
											"end": 76591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76539,
											"end": 76591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76625,
											"end": 76642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76605,
											"end": 76621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76605,
											"end": 76642,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76601,
											"end": 76911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76601,
											"end": 76911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76681,
											"end": 76686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76662,
											"end": 76678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76662,
											"end": 76686,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76658,
											"end": 76788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76658,
											"end": 76788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76658,
											"end": 76788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76740,
											"end": 76747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76749,
											"end": 76765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76767,
											"end": 76772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 76713,
											"end": 76773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76713,
											"end": 76773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76658,
											"end": 76788,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76658,
											"end": 76788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76829,
											"end": 76886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 76838,
											"end": 76843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76845,
											"end": 76852,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76873,
											"end": 76878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76854,
											"end": 76870,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76854,
											"end": 76878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76880,
											"end": 76885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76829,
											"end": 76837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 76829,
											"end": 76886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76829,
											"end": 76886,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 76829,
											"end": 76886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76601,
											"end": 76911,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76601,
											"end": 76911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76529,
											"end": 76917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76440,
											"end": 76917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76440,
											"end": 76917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76440,
											"end": 76917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76440,
											"end": 76917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71433,
											"end": 71733,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 71433,
											"end": 71733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71532,
											"end": 71533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71516,
											"end": 71534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71516,
											"end": 71534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71516,
											"end": 71520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71516,
											"end": 71534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71516,
											"end": 71534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71516,
											"end": 71534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71512,
											"end": 71598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 71512,
											"end": 71598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71584,
											"end": 71585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 71557,
											"end": 71587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71557,
											"end": 71587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71512,
											"end": 71598,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 71512,
											"end": 71598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71625,
											"end": 71626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71611,
											"end": 71627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71611,
											"end": 71627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71611,
											"end": 71613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71611,
											"end": 71627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71611,
											"end": 71627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71611,
											"end": 71627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71607,
											"end": 71693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 71607,
											"end": 71693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71679,
											"end": 71680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 71650,
											"end": 71682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71650,
											"end": 71682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71607,
											"end": 71693,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 71607,
											"end": 71693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71702,
											"end": 71726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 71710,
											"end": 71714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71716,
											"end": 71718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71720,
											"end": 71725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71702,
											"end": 71709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 71702,
											"end": 71726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71702,
											"end": 71726,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 71702,
											"end": 71726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71433,
											"end": 71733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71433,
											"end": 71733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71433,
											"end": 71733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71433,
											"end": 71733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37722,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 37460,
											"end": 37722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37513,
											"end": 37520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37553,
											"end": 37564,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1909"
										},
										{
											"begin": 37536,
											"end": 37564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37536,
											"end": 37564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37544,
											"end": 37548,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37536,
											"end": 37564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37536,
											"end": 37564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37536,
											"end": 37564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37536,
											"end": 37599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37536,
											"end": 37599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37536,
											"end": 37599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 37536,
											"end": 37599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37536,
											"end": 37599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37585,
											"end": 37599,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1907"
										},
										{
											"begin": 37568,
											"end": 37581,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 37568,
											"end": 37599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37536,
											"end": 37599,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 37536,
											"end": 37599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37532,
											"end": 37716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37532,
											"end": 37716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 37532,
											"end": 37716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37622,
											"end": 37644,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1905"
										},
										{
											"begin": 37615,
											"end": 37644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 37615,
											"end": 37644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37532,
											"end": 37716,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 37532,
											"end": 37716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37682,
											"end": 37705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 37682,
											"end": 37703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 37682,
											"end": 37705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37682,
											"end": 37705,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 37682,
											"end": 37705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37675,
											"end": 37705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37675,
											"end": 37705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37722,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 37460,
											"end": 37722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61161,
											"end": 61323,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 61161,
											"end": 61323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 61231,
											"end": 61241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61231,
											"end": 61243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61243,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 61231,
											"end": 61243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61220,
											"end": 61243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 61220,
											"end": 61225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 61220,
											"end": 61227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61227,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 61220,
											"end": 61227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61220,
											"end": 61243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61220,
											"end": 61243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61216,
											"end": 61317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 61216,
											"end": 61317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61293,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 61293,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61293,
											"end": 61305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61293,
											"end": 61305,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 61293,
											"end": 61305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 61266,
											"end": 61306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61266,
											"end": 61306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61216,
											"end": 61317,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 61216,
											"end": 61317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61161,
											"end": 61323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73498,
											"end": 73706,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 73498,
											"end": 73706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73587,
											"end": 73588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73568,
											"end": 73589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73568,
											"end": 73589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73568,
											"end": 73575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73568,
											"end": 73589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73568,
											"end": 73589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73568,
											"end": 73589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73564,
											"end": 73655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 73564,
											"end": 73655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73641,
											"end": 73642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 73612,
											"end": 73644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73612,
											"end": 73644,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 73564,
											"end": 73655,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 73564,
											"end": 73655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73664,
											"end": 73699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 73680,
											"end": 73681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73684,
											"end": 73691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73693,
											"end": 73698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73664,
											"end": 73671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 73664,
											"end": 73699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73664,
											"end": 73699,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 73664,
											"end": 73699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73498,
											"end": 73706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73498,
											"end": 73706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73498,
											"end": 73706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74024,
											"end": 74230,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 74024,
											"end": 74230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74113,
											"end": 74114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74094,
											"end": 74115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74094,
											"end": 74115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74094,
											"end": 74101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74094,
											"end": 74115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74094,
											"end": 74115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74094,
											"end": 74115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74090,
											"end": 74179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 74090,
											"end": 74179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74165,
											"end": 74166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 74138,
											"end": 74168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74138,
											"end": 74168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74090,
											"end": 74179,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 74090,
											"end": 74179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74188,
											"end": 74223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 74196,
											"end": 74203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74213,
											"end": 74214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74217,
											"end": 74222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74188,
											"end": 74195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 74188,
											"end": 74223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74188,
											"end": 74223,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 74188,
											"end": 74223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74024,
											"end": 74230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74024,
											"end": 74230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74024,
											"end": 74230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62277,
											"end": 62464,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 62277,
											"end": 62464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62350,
											"end": 62366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62369,
											"end": 62375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62350,
											"end": 62375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62350,
											"end": 62375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62394,
											"end": 62402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62391,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62385,
											"end": 62391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62385,
											"end": 62402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62448,
											"end": 62456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62438,
											"end": 62446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62417,
											"end": 62457,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 62340,
											"end": 62464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62277,
											"end": 62464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62277,
											"end": 62464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 666,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 559,
											"end": 666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 645,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 645,
											"end": 659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 645,
											"end": 659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 645,
											"end": 659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 559,
											"end": 666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39636,
											"end": 39762,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 39636,
											"end": 39762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39695,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39714,
											"end": 39755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 39741,
											"end": 39754,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39714,
											"end": 39719,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1916"
										},
										{
											"begin": 39714,
											"end": 39740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 39714,
											"end": 39740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39714,
											"end": 39755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39714,
											"end": 39755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39714,
											"end": 39755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39714,
											"end": 39755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39714,
											"end": 39755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39714,
											"end": 39755,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 39714,
											"end": 39755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39636,
											"end": 39762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39636,
											"end": 39762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40088,
											"end": 40223,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 40088,
											"end": 40223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40137,
											"end": 40150,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40169,
											"end": 40216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 40199,
											"end": 40215,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 40169,
											"end": 40177,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1919"
										},
										{
											"begin": 40169,
											"end": 40198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 40169,
											"end": 40198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40169,
											"end": 40216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40169,
											"end": 40216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40169,
											"end": 40216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40169,
											"end": 40216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40169,
											"end": 40216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40169,
											"end": 40216,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 40169,
											"end": 40216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40162,
											"end": 40216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40162,
											"end": 40216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40088,
											"end": 40223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40088,
											"end": 40223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 1175,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 780,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 840,
											"end": 847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1158,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 1175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 1175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38532,
											"end": 38708,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 38532,
											"end": 38708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38609,
											"end": 38616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38635,
											"end": 38701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 38668,
											"end": 38688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 38668,
											"end": 38686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38668,
											"end": 38688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38668,
											"end": 38688,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 38668,
											"end": 38688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38690,
											"end": 38700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38635,
											"end": 38667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 38635,
											"end": 38701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38635,
											"end": 38701,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 38635,
											"end": 38701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38628,
											"end": 38701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38532,
											"end": 38708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38532,
											"end": 38708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38532,
											"end": 38708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38532,
											"end": 38708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47147,
											"end": 47154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47167,
											"end": 47184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47186,
											"end": 47204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47206,
											"end": 47222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 47237,
											"end": 47241,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47243,
											"end": 47244,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47247,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47249,
											"end": 47250,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 47226,
											"end": 47251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47251,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 47226,
											"end": 47251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47166,
											"end": 47251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47166,
											"end": 47251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47166,
											"end": 47251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47166,
											"end": 47251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47166,
											"end": 47251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47166,
											"end": 47251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47261,
											"end": 47289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 47273,
											"end": 47278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47261,
											"end": 47272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 47261,
											"end": 47289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47261,
											"end": 47289,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 47261,
											"end": 47289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47306,
											"end": 47315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 47315,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 47315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 47315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 47315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47299,
											"end": 47315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 76158,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 75726,
											"end": 76158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75855,
											"end": 75856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75838,
											"end": 75857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75838,
											"end": 75857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75838,
											"end": 75857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75834,
											"end": 75923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 75834,
											"end": 75923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75909,
											"end": 75910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 75880,
											"end": 75912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75880,
											"end": 75912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75834,
											"end": 75923,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 75834,
											"end": 75923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75955,
											"end": 75956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75936,
											"end": 75957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75936,
											"end": 75957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75936,
											"end": 75943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75936,
											"end": 75957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75936,
											"end": 75957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75936,
											"end": 75957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75932,
											"end": 76022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 75932,
											"end": 76022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76008,
											"end": 76009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 75980,
											"end": 76011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75980,
											"end": 76011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75932,
											"end": 76022,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 75932,
											"end": 76022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76061,
											"end": 76066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76042,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76043,
											"end": 76048,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76031,
											"end": 76049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76050,
											"end": 76057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76031,
											"end": 76058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76066,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76031,
											"end": 76066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76080,
											"end": 76089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76076,
											"end": 76152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76076,
											"end": 76152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 76076,
											"end": 76152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76126,
											"end": 76133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76119,
											"end": 76124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 76135,
											"end": 76140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 76110,
											"end": 76141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76141,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 76076,
											"end": 76152,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 76076,
											"end": 76152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 76158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 76158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 76158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 76158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 76158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72048,
											"end": 73155,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 72048,
											"end": 73155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72153,
											"end": 72154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72137,
											"end": 72155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72137,
											"end": 72155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72137,
											"end": 72141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72137,
											"end": 72155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72137,
											"end": 72155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72137,
											"end": 72155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72289,
											"end": 72294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72285,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72273,
											"end": 72285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 72273,
											"end": 72294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72273,
											"end": 72294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72325,
											"end": 72344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72347,
											"end": 72356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72357,
											"end": 72361,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72347,
											"end": 72362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72325,
											"end": 72362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72325,
											"end": 72362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72394,
											"end": 72399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72380,
											"end": 72391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72380,
											"end": 72399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72376,
											"end": 72491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72376,
											"end": 72491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 72376,
											"end": 72491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72451,
											"end": 72455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72457,
											"end": 72468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72470,
											"end": 72475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 72426,
											"end": 72476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72426,
											"end": 72476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72376,
											"end": 72491,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 72376,
											"end": 72491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72643,
											"end": 72648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72629,
											"end": 72640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72629,
											"end": 72648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72621,
											"end": 72625,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72611,
											"end": 72626,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 72648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72311,
											"end": 72673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 72133,
											"end": 72673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72701,
											"end": 72702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72687,
											"end": 72703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72687,
											"end": 72703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72687,
											"end": 72689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72687,
											"end": 72703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72687,
											"end": 72703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72687,
											"end": 72703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72866,
											"end": 72871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72862,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72850,
											"end": 72862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72850,
											"end": 72871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73078,
											"end": 73083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73071,
											"end": 73073,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 73061,
											"end": 73083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 72683,
											"end": 73108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73138,
											"end": 73140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73132,
											"end": 73136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 73142,
											"end": 73147,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 73123,
											"end": 73148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73123,
											"end": 73148,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 72048,
											"end": 73155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72048,
											"end": 73155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72048,
											"end": 73155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72048,
											"end": 73155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37728,
											"end": 37907,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 37728,
											"end": 37907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37783,
											"end": 37790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35694,
											"end": 35789,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 37841,
											"end": 37852,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1911"
										},
										{
											"begin": 37854,
											"end": 37868,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1913"
										},
										{
											"begin": 37870,
											"end": 37883,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 37893,
											"end": 37897,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 37819,
											"end": 37899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37819,
											"end": 37899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37809,
											"end": 37900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37809,
											"end": 37900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37809,
											"end": 37900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37809,
											"end": 37900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37809,
											"end": 37900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37809,
											"end": 37900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37802,
											"end": 37900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37802,
											"end": 37900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37728,
											"end": 37907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37728,
											"end": 37907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9694,
											"end": 9707,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7605,
											"end": 7671,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9752,
											"end": 9769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9769,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9769,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 9719,
											"end": 9861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 9801,
											"end": 9806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 9792,
											"end": 9807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9807,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 9792,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 9785,
											"end": 9807,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9861,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 9719,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9845,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9838,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9838,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9600,
											"end": 9867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33351,
											"end": 33752,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 33351,
											"end": 33752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33444,
											"end": 33458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33553,
											"end": 33557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33547,
											"end": 33558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33583,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33578,
											"end": 33581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33571,
											"end": 33594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33630,
											"end": 33645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33623,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33618,
											"end": 33621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33614,
											"end": 33628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33682,
											"end": 33692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33675,
											"end": 33679,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33670,
											"end": 33673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33666,
											"end": 33680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33731,
											"end": 33735,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33726,
											"end": 33729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33716,
											"end": 33736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33706,
											"end": 33736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33706,
											"end": 33736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33351,
											"end": 33752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33351,
											"end": 33752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33351,
											"end": 33752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33351,
											"end": 33752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33351,
											"end": 33752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45525,
											"end": 45532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45534,
											"end": 45546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45548,
											"end": 45555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46458,
											"end": 46524,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 46453,
											"end": 46454,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46445,
											"end": 46455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46445,
											"end": 46455,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 46445,
											"end": 46524,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46441,
											"end": 46605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46441,
											"end": 46605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 46441,
											"end": 46605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46556,
											"end": 46557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46560,
											"end": 46590,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46592,
											"end": 46593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 46540,
											"end": 46594,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46441,
											"end": 46605,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 46441,
											"end": 46605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46699,
											"end": 46713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46726,
											"end": 46730,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46732,
											"end": 46733,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46735,
											"end": 46736,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46738,
											"end": 46739,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 46716,
											"end": 46740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46716,
											"end": 46740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46699,
											"end": 46740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46699,
											"end": 46740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46772,
											"end": 46773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46754,
											"end": 46774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46754,
											"end": 46774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46754,
											"end": 46760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46754,
											"end": 46774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46754,
											"end": 46774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46754,
											"end": 46774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46750,
											"end": 46863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 46750,
											"end": 46863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46806,
											"end": 46807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46810,
											"end": 46839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46849,
											"end": 46850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46841,
											"end": 46851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46841,
											"end": 46851,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 46790,
											"end": 46852,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46750,
											"end": 46863,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 46750,
											"end": 46863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46881,
											"end": 46887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46889,
											"end": 46909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46919,
											"end": 46920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46911,
											"end": 46921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46911,
											"end": 46921,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 46873,
											"end": 46922,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46873,
											"end": 46922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46873,
											"end": 46922,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46873,
											"end": 46922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46873,
											"end": 46922,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46873,
											"end": 46922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46873,
											"end": 46922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 46929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47455,
											"end": 47987,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 47455,
											"end": 47987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47550,
											"end": 47570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47541,
											"end": 47570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47541,
											"end": 47570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47537,
											"end": 47981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47586,
											"end": 47593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 47537,
											"end": 47981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47637,
											"end": 47675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47637,
											"end": 47675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47637,
											"end": 47675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47633,
											"end": 47981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 47633,
											"end": 47981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47698,
											"end": 47721,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47633,
											"end": 47981,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 47633,
											"end": 47981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47751,
											"end": 47786,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47742,
											"end": 47786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47742,
											"end": 47786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47738,
											"end": 47981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 47738,
											"end": 47981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47845,
											"end": 47853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47837,
											"end": 47854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47837,
											"end": 47854,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "PUSH",
											"source": 0,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 47809,
											"end": 47855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47738,
											"end": 47981,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 47738,
											"end": 47981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47915,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47876,
											"end": 47915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47876,
											"end": 47915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47876,
											"end": 47915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47872,
											"end": 47981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 47872,
											"end": 47981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47961,
											"end": 47969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "PUSH",
											"source": 0,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 47938,
											"end": 47970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47938,
											"end": 47970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47872,
											"end": 47981,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 47872,
											"end": 47981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47455,
											"end": 47987,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 47455,
											"end": 47987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47455,
											"end": 47987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47455,
											"end": 47987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47455,
											"end": 47987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8698,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 8293,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8377,
											"end": 8388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 8402,
											"end": 8406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 8391,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8515,
											"end": 8529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8657,
											"end": 8661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8681,
											"end": 8691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8681,
											"end": 8691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8681,
											"end": 8691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8681,
											"end": 8691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8770,
											"end": 9015,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 8770,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8903,
											"end": 8907,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8894,
											"end": 8898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8867,
											"end": 8900,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 8907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8930,
											"end": 8932,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8921,
											"end": 8927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8921,
											"end": 8932,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 8917,
											"end": 8986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "PUSH",
											"source": 0,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8986,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 8917,
											"end": 8986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9002,
											"end": 9008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8995,
											"end": 9008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8995,
											"end": 9008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8995,
											"end": 9008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8770,
											"end": 9015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8770,
											"end": 9015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8770,
											"end": 9015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8770,
											"end": 9015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5952,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5623,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5729,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5818,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 5699,
											"end": 5818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 5737,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 5737,
											"end": 5816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5816,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 5737,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5818,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 5699,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5857,
											"end": 5858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 5927,
											"end": 5934,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5882,
											"end": 5935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 5882,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 5945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5952,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 5958,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "PUSH",
											"source": 1,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6027,
											"end": 6032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 6107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 6107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 6107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 6107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6228,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6113,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6215,
											"end": 6220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6198,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6352,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6234,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6339,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6321,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6345,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6321,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6472,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 6358,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6662,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 6478,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6606,
											"end": 6609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6662,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6800,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 6668,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6783,
											"end": 6786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 6806,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6901,
											"end": 6906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 6883,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6907,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6883,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6871,
											"end": 6908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7099,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6920,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 6999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 7052,
											"end": 7055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7010,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7010,
											"end": 7056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7010,
											"end": 7056,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 7010,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7083,
											"end": 7086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7099,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7218,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 7105,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7986,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7254,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 7450,
											"end": 7455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7402,
											"end": 7456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7456,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 7402,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7472,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 7551,
											"end": 7557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7472,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7472,
											"end": 7558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7472,
											"end": 7558,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 7472,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 7632,
											"end": 7637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 7582,
											"end": 7638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7638,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 7582,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7668,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7696,
											"end": 7709,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 7864,
											"end": 7867,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 7805,
											"end": 7868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7868,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 7944,
											"end": 7950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 7891,
											"end": 7951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 7891,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7951,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7737,
											"end": 7961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7725,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7721,
											"end": 7722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7677,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 7980,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 7980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8368,
											"end": 8377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8356,
											"end": 8383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8356,
											"end": 8383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8441,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8393,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8462,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 8393,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8519,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8472,
											"end": 8520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8607,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 8537,
											"end": 8615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8615,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 8537,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8647,
											"end": 8649,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8636,
											"end": 8645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8625,
											"end": 8673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 8763,
											"end": 8767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8754,
											"end": 8760,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 8690,
											"end": 8768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8768,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 8690,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 8846,
											"end": 8848,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8835,
											"end": 8844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8778,
											"end": 8850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8850,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 8778,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 8928,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8917,
											"end": 8926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8904,
											"end": 8910,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8860,
											"end": 8933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8933,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 8860,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9000,
											"end": 9009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 9015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 8993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 8943,
											"end": 9016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9016,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 8943,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9064,
											"end": 9073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9051,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 9037,
											"end": 9046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 9092,
											"end": 9200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9200,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 9092,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 9207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9435,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 9213,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9306,
											"end": 9310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9344,
											"end": 9346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9333,
											"end": 9342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9357,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9401,
											"end": 9407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9357,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 9357,
											"end": 9428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9357,
											"end": 9428,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 9357,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9527,
											"end": 9533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9543,
											"end": 9549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9603,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9588,
											"end": 9597,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9586,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9571,
											"end": 9604,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9568,
											"end": 9688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9568,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 9568,
											"end": 9688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 9607,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9607,
											"end": 9686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9686,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 9607,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9568,
											"end": 9688,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 9568,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9727,
											"end": 9728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 9797,
											"end": 9804,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9777,
											"end": 9786,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9773,
											"end": 9795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 9752,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 9752,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9805,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9854,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9880,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 9925,
											"end": 9932,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 9880,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9933,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 9880,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9870,
											"end": 9933,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9870,
											"end": 9933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 10053,
											"end": 10060,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10033,
											"end": 10042,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 10008,
											"end": 10061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10061,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 10008,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9953,
											"end": 10071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10112,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10136,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 10181,
											"end": 10188,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10172,
											"end": 10178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10170,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 10136,
											"end": 10189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10189,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 10136,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10081,
											"end": 10199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 10206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10212,
											"end": 10330,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10212,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 10299,
											"end": 10304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 10283,
											"end": 10305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10305,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 10283,
											"end": 10305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 10263,
											"end": 10324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10310,
											"end": 10322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10324,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 10263,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10212,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10212,
											"end": 10330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10471,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10336,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10380,
											"end": 10385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10425,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10434,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 10459,
											"end": 10464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10434,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10434,
											"end": 10465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10434,
											"end": 10465,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 10434,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10599,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 10477,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 10568,
											"end": 10573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 10550,
											"end": 10574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10574,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 10550,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10575,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 10530,
											"end": 10593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10593,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 10530,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10744,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 10605,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10732,
											"end": 10737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 10705,
											"end": 10738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10738,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10705,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10869,
											"end": 10875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10885,
											"end": 10891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10901,
											"end": 10907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10961,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10946,
											"end": 10955,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10937,
											"end": 10944,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 10956,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10929,
											"end": 10962,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 11046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 10926,
											"end": 11046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10965,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 10965,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10965,
											"end": 11044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10965,
											"end": 11044,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 10965,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 11046,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 10926,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 11155,
											"end": 11162,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11131,
											"end": 11153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 11110,
											"end": 11163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 11283,
											"end": 11290,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11272,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11259,
											"end": 11281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 11238,
											"end": 11291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11183,
											"end": 11301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11342,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11366,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11402,
											"end": 11408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11400,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11387,
											"end": 11409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11366,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 11366,
											"end": 11419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11366,
											"end": 11419,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 11366,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11419,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11311,
											"end": 11429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11470,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11494,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 11539,
											"end": 11546,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11519,
											"end": 11528,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11494,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 11494,
											"end": 11547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11494,
											"end": 11547,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 11494,
											"end": 11547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11484,
											"end": 11547,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11484,
											"end": 11547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11439,
											"end": 11557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11596,
											"end": 11599,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11623,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11657,
											"end": 11663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11646,
											"end": 11655,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11642,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11623,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 11623,
											"end": 11674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11623,
											"end": 11674,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 11623,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11613,
											"end": 11674,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11613,
											"end": 11674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11567,
											"end": 11684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11723,
											"end": 11726,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 11750,
											"end": 11803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 11795,
											"end": 11802,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11771,
											"end": 11793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11750,
											"end": 11803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 11750,
											"end": 11803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11750,
											"end": 11803,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 11750,
											"end": 11803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11740,
											"end": 11803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11740,
											"end": 11803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11852,
											"end": 11855,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 11879,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 11924,
											"end": 11931,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 11915,
											"end": 11921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11904,
											"end": 11913,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 11879,
											"end": 11932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 11932,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 11879,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11869,
											"end": 11932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11869,
											"end": 11932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12429,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11955,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12023,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12080,
											"end": 12082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12068,
											"end": 12077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12059,
											"end": 12066,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12055,
											"end": 12078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12083,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 12048,
											"end": 12167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12086,
											"end": 12165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12167,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 12048,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12231,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 12276,
											"end": 12283,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12267,
											"end": 12273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12265,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12231,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 12231,
											"end": 12284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12231,
											"end": 12284,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 12231,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12333,
											"end": 12335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12359,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 12404,
											"end": 12411,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12395,
											"end": 12401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12384,
											"end": 12393,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12380,
											"end": 12402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12359,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 12359,
											"end": 12412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12359,
											"end": 12412,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 12359,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12412,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12429,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12429,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12435,
											"end": 12615,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 12435,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12560,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12480,
											"end": 12481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12580,
											"end": 12584,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 12577,
											"end": 12578,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12570,
											"end": 12585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12604,
											"end": 12608,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12601,
											"end": 12602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12609,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12621,
											"end": 12941,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 12621,
											"end": 12941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12665,
											"end": 12671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12702,
											"end": 12703,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12696,
											"end": 12700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12704,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12682,
											"end": 12704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12682,
											"end": 12704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12770,
											"end": 12788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12760,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 12760,
											"end": 12841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 12818,
											"end": 12824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12814,
											"end": 12831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12804,
											"end": 12831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12804,
											"end": 12831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12760,
											"end": 12841,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 12760,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 12886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12891,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12857,
											"end": 12875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12854,
											"end": 12892,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 12851,
											"end": 12935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 12907,
											"end": 12925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 12935,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 12851,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12672,
											"end": 12941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12621,
											"end": 12941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12621,
											"end": 12941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12621,
											"end": 12941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12621,
											"end": 12941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12947,
											"end": 13127,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 12947,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12992,
											"end": 12993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12985,
											"end": 13073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13089,
											"end": 13090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13082,
											"end": 13097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13120,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13113,
											"end": 13114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13133,
											"end": 13235,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 13133,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13175,
											"end": 13183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13222,
											"end": 13227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13220,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13215,
											"end": 13228,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 13194,
											"end": 13228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13194,
											"end": 13228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13133,
											"end": 13235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13133,
											"end": 13235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13133,
											"end": 13235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13133,
											"end": 13235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13302,
											"end": 13307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13309,
											"end": 13313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13333,
											"end": 13339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 13339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 13339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13392,
											"end": 13393,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13382,
											"end": 13390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13379,
											"end": 13394,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13487,
											"end": 13491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13485,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13478,
											"end": 13492,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13472,
											"end": 13476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13469,
											"end": 13493,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 13466,
											"end": 13516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 13496,
											"end": 13514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13516,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 13466,
											"end": 13516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13536,
											"end": 13544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13548,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 13529,
											"end": 13980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13961,
											"end": 13965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13954,
											"end": 13959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13950,
											"end": 13966,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13941,
											"end": 13966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13941,
											"end": 13966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13980,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 13529,
											"end": 13980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14016,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14041,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 14064,
											"end": 14072,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14041,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 14041,
											"end": 14073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14041,
											"end": 14073,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 14041,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14073,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 13371,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 14089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14149,
											"end": 14154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14330,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14330,
											"end": 14370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14361,
											"end": 14362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14352,
											"end": 14362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14352,
											"end": 14362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 14363,
											"end": 14368,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14330,
											"end": 14370,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14330,
											"end": 14370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14389,
											"end": 14393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14379,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14379,
											"end": 14415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14397,
											"end": 14407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14408,
											"end": 14413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 14408,
											"end": 14413,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14379,
											"end": 14415,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14379,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14475,
											"end": 14479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14518,
											"end": 14545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14518,
											"end": 14545,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14518,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 14518,
											"end": 14545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14559,
											"end": 14560,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 14554,
											"end": 14745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14554,
											"end": 14745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14554,
											"end": 14745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 14554,
											"end": 14745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14468,
											"end": 14745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14468,
											"end": 14745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14518,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 14518,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14536,
											"end": 14537,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14527,
											"end": 14537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14527,
											"end": 14537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14554,
											"end": 14745,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 14554,
											"end": 14745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14599,
											"end": 14602,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 14589,
											"end": 14597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14603,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 14583,
											"end": 14626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 14606,
											"end": 14624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 14606,
											"end": 14624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14624,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 14606,
											"end": 14624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14626,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 14583,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14655,
											"end": 14663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14652,
											"end": 14653,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 14648,
											"end": 14664,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 14639,
											"end": 14664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14639,
											"end": 14664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14690,
											"end": 14693,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14683,
											"end": 14688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14694,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14677,
											"end": 14717,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14677,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 14677,
											"end": 14717,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 14697,
											"end": 14715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 14697,
											"end": 14715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14677,
											"end": 14717,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 14677,
											"end": 14717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14730,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14730,
											"end": 14735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 14730,
											"end": 14735,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14468,
											"end": 14745,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14468,
											"end": 14745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14468,
											"end": 14745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14854,
											"end": 14856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14857,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14838,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 14829,
											"end": 14833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14826,
											"end": 14839,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14822,
											"end": 14858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14806,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 14794,
											"end": 14802,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14807,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14786,
											"end": 14788,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 14780,
											"end": 14784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14777,
											"end": 14789,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14773,
											"end": 14808,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14757,
											"end": 14868,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14754,
											"end": 15000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14754,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 14754,
											"end": 15000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14910,
											"end": 14918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14904,
											"end": 14908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14900,
											"end": 14919,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 14891,
											"end": 14919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14891,
											"end": 14919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 14948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14938,
											"end": 14943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 14949,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14932,
											"end": 14972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14932,
											"end": 14972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 14932,
											"end": 14972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 14952,
											"end": 14970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 14952,
											"end": 14970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14932,
											"end": 14972,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 14932,
											"end": 14972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 14985,
											"end": 14990,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14754,
											"end": 15000,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 14754,
											"end": 15000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15025,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 15063,
											"end": 15066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15053,
											"end": 15061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15047,
											"end": 15051,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15044,
											"end": 15045,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15025,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 15025,
											"end": 15067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15025,
											"end": 15067,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 15025,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15010,
											"end": 15067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15010,
											"end": 15067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15010,
											"end": 15067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15010,
											"end": 15067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15099,
											"end": 15103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15097,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15090,
											"end": 15104,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15083,
											"end": 15088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15105,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15077,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15077,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 15077,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 15108,
											"end": 15126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15077,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 15077,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15137,
											"end": 15162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15137,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 15168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15459,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 15174,
											"end": 15459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15234,
											"end": 15239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15258,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 15276,
											"end": 15280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 15258,
											"end": 15281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15281,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 15258,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15250,
											"end": 15281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15250,
											"end": 15281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15302,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 15320,
											"end": 15328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15302,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 15302,
											"end": 15329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15302,
											"end": 15329,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 15302,
											"end": 15329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15290,
											"end": 15329,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15290,
											"end": 15329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15348,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 15385,
											"end": 15451,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15375,
											"end": 15383,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15369,
											"end": 15373,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15348,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 15348,
											"end": 15452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15348,
											"end": 15452,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 15348,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15459,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15465,
											"end": 15875,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 15465,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15505,
											"end": 15512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 15546,
											"end": 15547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15528,
											"end": 15548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 15528,
											"end": 15548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15528,
											"end": 15548,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 15528,
											"end": 15548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15523,
											"end": 15548,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15523,
											"end": 15548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15562,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 15580,
											"end": 15581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15562,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 15562,
											"end": 15582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15562,
											"end": 15582,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 15562,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15557,
											"end": 15582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15617,
											"end": 15618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15614,
											"end": 15615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15610,
											"end": 15619,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 15657,
											"end": 15668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 15639,
											"end": 15669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15669,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 15639,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15818,
											"end": 15819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15809,
											"end": 15816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15805,
											"end": 15820,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15802,
											"end": 15803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15799,
											"end": 15821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15772,
											"end": 15781,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15752,
											"end": 15835,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15729,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 15729,
											"end": 15868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 15848,
											"end": 15866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15729,
											"end": 15868,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 15729,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15465,
											"end": 15875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15465,
											"end": 15875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15465,
											"end": 15875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15465,
											"end": 15875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15465,
											"end": 15875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15881,
											"end": 16061,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 15881,
											"end": 16061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 16006,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15926,
											"end": 15927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15919,
											"end": 16007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16030,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 16023,
											"end": 16024,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16016,
											"end": 16031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16050,
											"end": 16054,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16047,
											"end": 16048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16040,
											"end": 16055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16300,
											"end": 16304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16338,
											"end": 16341,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 16327,
											"end": 16336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16323,
											"end": 16342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16315,
											"end": 16342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16315,
											"end": 16342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 16420,
											"end": 16421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16409,
											"end": 16418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16405,
											"end": 16422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16396,
											"end": 16402,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 16352,
											"end": 16423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16423,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 16352,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 16501,
											"end": 16503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16490,
											"end": 16499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16486,
											"end": 16504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16477,
											"end": 16483,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 16433,
											"end": 16505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16505,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 16433,
											"end": 16505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16515,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 16583,
											"end": 16585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16568,
											"end": 16586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16559,
											"end": 16565,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16515,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 16515,
											"end": 16587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16515,
											"end": 16587,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 16515,
											"end": 16587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 16665,
											"end": 16667,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16654,
											"end": 16663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 16647,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16597,
											"end": 16669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16669,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 16597,
											"end": 16669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16679,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 16747,
											"end": 16750,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16736,
											"end": 16745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16679,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16679,
											"end": 16752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16679,
											"end": 16752,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 16679,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16762,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 16830,
											"end": 16833,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16819,
											"end": 16828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16815,
											"end": 16834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16762,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16762,
											"end": 16835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16762,
											"end": 16835,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 16762,
											"end": 16835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17180,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 16848,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16969,
											"end": 16973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17007,
											"end": 17009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16996,
											"end": 17005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16984,
											"end": 17010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16984,
											"end": 17010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 17088,
											"end": 17089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17077,
											"end": 17086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17064,
											"end": 17070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 17020,
											"end": 17091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17091,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 17020,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 17169,
											"end": 17171,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17158,
											"end": 17167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17154,
											"end": 17172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17145,
											"end": 17151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 17101,
											"end": 17173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17173,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 17101,
											"end": 17173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17180,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17335,
											"end": 17339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17375,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17362,
											"end": 17371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17358,
											"end": 17376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17350,
											"end": 17376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17350,
											"end": 17376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17386,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 17454,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17443,
											"end": 17452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17439,
											"end": 17456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17436,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17386,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 17386,
											"end": 17457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17386,
											"end": 17457,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 17386,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 17535,
											"end": 17537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17524,
											"end": 17533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 17538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17517,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 17467,
											"end": 17539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17539,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 17467,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17549,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 17617,
											"end": 17619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17606,
											"end": 17615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17602,
											"end": 17620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17593,
											"end": 17599,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17549,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 17549,
											"end": 17621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17549,
											"end": 17621,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 17549,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17634,
											"end": 17825,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 17634,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17674,
											"end": 17677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 17711,
											"end": 17712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 17693,
											"end": 17713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17688,
											"end": 17713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17688,
											"end": 17713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 17727,
											"end": 17747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17722,
											"end": 17747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17722,
											"end": 17747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17770,
											"end": 17771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17767,
											"end": 17768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17763,
											"end": 17772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17756,
											"end": 17772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17756,
											"end": 17772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17791,
											"end": 17794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17788,
											"end": 17789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17785,
											"end": 17795,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17782,
											"end": 17818,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17782,
											"end": 17818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 17782,
											"end": 17818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17798,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 17798,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 17798,
											"end": 17816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17798,
											"end": 17816,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 17798,
											"end": 17816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17782,
											"end": 17818,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 17782,
											"end": 17818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17634,
											"end": 17825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17634,
											"end": 17825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17634,
											"end": 17825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17634,
											"end": 17825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17634,
											"end": 17825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18036,
											"end": 18040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18074,
											"end": 18077,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 18063,
											"end": 18072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18059,
											"end": 18078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18051,
											"end": 18078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18051,
											"end": 18078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18088,
											"end": 18159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 18156,
											"end": 18157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18145,
											"end": 18154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18141,
											"end": 18158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18132,
											"end": 18138,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18088,
											"end": 18159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 18088,
											"end": 18159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18088,
											"end": 18159,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 18088,
											"end": 18159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18169,
											"end": 18241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 18237,
											"end": 18239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18226,
											"end": 18235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18213,
											"end": 18219,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18169,
											"end": 18241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 18169,
											"end": 18241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18169,
											"end": 18241,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 18169,
											"end": 18241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18251,
											"end": 18323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 18319,
											"end": 18321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18308,
											"end": 18317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18304,
											"end": 18322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18295,
											"end": 18301,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18251,
											"end": 18323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 18251,
											"end": 18323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18251,
											"end": 18323,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 18251,
											"end": 18323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 18401,
											"end": 18403,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18390,
											"end": 18399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18386,
											"end": 18404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18383,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 18333,
											"end": 18405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18333,
											"end": 18405,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 18333,
											"end": 18405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 18483,
											"end": 18486,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18472,
											"end": 18481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18468,
											"end": 18487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 18415,
											"end": 18488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18488,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 18415,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 18495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18674,
											"end": 18678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18712,
											"end": 18715,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18701,
											"end": 18710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18697,
											"end": 18716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18726,
											"end": 18797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 18794,
											"end": 18795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18783,
											"end": 18792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18779,
											"end": 18796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18770,
											"end": 18776,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18726,
											"end": 18797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 18726,
											"end": 18797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18726,
											"end": 18797,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 18726,
											"end": 18797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18807,
											"end": 18875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 18871,
											"end": 18873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18860,
											"end": 18869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18856,
											"end": 18874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18847,
											"end": 18853,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18807,
											"end": 18875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 18807,
											"end": 18875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18807,
											"end": 18875,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 18807,
											"end": 18875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18885,
											"end": 18957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 18953,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18942,
											"end": 18951,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18938,
											"end": 18956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18929,
											"end": 18935,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18885,
											"end": 18957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 18885,
											"end": 18957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18885,
											"end": 18957,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 18885,
											"end": 18957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18967,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 19035,
											"end": 19037,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19024,
											"end": 19033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19011,
											"end": 19017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18967,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 18967,
											"end": 19039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18967,
											"end": 19039,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 18967,
											"end": 19039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 19046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19052,
											"end": 19232,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 19052,
											"end": 19232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19177,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19097,
											"end": 19098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19090,
											"end": 19178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19197,
											"end": 19201,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 19194,
											"end": 19195,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19187,
											"end": 19202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19221,
											"end": 19225,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19218,
											"end": 19219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19211,
											"end": 19226,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferParticipationToken(address,address,uint256,address)": "abd81ca2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"transferParticipationToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"ParticipationToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2917,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2923,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2925,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2929,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2664,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1921,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 13,
								"contract": "contracts/ParticipationToken_flattened.sol:ParticipationToken",
								"label": "_nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":7470:10523  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":7470:10523  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122021a08dfcf1798cc5ce89eb7ec566939cffa2a27f23406678d7aab7c1c3239bd364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122021a08dfcf1798cc5ce89eb7ec566939cffa2a27f23406678d7aab7c1c3239bd364736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 LOG0 DUP14 0xFC CALL PUSH26 0x8CC5CE89EB7EC566939CFFA2A27F23406678D7AAB7C1C3239BD3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "7470:3053:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122021a08dfcf1798cc5ce89eb7ec566939cffa2a27f23406678d7aab7c1c3239bd364736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 LOG0 DUP14 0xFC CALL PUSH26 0x8CC5CE89EB7EC566939CFFA2A27F23406678D7AAB7C1C3239BD3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "7470:3053:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7470,
									"end": 10523,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122021a08dfcf1798cc5ce89eb7ec566939cffa2a27f23406678d7aab7c1c3239bd364736f6c63430008180033",
									".code": [
										{
											"begin": 7470,
											"end": 10523,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 10523,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":10770:11817  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":10770:11817  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122050a0d2e116c2b7b0894c5aa3ba6112b6a0ae47be846afe03f721bec7b858b82364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122050a0d2e116c2b7b0894c5aa3ba6112b6a0ae47be846afe03f721bec7b858b82364736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP LOG0 0xD2 0xE1 AND 0xC2 0xB7 0xB0 DUP10 0x4C GAS LOG3 0xBA PUSH2 0x12B6 LOG0 0xAE SELFBALANCE 0xBE DUP5 PUSH11 0xFE03F721BEC7B858B82364 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "10770:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122050a0d2e116c2b7b0894c5aa3ba6112b6a0ae47be846afe03f721bec7b858b82364736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP LOG0 0xD2 0xE1 AND 0xC2 0xB7 0xB0 DUP10 0x4C GAS LOG3 0xBA PUSH2 0x12B6 LOG0 0xAE SELFBALANCE 0xBE DUP5 PUSH11 0xFE03F721BEC7B858B82364 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "10770:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10770,
									"end": 11817,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050a0d2e116c2b7b0894c5aa3ba6112b6a0ae47be846afe03f721bec7b858b82364736f6c63430008180033",
									".code": [
										{
											"begin": 10770,
											"end": 11817,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 11817,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":3549:6234  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":3549:6234  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220323526d31c7365754cf9d530fd724a9e5b4d436c5d892873147f2e9f05ffdb7c64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220323526d31c7365754cf9d530fd724a9e5b4d436c5d892873147f2e9f05ffdb7c64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN CALLDATALOAD 0x26 0xD3 SHR PUSH20 0x65754CF9D530FD724A9E5B4D436C5D892873147F 0x2E SWAP16 SDIV SELFDESTRUCT 0xDB PUSH29 0x64736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "3549:2685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220323526d31c7365754cf9d530fd724a9e5b4d436c5d892873147f2e9f05ffdb7c64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN CALLDATALOAD 0x26 0xD3 SHR PUSH20 0x65754CF9D530FD724A9E5B4D436C5D892873147F 0x2E SWAP16 SDIV SELFDESTRUCT 0xDB PUSH29 0x64736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "3549:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3549,
									"end": 6234,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220323526d31c7365754cf9d530fd724a9e5b4d436c5d892873147f2e9f05ffdb7c64736f6c63430008180033",
									".code": [
										{
											"begin": 3549,
											"end": 6234,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 6234,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ParticipationToken_flattened.sol\":27146:29993  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ParticipationToken_flattened.sol\":27146:29993  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202be7fb5825bbf0eb93b2637c2c53d3e451d0767cde402a330d9332ed492a72a164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202be7fb5825bbf0eb93b2637c2c53d3e451d0767cde402a330d9332ed492a72a164736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE7 0xFB PC 0x25 0xBB CREATE 0xEB SWAP4 0xB2 PUSH4 0x7C2C53D3 0xE4 MLOAD 0xD0 PUSH23 0x7CDE402A330D9332ED492A72A164736F6C634300081800 CALLER ",
							"sourceMap": "27146:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202be7fb5825bbf0eb93b2637c2c53d3e451d0767cde402a330d9332ed492a72a164736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE7 0xFB PC 0x25 0xBB CREATE 0xEB SWAP4 0xB2 PUSH4 0x7C2C53D3 0xE4 MLOAD 0xD0 PUSH23 0x7CDE402A330D9332ED492A72A164736F6C634300081800 CALLER ",
							"sourceMap": "27146:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27146,
									"end": 29993,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202be7fb5825bbf0eb93b2637c2c53d3e451d0767cde402a330d9332ed492a72a164736f6c63430008180033",
									".code": [
										{
											"begin": 27146,
											"end": 29993,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27146,
											"end": 29993,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ParticipationToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ParticipationToken_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ParticipationToken_flattened.sol\":{\"keccak256\":\"0x622edbbe7c9ffd721c3db0433917c837056a1800177edb6c7d2ff64e96315522\",\"urls\":[\"bzz-raw://7c3c0e03131b01cf0828e155c47017adeb3c57cf9ac538fa98f1c79653fdc7d5\",\"dweb:/ipfs/QmaGmgJKdxDCK9SjuMMwPyAiFz45eCJzc7Vb52dvU1m3LS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ParticipationToken_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ParticipationToken_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ParticipationToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/ParticipationToken_flattened.sol",
					"exportedSymbols": {
						"Context": [
							2658
						],
						"ECDSA": [
							2458
						],
						"EIP712": [
							2111
						],
						"ERC20": [
							3409
						],
						"ERC20Burnable": [
							3593
						],
						"ERC20Permit": [
							3552
						],
						"IERC1155Errors": [
							2629
						],
						"IERC20": [
							2880
						],
						"IERC20Errors": [
							2534
						],
						"IERC20Metadata": [
							2903
						],
						"IERC20Permit": [
							2493
						],
						"IERC5267": [
							91
						],
						"IERC721Errors": [
							2582
						],
						"Math": [
							1571
						],
						"MessageHashUtils": [
							1892
						],
						"Nonces": [
							67
						],
						"Ownable": [
							2803
						],
						"ParticipationToken": [
							3689
						],
						"ShortString": [
							203
						],
						"ShortStrings": [
							414
						],
						"SignedMath": [
							518
						],
						"StorageSlot": [
							200
						],
						"Strings": [
							1821
						]
					},
					"id": 3690,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "120:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "146:83:0",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "Nonces",
							"nameLocation": "248:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "261:90:0",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 9,
									"name": "InvalidAccountNonce",
									"nameLocation": "362:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "407:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "399:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:39:0"
									},
									"src": "356:65:0"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "471:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "427:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 12,
										"keyName": "account",
										"keyNameLocation": "443:7:0",
										"keyType": {
											"id": 10,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "435:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "427:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 11,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "454:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "628:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 21,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 23,
													"indexExpression": {
														"id": 22,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "653:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "645:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 24,
												"nodeType": "Return",
												"src": "638:21:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "485:69:0",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "568:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "583:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "575:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:15:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "619:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:9:0"
									},
									"scope": 67,
									"src": "559:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "849:326:0",
										"statements": [
											{
												"id": 39,
												"nodeType": "UncheckedBlock",
												"src": "1052:117:0",
												"statements": [
													{
														"expression": {
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1142:16:0",
															"subExpression": {
																"baseExpression": {
																	"id": 34,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1142:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 36,
																"indexExpression": {
																	"id": 35,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1142:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 33,
														"id": 38,
														"nodeType": "Return",
														"src": "1135:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "672:103:0",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "789:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "807:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "799:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "840:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:9:0"
									},
									"scope": 67,
									"src": "780:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1359:149:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1377:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 65,
														"src": "1369:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1369:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"id": 52,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 51,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1387:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1369:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 55,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1417:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 56,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1426:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 64,
												"nodeType": "IfStatement",
												"src": "1413:89:0",
												"trueBody": {
													"id": 63,
													"nodeType": "Block",
													"src": "1435:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 59,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "1476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 60,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "1483:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 58,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1456:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1456:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 62,
															"nodeType": "RevertStatement",
															"src": "1449:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1181:100:0",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1295:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1320:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1312:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1335:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1327:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:30:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1359:0:0"
									},
									"scope": 67,
									"src": "1286:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "230:1280:0",
							"usedErrors": [
								9
							],
							"usedEvents": []
						},
						{
							"id": 68,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1646:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IERC5267",
							"nameLocation": "1682:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1697:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 71,
									"name": "EIP712DomainChanged",
									"nameLocation": "1792:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:2:0"
									},
									"src": "1786:28:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1820:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "1974:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "2056:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2049:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 74,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "2049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2090:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2076:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2108:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "2151:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2143:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "2180:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2172:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2219:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2211:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "2254:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2237:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 86,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"nodeType": "ArrayTypeName",
													"src": "2237:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:239:0"
									},
									"scope": 91,
									"src": "1965:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "1672:605:0",
							"usedErrors": [],
							"usedEvents": [
								71
							]
						},
						{
							"id": 92,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2497:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 93,
								"nodeType": "StructuredDocumentation",
								"src": "2523:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 200,
							"linearizedBaseContracts": [
								200
							],
							"name": "StorageSlot",
							"nameLocation": "3557:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 96,
									"members": [
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3612:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "3604:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3604:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "3582:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3575:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 99,
									"members": [
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3664:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 99,
											"src": "3659:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 97,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3659:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "3637:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3630:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 102,
									"members": [
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3719:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 102,
											"src": "3711:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 100,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3711:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "3689:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3682:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 105,
									"members": [
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3774:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 105,
											"src": "3766:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3766:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "3744:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3737:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 108,
									"members": [
										{
											"constant": false,
											"id": 107,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3827:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 108,
											"src": "3820:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 106,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3820:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "3799:10:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3792:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3878:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "3872:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 109,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3872:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "3852:9:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3845:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "4072:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4134:38:0",
													"nodeType": "YulBlock",
													"src": "4134:38:0",
													"statements": [
														{
															"nativeSrc": "4148:14:0",
															"nodeType": "YulAssignment",
															"src": "4148:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4158:4:0",
																"nodeType": "YulIdentifier",
																"src": "4158:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4148:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": true,
														"src": "4148:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "4158:4:0",
														"valueSize": 1
													}
												],
												"id": 120,
												"nodeType": "InlineAssembly",
												"src": "4125:47:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3896:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "3997:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4012:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4011:14:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4069:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4049:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$96_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 116,
														"name": "AddressSlot",
														"nameLocations": [
															"4049:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 96,
														"src": "4049:11:0"
													},
													"referencedDeclaration": 96,
													"src": "4049:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$96_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:23:0"
									},
									"scope": 200,
									"src": "3988:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "4360:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4422:38:0",
													"nodeType": "YulBlock",
													"src": "4422:38:0",
													"statements": [
														{
															"nativeSrc": "4436:14:0",
															"nodeType": "YulAssignment",
															"src": "4436:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4446:4:0",
																"nodeType": "YulIdentifier",
																"src": "4446:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4436:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 129,
														"isOffset": false,
														"isSlot": true,
														"src": "4436:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "4446:4:0",
														"valueSize": 1
													}
												],
												"id": 131,
												"nodeType": "InlineAssembly",
												"src": "4413:47:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4184:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "4285:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4308:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4300:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4299:14:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4337:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$99_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 127,
														"name": "BooleanSlot",
														"nameLocations": [
															"4337:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "4337:11:0"
													},
													"referencedDeclaration": 99,
													"src": "4337:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$99_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:23:0"
									},
									"scope": 200,
									"src": "4276:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "4648:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4710:38:0",
													"nodeType": "YulBlock",
													"src": "4710:38:0",
													"statements": [
														{
															"nativeSrc": "4724:14:0",
															"nodeType": "YulAssignment",
															"src": "4724:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4734:4:0",
																"nodeType": "YulIdentifier",
																"src": "4734:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4724:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": true,
														"src": "4724:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "4734:4:0",
														"valueSize": 1
													}
												],
												"id": 142,
												"nodeType": "InlineAssembly",
												"src": "4701:47:0"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4472:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "4573:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4596:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4588:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:14:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4645:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4625:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$102_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 138,
														"name": "Bytes32Slot",
														"nameLocations": [
															"4625:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 102,
														"src": "4625:11:0"
													},
													"referencedDeclaration": 102,
													"src": "4625:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$102_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4624:23:0"
									},
									"scope": 200,
									"src": "4564:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "4936:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4998:38:0",
													"nodeType": "YulBlock",
													"src": "4998:38:0",
													"statements": [
														{
															"nativeSrc": "5012:14:0",
															"nodeType": "YulAssignment",
															"src": "5012:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5022:4:0",
																"nodeType": "YulIdentifier",
																"src": "5022:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5012:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 151,
														"isOffset": false,
														"isSlot": true,
														"src": "5012:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "5022:4:0",
														"valueSize": 1
													}
												],
												"id": 153,
												"nodeType": "InlineAssembly",
												"src": "4989:47:0"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "4760:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "4861:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4884:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4875:14:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4933:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4913:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$105_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 149,
														"name": "Uint256Slot",
														"nameLocations": [
															"4913:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "4913:11:0"
													},
													"referencedDeclaration": 105,
													"src": "4913:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$105_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4912:23:0"
									},
									"scope": 200,
									"src": "4852:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5221:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5283:38:0",
													"nodeType": "YulBlock",
													"src": "5283:38:0",
													"statements": [
														{
															"nativeSrc": "5297:14:0",
															"nodeType": "YulAssignment",
															"src": "5297:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5307:4:0",
																"nodeType": "YulIdentifier",
																"src": "5307:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5297:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5297:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 162,
														"isOffset": false,
														"isSlot": true,
														"src": "5297:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "5307:4:0",
														"valueSize": 1
													}
												],
												"id": 164,
												"nodeType": "InlineAssembly",
												"src": "5274:47:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5048:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "5148:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5162:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5161:14:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5218:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5199:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 160,
														"name": "StringSlot",
														"nameLocations": [
															"5199:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 108,
														"src": "5199:10:0"
													},
													"referencedDeclaration": 108,
													"src": "5199:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5198:22:0"
									},
									"scope": 200,
									"src": "5139:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5529:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5591:44:0",
													"nodeType": "YulBlock",
													"src": "5591:44:0",
													"statements": [
														{
															"nativeSrc": "5605:20:0",
															"nodeType": "YulAssignment",
															"src": "5605:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "5615:10:0",
																"nodeType": "YulIdentifier",
																"src": "5615:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5605:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 173,
														"isOffset": false,
														"isSlot": true,
														"src": "5605:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 169,
														"isOffset": false,
														"isSlot": true,
														"src": "5615:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 175,
												"nodeType": "InlineAssembly",
												"src": "5582:53:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5333:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "5448:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "5477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5462:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5461:22:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5526:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5507:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "StringSlot",
														"nameLocations": [
															"5507:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 108,
														"src": "5507:10:0"
													},
													"referencedDeclaration": 108,
													"src": "5507:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5506:22:0"
									},
									"scope": 200,
									"src": "5439:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "5817:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5879:38:0",
													"nodeType": "YulBlock",
													"src": "5879:38:0",
													"statements": [
														{
															"nativeSrc": "5893:14:0",
															"nodeType": "YulAssignment",
															"src": "5893:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5903:4:0",
																"nodeType": "YulIdentifier",
																"src": "5903:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5893:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 184,
														"isOffset": false,
														"isSlot": true,
														"src": "5893:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 180,
														"isOffset": false,
														"isSlot": false,
														"src": "5903:4:0",
														"valueSize": 1
													}
												],
												"id": 186,
												"nodeType": "InlineAssembly",
												"src": "5870:47:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5647:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "5746:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5767:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5759:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5758:14:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5814:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5796:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 182,
														"name": "BytesSlot",
														"nameLocations": [
															"5796:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "5796:9:0"
													},
													"referencedDeclaration": 111,
													"src": "5796:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5795:21:0"
									},
									"scope": 200,
									"src": "5737:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6120:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6182:44:0",
													"nodeType": "YulBlock",
													"src": "6182:44:0",
													"statements": [
														{
															"nativeSrc": "6196:20:0",
															"nodeType": "YulAssignment",
															"src": "6196:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "6206:10:0",
																"nodeType": "YulIdentifier",
																"src": "6206:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "6196:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6196:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": true,
														"src": "6196:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 191,
														"isOffset": false,
														"isSlot": true,
														"src": "6206:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 197,
												"nodeType": "InlineAssembly",
												"src": "6173:53:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "5929:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "6042:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "6069:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6055:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6055:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6054:21:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6117:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6099:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 193,
														"name": "BytesSlot",
														"nameLocations": [
															"6099:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "6099:9:0"
													},
													"referencedDeclaration": 111,
													"src": "6099:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6098:21:0"
									},
									"scope": 200,
									"src": "6033:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "3549:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6368:24:0"
						},
						{
							"canonicalName": "ShortString",
							"id": 203,
							"name": "ShortString",
							"nameLocation": "6568:11:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "6563:28:0",
							"underlyingType": {
								"id": 202,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "6583:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "6593:876:0",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 414,
							"linearizedBaseContracts": [
								414
							],
							"name": "ShortStrings",
							"nameLocation": "7478:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 207,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "7585:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 414,
									"src": "7560:111:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 205,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7560:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7605:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 211,
									"name": "StringTooLong",
									"nameLocation": "7684:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "7705:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "7698:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7698:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7697:12:0"
									},
									"src": "7678:32:0"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 213,
									"name": "InvalidShortString",
									"nameLocation": "7721:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7739:2:0"
									},
									"src": "7715:27:0"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "8001:208:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "8024:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "8011:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 222,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8011:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8037:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8031:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 224,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8031:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8031:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8011:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 229,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "8055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8060:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8055:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8069:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "8055:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "IfStatement",
												"src": "8051:72:0",
												"trueBody": {
													"id": 237,
													"nodeType": "Block",
													"src": "8073:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 234,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "8108:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 233,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8094:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8094:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 236,
															"nodeType": "RevertStatement",
															"src": "8087:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 247,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 223,
																						"src": "8180:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8172:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 245,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "8172:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8172:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8164:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 243,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8164:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8164:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 250,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "8189:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8194:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "8189:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8164:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8156:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 241,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8156:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8156:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 239,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "8139:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8151:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "8139:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8139:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 221,
												"id": 255,
												"nodeType": "Return",
												"src": "8132:70:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "7748:170:0",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "7932:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "7960:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7946:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:19:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7988:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 219,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 218,
														"name": "ShortString",
														"nameLocations": [
															"7988:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "7988:11:0"
													},
													"referencedDeclaration": 203,
													"src": "7988:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7987:13:0"
									},
									"scope": 414,
									"src": "7923:286:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "8367:331:0",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "8385:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "8377:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8377:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [
														{
															"id": 269,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8402:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														],
														"id": 268,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "8391:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8391:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8377:30:0"
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "8509:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "8495:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 272,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8495:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8526:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8515:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 274,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8519:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8515:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8495:34:0"
											},
											{
												"AST": {
													"nativeSrc": "8591:81:0",
													"nodeType": "YulBlock",
													"src": "8591:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "8612:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "8612:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8617:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "8617:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8605:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8605:6:0"
																},
																"nativeSrc": "8605:16:0",
																"nodeType": "YulFunctionCall",
																"src": "8605:16:0"
															},
															"nativeSrc": "8605:16:0",
															"nodeType": "YulExpressionStatement",
															"src": "8605:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "8645:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "8645:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8650:4:0",
																				"nodeType": "YulLiteral",
																				"src": "8650:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8641:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8641:3:0"
																		},
																		"nativeSrc": "8641:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8641:14:0"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "8657:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "8657:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8634:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8634:6:0"
																},
																"nativeSrc": "8634:28:0",
																"nodeType": "YulFunctionCall",
																"src": "8634:28:0"
															},
															"nativeSrc": "8634:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "8634:28:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 267,
														"isOffset": false,
														"isSlot": false,
														"src": "8617:3:0",
														"valueSize": 1
													},
													{
														"declaration": 261,
														"isOffset": false,
														"isSlot": false,
														"src": "8657:4:0",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "8612:3:0",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "8645:3:0",
														"valueSize": 1
													}
												],
												"id": 279,
												"nodeType": "InlineAssembly",
												"src": "8582:90:0"
											},
											{
												"expression": {
													"id": 280,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "8688:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 265,
												"id": 281,
												"nodeType": "Return",
												"src": "8681:10:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8215:73:0",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "8302:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "8323:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "8311:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "ShortString",
														"nameLocations": [
															"8311:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8311:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8311:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8310:18:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "8352:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8351:15:0"
									},
									"scope": 414,
									"src": "8293:405:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "8840:175:0",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8858:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "8850:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8850:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 298,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "8894:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 296,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "8875:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8887:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "8875:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8875:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 294,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8867:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8867:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8903:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "8867:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8850:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 304,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "8921:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8930:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "8921:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "8917:69:0",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "8934:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 307,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "8955:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8955:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 309,
															"nodeType": "RevertStatement",
															"src": "8948:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 312,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "9002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 291,
												"id": 313,
												"nodeType": "Return",
												"src": "8995:13:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "8704:61:0",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "8779:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "8802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "8790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 285,
														"name": "ShortString",
														"nameLocations": [
															"8790:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8790:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8790:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8789:18:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "8831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8830:9:0"
									},
									"scope": 414,
									"src": "8770:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "9238:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9258:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9252:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 326,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "9252:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9252:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9265:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9252:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9274:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "9252:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "9336:127:0",
													"statements": [
														{
															"expression": {
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 341,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 320,
																				"src": "9376:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 338,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "9350:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$200_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9362:13:0",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 177,
																			"src": "9350:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$108_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9350:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9383:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "9350:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9391:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "9350:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 346,
															"nodeType": "ExpressionStatement",
															"src": "9350:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 349,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "9434:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 347,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "9417:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9429:4:0",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "9417:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$203_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9417:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 325,
															"id": 351,
															"nodeType": "Return",
															"src": "9410:42:0"
														}
													]
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "9248:215:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "9278:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 334,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "9313:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 333,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "9299:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9299:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 325,
															"id": 336,
															"nodeType": "Return",
															"src": "9292:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "9021:103:0",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "9138:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9178:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9164:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9164:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "9200:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9185:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9185:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:43:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9225:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "ShortString",
														"nameLocations": [
															"9225:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "9225:11:0"
													},
													"referencedDeclaration": 203,
													"src": "9225:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9224:13:0"
									},
									"scope": 414,
									"src": "9129:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "9709:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "9742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 366,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "9723:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9735:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "9723:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9723:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 370,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "9752:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "9723:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "9824:37:0",
													"statements": [
														{
															"expression": {
																"id": 377,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "9845:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 365,
															"id": 378,
															"nodeType": "Return",
															"src": "9838:12:0"
														}
													]
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "9719:142:0",
												"trueBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "9771:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "9801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 372,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "9792:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9792:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 365,
															"id": 375,
															"nodeType": "Return",
															"src": "9785:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "9475:120:0",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "9609:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9642:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9630:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "ShortString",
														"nameLocations": [
															"9630:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "9630:11:0"
													},
													"referencedDeclaration": 203,
													"src": "9630:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "9664:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9649:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9649:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9629:41:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9694:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9694:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9693:15:0"
									},
									"scope": 414,
									"src": "9600:267:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "10347:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10380:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 393,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "10361:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10373:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "10361:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10361:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 397,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "10390:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "10361:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 410,
													"nodeType": "Block",
													"src": "10464:51:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 406,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "10491:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10485:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 404,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "10485:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10485:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10498:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10485:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 392,
															"id": 409,
															"nodeType": "Return",
															"src": "10478:26:0"
														}
													]
												},
												"id": 411,
												"nodeType": "IfStatement",
												"src": "10357:158:0",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "10409:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 400,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "10441:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 399,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "10430:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10430:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 392,
															"id": 402,
															"nodeType": "Return",
															"src": "10423:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "9873:364:0",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "10251:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10286:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10274:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "ShortString",
														"nameLocations": [
															"10274:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "10274:11:0"
													},
													"referencedDeclaration": 203,
													"src": "10274:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "10308:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10293:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10273:41:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10337:9:0"
									},
									"scope": 414,
									"src": "10242:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "7470:3053:0",
							"usedErrors": [
								211,
								213
							],
							"usedEvents": []
						},
						{
							"id": 415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10663:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 416,
								"nodeType": "StructuredDocumentation",
								"src": "10689:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518
							],
							"name": "SignedMath",
							"nameLocation": "10778:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "10930:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 426,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "10947:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 427,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "10951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "10947:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 430,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "10959:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10947:13:0",
													"trueExpression": {
														"id": 429,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "10955:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 425,
												"id": 432,
												"nodeType": "Return",
												"src": "10940:20:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "10795:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "10875:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10886:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10879:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 418,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10879:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10896:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10889:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 420,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10878:20:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10922:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 423,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10922:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10921:8:0"
									},
									"scope": 518,
									"src": "10866:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "11109:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 444,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "11126:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 445,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "11130:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "11126:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 448,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "11138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11126:13:0",
													"trueExpression": {
														"id": 447,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "11134:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 443,
												"id": 450,
												"nodeType": "Return",
												"src": "11119:20:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "10973:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "11054:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11065:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11058:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 436,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11075:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11068:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 438,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11068:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11057:20:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11101:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 441,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11101:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11100:8:0"
									},
									"scope": 518,
									"src": "11045:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11351:162:0",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "11420:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "11413:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 462,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "11413:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 464,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "11425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 465,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "11429:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11425:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 467,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11424:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "11436:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 469,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "11440:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "11436:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 471,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11435:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11435:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11434:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "11424:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11413:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "11465:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 482,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 463,
																						"src": "11485:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 481,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11477:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 480,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "11477:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11477:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11491:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "11477:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11470:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 478,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11470:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11470:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 487,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "11499:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 488,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "11503:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "11499:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 490,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11498:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11470:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 492,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11469:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "11465:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 461,
												"id": 494,
												"nodeType": "Return",
												"src": "11458:48:0"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "11152:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "11292:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11307:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11300:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 454,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11317:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11310:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11310:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11299:20:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11343:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 459,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11342:8:0"
									},
									"scope": 518,
									"src": "11283:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "11657:158:0",
										"statements": [
											{
												"id": 515,
												"nodeType": "UncheckedBlock",
												"src": "11667:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 506,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "11782:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11787:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11782:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "11795:2:0",
																		"subExpression": {
																			"id": 510,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "11796:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11782:15:0",
																	"trueExpression": {
																		"id": 509,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "11791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11774:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11774:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 503,
														"id": 514,
														"nodeType": "Return",
														"src": "11767:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "11519:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "11611:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11622:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11615:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 498,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11615:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11614:10:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11648:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11647:9:0"
									},
									"scope": 518,
									"src": "11602:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "10770:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11945:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "11971:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1571,
							"linearizedBaseContracts": [
								1571
							],
							"name": "Math",
							"nameLocation": "12053:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "12064:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 523,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "12125:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12145:2:0"
									},
									"src": "12119:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 528,
									"members": [
										{
											"id": 524,
											"name": "Floor",
											"nameLocation": "12178:5:0",
											"nodeType": "EnumValue",
											"src": "12178:5:0"
										},
										{
											"id": 525,
											"name": "Ceil",
											"nameLocation": "12221:4:0",
											"nodeType": "EnumValue",
											"src": "12221:4:0"
										},
										{
											"id": 526,
											"name": "Trunc",
											"nameLocation": "12263:5:0",
											"nodeType": "EnumValue",
											"src": "12263:5:0"
										},
										{
											"id": 527,
											"name": "Expand",
											"nameLocation": "12293:6:0",
											"nodeType": "EnumValue",
											"src": "12293:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "12159:8:0",
									"nodeType": "EnumDefinition",
									"src": "12154:169:0"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "12503:140:0",
										"statements": [
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "12513:124:0",
												"statements": [
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "12545:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "12537:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12537:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 545,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "12549:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "12553:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12537:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "12572:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "12576:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12572:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "12568:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12587:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12594:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12586:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 539,
															"id": 552,
															"nodeType": "Return",
															"src": "12579:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 555,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "12624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 539,
														"id": 557,
														"nodeType": "Return",
														"src": "12610:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "12329:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "12436:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12451:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12443:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12462:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12454:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12442:22:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12488:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12488:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12487:15:0"
									},
									"scope": 1571,
									"src": "12427:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "12826:113:0",
										"statements": [
											{
												"id": 586,
												"nodeType": "UncheckedBlock",
												"src": "12836:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "12864:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "12868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12864:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 579,
														"nodeType": "IfStatement",
														"src": "12860:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12879:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12886:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12878:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 571,
															"id": 578,
															"nodeType": "Return",
															"src": "12871:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12910:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 581,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "12916:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "12920:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12916:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 584,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12909:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 571,
														"id": 585,
														"nodeType": "Return",
														"src": "12902:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "12649:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "12759:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12774:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12766:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12785:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12777:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12765:22:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12811:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12811:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12817:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12810:15:0"
									},
									"scope": 1571,
									"src": "12750:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "13125:417:0",
										"statements": [
											{
												"id": 628,
												"nodeType": "UncheckedBlock",
												"src": "13135:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13393:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13398:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13393:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 607,
														"nodeType": "IfStatement",
														"src": "13389:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13409:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13415:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13408:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 606,
															"nodeType": "Return",
															"src": "13401:16:0"
														}
													},
													{
														"assignments": [
															609
														],
														"declarations": [
															{
																"constant": false,
																"id": 609,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "13439:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 628,
																"src": "13431:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 608,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13431:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 613,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 610,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13443:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 611,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13443:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13431:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "13466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 615,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "13470:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13466:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13475:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13466:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "13462:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13486:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13493:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13485:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 622,
															"nodeType": "Return",
															"src": "13478:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13517:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 625,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "13523:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 626,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13516:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 599,
														"id": 627,
														"nodeType": "Return",
														"src": "13509:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "12945:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "13058:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13073:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13065:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13084:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13076:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13064:22:0"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13110:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13109:15:0"
									},
									"scope": 1571,
									"src": "13049:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "13729:114:0",
										"statements": [
											{
												"id": 656,
												"nodeType": "UncheckedBlock",
												"src": "13739:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "13767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13767:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 649,
														"nodeType": "IfStatement",
														"src": "13763:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13783:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13790:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 641,
															"id": 648,
															"nodeType": "Return",
															"src": "13775:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13814:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 651,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "13820:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 652,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "13824:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13820:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 654,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13813:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 641,
														"id": 655,
														"nodeType": "Return",
														"src": "13806:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "13548:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "13662:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13677:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13669:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13688:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13680:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13668:22:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13714:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13714:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13713:15:0"
									},
									"scope": 1571,
									"src": "13653:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "14040:114:0",
										"statements": [
											{
												"id": 684,
												"nodeType": "UncheckedBlock",
												"src": "14050:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "14078:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14083:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14078:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 677,
														"nodeType": "IfStatement",
														"src": "14074:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14094:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14093:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 669,
															"id": 676,
															"nodeType": "Return",
															"src": "14086:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 679,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "14131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 680,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "14135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 682,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14124:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 669,
														"id": 683,
														"nodeType": "Return",
														"src": "14117:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "13849:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "13973:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13988:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "13980:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13999:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "13991:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13979:22:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14025:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14025:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14024:15:0"
									},
									"scope": 1571,
									"src": "13964:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "14291:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 696,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "14308:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 697,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "14312:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14308:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "14320:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14308:13:0",
													"trueExpression": {
														"id": 699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "14316:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 695,
												"id": 702,
												"nodeType": "Return",
												"src": "14301:20:0"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "14160:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "14233:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14245:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14237:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14256:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14248:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14236:22:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14281:9:0"
									},
									"scope": 1571,
									"src": "14224:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "14466:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "14483:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "14487:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "14495:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14483:13:0",
													"trueExpression": {
														"id": 717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "14491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 720,
												"nodeType": "Return",
												"src": "14476:20:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "14334:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "14408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14411:22:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14456:9:0"
									},
									"scope": 1571,
									"src": "14399:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "14687:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 732,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "14742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 733,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "14746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 736,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "14752:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 737,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "14756:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14752:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14761:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "14751:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14741:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 731,
												"id": 743,
												"nodeType": "Return",
												"src": "14734:28:0"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "14509:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "14625:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14641:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14633:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14652:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14644:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14632:22:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14678:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14677:9:0"
									},
									"scope": 1571,
									"src": "14616:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "15061:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "15075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15080:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "15071:127:0",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "15083:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "15182:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 759,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "15186:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15182:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 754,
															"id": 761,
															"nodeType": "Return",
															"src": "15175:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "15286:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15291:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15286:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "15300:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15304:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15300:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 771,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 772,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "15309:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15299:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15313:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "15299:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "15286:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15295:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 777,
												"nodeType": "Return",
												"src": "15279:35:0"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "14775:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "14999:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15015:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15007:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15006:22:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15052:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15051:9:0"
									},
									"scope": 1571,
									"src": "14990:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "15743:4018:0",
										"statements": [
											{
												"id": 903,
												"nodeType": "UncheckedBlock",
												"src": "15753:4002:0",
												"statements": [
													{
														"assignments": [
															792
														],
														"declarations": [
															{
																"constant": false,
																"id": 792,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "16082:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "16074:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 791,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 796,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "16090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 794,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "16094:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16090:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16074:21:0"
													},
													{
														"assignments": [
															798
														],
														"declarations": [
															{
																"constant": false,
																"id": 798,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "16162:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "16154:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 797,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16154:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 799,
														"nodeType": "VariableDeclarationStatement",
														"src": "16154:13:0"
													},
													{
														"AST": {
															"nativeSrc": "16234:122:0",
															"nodeType": "YulBlock",
															"src": "16234:122:0",
															"statements": [
																{
																	"nativeSrc": "16252:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16252:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "16269:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16269:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "16272:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16272:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16279:1:0",
																						"nodeType": "YulLiteral",
																						"src": "16279:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16275:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "16275:3:0"
																				},
																				"nativeSrc": "16275:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16275:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "16262:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "16262:6:0"
																		},
																		"nativeSrc": "16262:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16262:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "16256:2:0",
																			"nodeType": "YulTypedName",
																			"src": "16256:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16299:43:0",
																	"nodeType": "YulAssignment",
																	"src": "16299:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "16316:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "16316:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "16320:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "16320:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16312:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "16312:3:0"
																				},
																				"nativeSrc": "16312:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16312:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "16331:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "16331:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "16335:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "16335:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "16328:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "16328:2:0"
																				},
																				"nativeSrc": "16328:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16328:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16308:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16308:3:0"
																		},
																		"nativeSrc": "16308:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16308:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "16299:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16299:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "16320:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "16335:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "16299:5:0",
																"valueSize": 1
															},
															{
																"declaration": 782,
																"isOffset": false,
																"isSlot": false,
																"src": "16269:1:0",
																"valueSize": 1
															},
															{
																"declaration": 784,
																"isOffset": false,
																"isSlot": false,
																"src": "16272:1:0",
																"valueSize": 1
															}
														],
														"id": 800,
														"nodeType": "InlineAssembly",
														"src": "16225:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "16437:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16437:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 809,
														"nodeType": "IfStatement",
														"src": "16433:368:0",
														"trueBody": {
															"id": 808,
															"nodeType": "Block",
															"src": "16449:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 804,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "16767:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 805,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "16775:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16767:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 790,
																	"id": 807,
																	"nodeType": "Return",
																	"src": "16760:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "16907:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 811,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "16922:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16907:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 817,
														"nodeType": "IfStatement",
														"src": "16903:88:0",
														"trueBody": {
															"id": 816,
															"nodeType": "Block",
															"src": "16929:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 813,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "16954:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16954:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 815,
																	"nodeType": "RevertStatement",
																	"src": "16947:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															819
														],
														"declarations": [
															{
																"constant": false,
																"id": 819,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "17254:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "17246:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17246:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 820,
														"nodeType": "VariableDeclarationStatement",
														"src": "17246:17:0"
													},
													{
														"AST": {
															"nativeSrc": "17286:291:0",
															"nodeType": "YulBlock",
															"src": "17286:291:0",
															"statements": [
																{
																	"nativeSrc": "17355:38:0",
																	"nodeType": "YulAssignment",
																	"src": "17355:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "17375:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "17375:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "17378:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "17378:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "17381:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "17381:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "17368:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "17368:6:0"
																		},
																		"nativeSrc": "17368:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17368:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "17355:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "17355:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "17475:41:0",
																	"nodeType": "YulAssignment",
																	"src": "17475:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "17488:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17488:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "17498:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "17498:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "17509:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "17509:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "17495:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "17495:2:0"
																				},
																				"nativeSrc": "17495:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "17495:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17484:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17484:3:0"
																		},
																		"nativeSrc": "17484:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17484:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "17475:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "17475:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "17533:30:0",
																	"nodeType": "YulAssignment",
																	"src": "17533:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "17546:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17546:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "17553:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "17553:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17542:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17542:3:0"
																		},
																		"nativeSrc": "17542:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17542:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "17533:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "17533:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17381:11:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17509:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17533:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17546:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "17475:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "17488:5:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17355:9:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17498:9:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17553:9:0",
																"valueSize": 1
															},
															{
																"declaration": 782,
																"isOffset": false,
																"isSlot": false,
																"src": "17375:1:0",
																"valueSize": 1
															},
															{
																"declaration": 784,
																"isOffset": false,
																"isSlot": false,
																"src": "17378:1:0",
																"valueSize": 1
															}
														],
														"id": 821,
														"nodeType": "InlineAssembly",
														"src": "17277:300:0"
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "17789:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "17781:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17781:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 830,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "17796:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17811:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 826,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "17815:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17811:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 828,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17810:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17796:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17781:46:0"
													},
													{
														"AST": {
															"nativeSrc": "17850:362:0",
															"nodeType": "YulBlock",
															"src": "17850:362:0",
															"statements": [
																{
																	"nativeSrc": "17915:37:0",
																	"nodeType": "YulAssignment",
																	"src": "17915:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "17934:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "17934:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "17947:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "17947:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "17930:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17930:3:0"
																		},
																		"nativeSrc": "17930:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17930:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "17915:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "17915:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "18019:25:0",
																	"nodeType": "YulAssignment",
																	"src": "18019:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "18032:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "18032:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "18039:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "18039:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "18028:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18028:3:0"
																		},
																		"nativeSrc": "18028:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18028:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "18019:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "18019:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "18159:39:0",
																	"nodeType": "YulAssignment",
																	"src": "18159:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18179:1:0",
																								"nodeType": "YulLiteral",
																								"src": "18179:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "18182:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "18182:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "18175:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "18175:3:0"
																						},
																						"nativeSrc": "18175:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "18175:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "18189:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "18189:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "18171:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "18171:3:0"
																				},
																				"nativeSrc": "18171:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "18171:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18196:1:0",
																				"nodeType": "YulLiteral",
																				"src": "18196:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18167:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18167:3:0"
																		},
																		"nativeSrc": "18167:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18167:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "18159:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "18159:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17915:11:0",
																"valueSize": 1
															},
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17934:11:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "18019:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "18032:5:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "17947:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18039:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18159:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18182:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18189:4:0",
																"valueSize": 1
															}
														],
														"id": 831,
														"nodeType": "InlineAssembly",
														"src": "17841:371:0"
													},
													{
														"expression": {
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "18278:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "18287:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 834,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "18295:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18287:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18278:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 837,
														"nodeType": "ExpressionStatement",
														"src": "18278:21:0"
													},
													{
														"assignments": [
															839
														],
														"declarations": [
															{
																"constant": false,
																"id": 839,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "18625:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "18617:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 838,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 846,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18636:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 841,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "18640:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18636:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18635:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18655:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "18635:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18617:39:0"
													},
													{
														"expression": {
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 847,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "18873:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18884:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 849,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "18888:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 850,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "18902:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18888:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18884:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18873:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 854,
														"nodeType": "ExpressionStatement",
														"src": "18873:36:0"
													},
													{
														"expression": {
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 855,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "18942:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18953:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 857,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "18957:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 858,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "18971:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18957:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18953:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18942:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 862,
														"nodeType": "ExpressionStatement",
														"src": "18942:36:0"
													},
													{
														"expression": {
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 863,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19012:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19023:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 865,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19027:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 866,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19041:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19027:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19023:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19012:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 870,
														"nodeType": "ExpressionStatement",
														"src": "19012:36:0"
													},
													{
														"expression": {
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 871,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19093:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 873,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19097:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 874,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19097:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19093:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19082:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"nodeType": "ExpressionStatement",
														"src": "19082:36:0"
													},
													{
														"expression": {
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 879,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19152:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19163:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19167:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 882,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19181:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19167:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19163:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19152:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 886,
														"nodeType": "ExpressionStatement",
														"src": "19152:36:0"
													},
													{
														"expression": {
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 887,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19223:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 889,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19238:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 890,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19252:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19238:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19234:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19223:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 894,
														"nodeType": "ExpressionStatement",
														"src": "19223:36:0"
													},
													{
														"expression": {
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 895,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "19693:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 896,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "19702:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 897,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "19710:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19702:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19693:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 900,
														"nodeType": "ExpressionStatement",
														"src": "19693:24:0"
													},
													{
														"expression": {
															"id": 901,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "19738:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 790,
														"id": 902,
														"nodeType": "Return",
														"src": "19731:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "15327:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "15654:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "15669:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15661:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "15680:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15672:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "15691:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15683:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15660:43:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15726:16:0"
									},
									"scope": 1571,
									"src": "15645:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "20003:192:0",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20021:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 947,
														"src": "20013:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"id": 923,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "20037:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 924,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "20040:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 925,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "20043:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															905,
															948
														],
														"referencedDeclaration": 905,
														"src": "20030:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20030:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20013:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 929,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "20086:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$528",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$528",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 928,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "20069:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20069:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 932,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "20106:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 933,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "20109:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 934,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "20112:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 931,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "20099:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20099:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20127:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20099:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20069:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "20065:101:0",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "20130:36:0",
													"statements": [
														{
															"expression": {
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 939,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "20144:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20154:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20144:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "20144:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 945,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "20182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 919,
												"id": 946,
												"nodeType": "Return",
												"src": "20175:13:0"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "19767:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "19902:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "19917:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19909:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "19928:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19920:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "19939:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19931:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19961:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19952:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 913,
														"name": "Rounding",
														"nameLocations": [
															"19952:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "19952:8:0"
													},
													"referencedDeclaration": 528,
													"src": "19952:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19908:62:0"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19994:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19993:9:0"
									},
									"scope": 1571,
									"src": "19893:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "20486:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "20500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20505:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20500:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "20496:45:0",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "20508:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20529:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 955,
															"id": 960,
															"nodeType": "Return",
															"src": "20522:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21228:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "21220:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21237:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 967,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "21248:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 966,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1227,
																			1262
																		],
																		"referencedDeclaration": 1227,
																		"src": "21243:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21243:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21254:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21243:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "21242:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21237:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21220:36:0"
											},
											{
												"id": 1058,
												"nodeType": "UncheckedBlock",
												"src": "21657:408:0",
												"statements": [
													{
														"expression": {
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 974,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21681:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 975,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21691:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 976,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21700:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 977,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21704:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21700:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21691:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 980,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21690:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21715:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21690:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21681:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 984,
														"nodeType": "ExpressionStatement",
														"src": "21681:35:0"
													},
													{
														"expression": {
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 985,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21730:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 986,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21740:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 987,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21749:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 988,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21753:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21749:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21740:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21739:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21739:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21730:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 995,
														"nodeType": "ExpressionStatement",
														"src": "21730:35:0"
													},
													{
														"expression": {
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21779:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 997,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21789:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 998,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21798:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 999,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21802:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21798:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21789:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1002,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21788:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21788:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21779:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1006,
														"nodeType": "ExpressionStatement",
														"src": "21779:35:0"
													},
													{
														"expression": {
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21828:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1008,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21838:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1009,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21847:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1010,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21851:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21847:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21838:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1013,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21837:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21862:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21837:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21828:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1017,
														"nodeType": "ExpressionStatement",
														"src": "21828:35:0"
													},
													{
														"expression": {
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1018,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21877:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1019,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21887:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1020,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21896:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1021,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21900:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21896:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21887:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1024,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21886:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21911:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21886:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21877:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1028,
														"nodeType": "ExpressionStatement",
														"src": "21877:35:0"
													},
													{
														"expression": {
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1029,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21926:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1030,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21936:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21945:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1032,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21949:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21945:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21936:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21935:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21960:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21935:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21926:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1039,
														"nodeType": "ExpressionStatement",
														"src": "21926:35:0"
													},
													{
														"expression": {
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1040,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21975:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1041,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21985:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1042,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21994:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1043,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21998:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21994:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21985:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1046,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21984:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22009:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21984:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21975:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1050,
														"nodeType": "ExpressionStatement",
														"src": "21975:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1052,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "22035:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "22043:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1054,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "22047:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22043:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1051,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "22031:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22031:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 955,
														"id": 1057,
														"nodeType": "Return",
														"src": "22024:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "20201:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20438:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20451:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "20443:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20442:11:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "20477:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:9:0"
									},
									"scope": 1571,
									"src": "20429:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "22247:164:0",
										"statements": [
											{
												"id": 1093,
												"nodeType": "UncheckedBlock",
												"src": "22257:148:0",
												"statements": [
													{
														"assignments": [
															1072
														],
														"declarations": [
															{
																"constant": false,
																"id": 1072,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22289:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1093,
																"src": "22281:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1071,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22281:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1076,
														"initialValue": {
															"arguments": [
																{
																	"id": 1074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "22303:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1073,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1060,
																	1095
																],
																"referencedDeclaration": 1060,
																"src": "22298:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22298:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22281:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "22326:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1079,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1066,
																						"src": "22353:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1078,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "22336:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22336:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1081,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "22366:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1082,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "22375:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22366:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1084,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1063,
																					"src": "22384:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22366:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22336:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22392:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22336:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22388:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22335:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22326:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1070,
														"id": 1092,
														"nodeType": "Return",
														"src": "22319:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "22077:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "22180:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22193:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22185:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22205:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22196:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1064,
														"name": "Rounding",
														"nameLocations": [
															"22196:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "22196:8:0"
													},
													"referencedDeclaration": 528,
													"src": "22196:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22184:30:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22238:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22237:9:0"
									},
									"scope": 1571,
									"src": "22171:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "22602:922:0",
										"statements": [
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "22620:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "22612:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"hexValue": "30",
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22629:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22612:18:0"
											},
											{
												"id": 1223,
												"nodeType": "UncheckedBlock",
												"src": "22640:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22668:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22677:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "22668:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22668:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1121,
														"nodeType": "IfStatement",
														"src": "22664:99:0",
														"trueBody": {
															"id": 1120,
															"nodeType": "Block",
															"src": "22686:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1112,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22704:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22714:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22704:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1115,
																	"nodeType": "ExpressionStatement",
																	"src": "22704:13:0"
																},
																{
																	"expression": {
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1116,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22735:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22745:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22735:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1119,
																	"nodeType": "ExpressionStatement",
																	"src": "22735:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22780:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22789:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "22780:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22794:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22780:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1136,
														"nodeType": "IfStatement",
														"src": "22776:96:0",
														"trueBody": {
															"id": 1135,
															"nodeType": "Block",
															"src": "22797:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1127,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22815:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22825:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22815:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1130,
																	"nodeType": "ExpressionStatement",
																	"src": "22815:12:0"
																},
																{
																	"expression": {
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1131,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22845:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22855:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22845:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1134,
																	"nodeType": "ExpressionStatement",
																	"src": "22845:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1137,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22889:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22898:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22889:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22889:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1151,
														"nodeType": "IfStatement",
														"src": "22885:96:0",
														"trueBody": {
															"id": 1150,
															"nodeType": "Block",
															"src": "22906:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1142,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22924:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22934:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22924:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1145,
																	"nodeType": "ExpressionStatement",
																	"src": "22924:12:0"
																},
																{
																	"expression": {
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1146,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22954:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22964:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22954:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1149,
																	"nodeType": "ExpressionStatement",
																	"src": "22954:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1152,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22998:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23007:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "22998:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23012:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22998:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1166,
														"nodeType": "IfStatement",
														"src": "22994:96:0",
														"trueBody": {
															"id": 1165,
															"nodeType": "Block",
															"src": "23015:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23033:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23043:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23033:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1160,
																	"nodeType": "ExpressionStatement",
																	"src": "23033:12:0"
																},
																{
																	"expression": {
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1161,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23063:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23073:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23063:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1164,
																	"nodeType": "ExpressionStatement",
																	"src": "23063:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23107:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23116:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23107:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23107:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1181,
														"nodeType": "IfStatement",
														"src": "23103:93:0",
														"trueBody": {
															"id": 1180,
															"nodeType": "Block",
															"src": "23123:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1172,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23141:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23151:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23141:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1175,
																	"nodeType": "ExpressionStatement",
																	"src": "23141:11:0"
																},
																{
																	"expression": {
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1176,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23170:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23180:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23170:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1179,
																	"nodeType": "ExpressionStatement",
																	"src": "23170:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1182,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23213:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23222:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "23213:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23226:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23213:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1196,
														"nodeType": "IfStatement",
														"src": "23209:93:0",
														"trueBody": {
															"id": 1195,
															"nodeType": "Block",
															"src": "23229:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1187,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23247:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23257:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23247:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1190,
																	"nodeType": "ExpressionStatement",
																	"src": "23247:11:0"
																},
																{
																	"expression": {
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23276:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23286:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23276:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1194,
																	"nodeType": "ExpressionStatement",
																	"src": "23276:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23319:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "23319:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23332:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23319:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1211,
														"nodeType": "IfStatement",
														"src": "23315:93:0",
														"trueBody": {
															"id": 1210,
															"nodeType": "Block",
															"src": "23335:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23353:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23363:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23353:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"nodeType": "ExpressionStatement",
																	"src": "23353:11:0"
																},
																{
																	"expression": {
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1206,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23382:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23392:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23382:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1209,
																	"nodeType": "ExpressionStatement",
																	"src": "23382:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23425:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23434:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23425:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23438:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23425:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1222,
														"nodeType": "IfStatement",
														"src": "23421:64:0",
														"trueBody": {
															"id": 1221,
															"nodeType": "Block",
															"src": "23441:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23459:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23469:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23459:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1220,
																	"nodeType": "ExpressionStatement",
																	"src": "23459:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1224,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "23511:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1225,
												"nodeType": "Return",
												"src": "23504:13:0"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "22417:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "22550:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22563:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "22555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22554:15:0"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "22593:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22592:9:0"
									},
									"scope": 1571,
									"src": "22541:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "23757:168:0",
										"statements": [
											{
												"id": 1260,
												"nodeType": "UncheckedBlock",
												"src": "23767:152:0",
												"statements": [
													{
														"assignments": [
															1239
														],
														"declarations": [
															{
																"constant": false,
																"id": 1239,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23799:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1260,
																"src": "23791:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1238,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1243,
														"initialValue": {
															"arguments": [
																{
																	"id": 1241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "23813:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1240,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1227,
																	1262
																],
																"referencedDeclaration": 1227,
																"src": "23808:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23808:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23791:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "23840:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1246,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1233,
																						"src": "23867:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1245,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "23850:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23850:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1248,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23880:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1249,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1239,
																						"src": "23885:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23880:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1251,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1230,
																					"src": "23894:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23880:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "23850:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23906:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "23850:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23902:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23849:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "23840:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1237,
														"id": 1259,
														"nodeType": "Return",
														"src": "23833:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "23530:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23686:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23699:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23691:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23715:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23706:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "Rounding",
														"nameLocations": [
															"23706:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "23706:8:0"
													},
													"referencedDeclaration": 528,
													"src": "23706:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23690:34:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23747:9:0"
									},
									"scope": 1571,
									"src": "23677:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "24118:854:0",
										"statements": [
											{
												"assignments": [
													1271
												],
												"declarations": [
													{
														"constant": false,
														"id": 1271,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24136:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "24128:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24128:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"hexValue": "30",
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24145:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24128:18:0"
											},
											{
												"id": 1387,
												"nodeType": "UncheckedBlock",
												"src": "24156:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24184:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24193:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24199:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "24193:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "24184:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1290,
														"nodeType": "IfStatement",
														"src": "24180:103:0",
														"trueBody": {
															"id": 1289,
															"nodeType": "Block",
															"src": "24203:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24221:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24230:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24236:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "24230:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "24221:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1284,
																	"nodeType": "ExpressionStatement",
																	"src": "24221:17:0"
																},
																{
																	"expression": {
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1285,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24256:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24266:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24256:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1288,
																	"nodeType": "ExpressionStatement",
																	"src": "24256:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24300:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24309:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24315:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24309:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "24300:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1307,
														"nodeType": "IfStatement",
														"src": "24296:103:0",
														"trueBody": {
															"id": 1306,
															"nodeType": "Block",
															"src": "24319:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24337:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24346:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24352:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "24346:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "24337:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "24337:17:0"
																},
																{
																	"expression": {
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24372:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24382:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "24372:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1305,
																	"nodeType": "ExpressionStatement",
																	"src": "24372:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24416:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24425:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24431:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "24425:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "24416:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "24412:103:0",
														"trueBody": {
															"id": 1323,
															"nodeType": "Block",
															"src": "24435:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24453:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24462:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24468:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "24462:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "24453:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1318,
																	"nodeType": "ExpressionStatement",
																	"src": "24453:17:0"
																},
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24488:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24498:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24488:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "24488:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24532:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24541:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24547:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "24541:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "24532:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1341,
														"nodeType": "IfStatement",
														"src": "24528:100:0",
														"trueBody": {
															"id": 1340,
															"nodeType": "Block",
															"src": "24550:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24568:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24577:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24583:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "24577:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "24568:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "24568:16:0"
																},
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24602:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24612:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "24602:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "24602:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24645:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24654:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "24654:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "24645:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "24641:100:0",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "24663:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24681:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24690:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24696:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "24690:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "24681:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "24681:16:0"
																},
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24715:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24725:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "24715:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "24715:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24758:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24767:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24773:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "24767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "24758:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "24754:100:0",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "24776:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24794:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24803:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24809:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "24803:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "24794:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "24794:16:0"
																},
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24828:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24838:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "24828:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "24828:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24871:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24880:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24886:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "24871:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1386,
														"nodeType": "IfStatement",
														"src": "24867:66:0",
														"trueBody": {
															"id": 1385,
															"nodeType": "Block",
															"src": "24889:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24907:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24917:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24907:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1384,
																	"nodeType": "ExpressionStatement",
																	"src": "24907:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1388,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1271,
													"src": "24959:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1389,
												"nodeType": "Return",
												"src": "24952:13:0"
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "23931:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "24065:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24079:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "24071:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24070:15:0"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "24109:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24108:9:0"
									},
									"scope": 1571,
									"src": "24056:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "25207:170:0",
										"statements": [
											{
												"id": 1424,
												"nodeType": "UncheckedBlock",
												"src": "25217:154:0",
												"statements": [
													{
														"assignments": [
															1403
														],
														"declarations": [
															{
																"constant": false,
																"id": 1403,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25249:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1424,
																"src": "25241:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1402,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25241:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1407,
														"initialValue": {
															"arguments": [
																{
																	"id": 1405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "25264:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1404,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1391,
																	1426
																],
																"referencedDeclaration": 1391,
																"src": "25258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25241:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "25291:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1410,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1397,
																						"src": "25318:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1409,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "25301:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25301:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1412,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25331:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1413,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1403,
																						"src": "25337:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25331:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1415,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1394,
																					"src": "25346:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25331:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "25301:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25358:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "25301:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25354:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25300:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "25291:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1401,
														"id": 1423,
														"nodeType": "Return",
														"src": "25284:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "24978:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25135:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25149:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25141:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25165:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25156:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1395,
														"name": "Rounding",
														"nameLocations": [
															"25156:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "25156:8:0"
													},
													"referencedDeclaration": 528,
													"src": "25156:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25140:34:0"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25198:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25197:9:0"
									},
									"scope": 1571,
									"src": "25126:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "25697:600:0",
										"statements": [
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25715:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "25707:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"hexValue": "30",
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25724:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25707:18:0"
											},
											{
												"id": 1509,
												"nodeType": "UncheckedBlock",
												"src": "25735:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "25763:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25772:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "25763:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25778:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25763:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1452,
														"nodeType": "IfStatement",
														"src": "25759:98:0",
														"trueBody": {
															"id": 1451,
															"nodeType": "Block",
															"src": "25781:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1443,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "25799:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25809:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "25799:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1446,
																	"nodeType": "ExpressionStatement",
																	"src": "25799:13:0"
																},
																{
																	"expression": {
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1447,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "25830:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25840:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25830:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1450,
																	"nodeType": "ExpressionStatement",
																	"src": "25830:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1453,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "25874:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25883:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25874:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25888:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25874:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1467,
														"nodeType": "IfStatement",
														"src": "25870:95:0",
														"trueBody": {
															"id": 1466,
															"nodeType": "Block",
															"src": "25891:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1458,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "25909:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25919:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25909:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1461,
																	"nodeType": "ExpressionStatement",
																	"src": "25909:12:0"
																},
																{
																	"expression": {
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1462,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "25939:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25949:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25939:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1465,
																	"nodeType": "ExpressionStatement",
																	"src": "25939:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "25982:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25991:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25982:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25996:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25982:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1482,
														"nodeType": "IfStatement",
														"src": "25978:95:0",
														"trueBody": {
															"id": 1481,
															"nodeType": "Block",
															"src": "25999:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1473,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "26017:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26027:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26017:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1476,
																	"nodeType": "ExpressionStatement",
																	"src": "26017:12:0"
																},
																{
																	"expression": {
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26047:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26057:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "26047:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1480,
																	"nodeType": "ExpressionStatement",
																	"src": "26047:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26090:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26099:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26090:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26104:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26090:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1497,
														"nodeType": "IfStatement",
														"src": "26086:95:0",
														"trueBody": {
															"id": 1496,
															"nodeType": "Block",
															"src": "26107:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1488,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "26125:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26135:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26125:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1491,
																	"nodeType": "ExpressionStatement",
																	"src": "26125:12:0"
																},
																{
																	"expression": {
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1492,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26155:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26165:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26155:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1495,
																	"nodeType": "ExpressionStatement",
																	"src": "26155:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26198:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26198:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26211:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26198:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1508,
														"nodeType": "IfStatement",
														"src": "26194:64:0",
														"trueBody": {
															"id": 1507,
															"nodeType": "Block",
															"src": "26214:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26232:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26242:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26232:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"nodeType": "ExpressionStatement",
																	"src": "26232:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1510,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1435,
													"src": "26284:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1511,
												"nodeType": "Return",
												"src": "26277:13:0"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "25383:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "25643:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25658:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "25650:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25649:15:0"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "25688:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25687:9:0"
									},
									"scope": 1571,
									"src": "25634:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "26534:177:0",
										"statements": [
											{
												"id": 1549,
												"nodeType": "UncheckedBlock",
												"src": "26544:161:0",
												"statements": [
													{
														"assignments": [
															1525
														],
														"declarations": [
															{
																"constant": false,
																"id": 1525,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26576:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1549,
																"src": "26568:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26568:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1529,
														"initialValue": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "26592:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1526,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1513,
																	1551
																],
																"referencedDeclaration": 1513,
																"src": "26585:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26585:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26568:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "26619:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1532,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1519,
																						"src": "26646:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1531,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "26629:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26629:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "26659:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1537,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1535,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1525,
																									"src": "26665:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1536,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "26675:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "26665:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1538,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "26664:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26659:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1540,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1516,
																					"src": "26680:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26659:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26629:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26692:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26629:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26688:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1546,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26628:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26619:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1523,
														"id": 1548,
														"nodeType": "Return",
														"src": "26612:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "26303:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26461:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26483:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1517,
														"name": "Rounding",
														"nameLocations": [
															"26483:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "26483:8:0"
													},
													"referencedDeclaration": 528,
													"src": "26483:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26467:34:0"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26524:9:0"
									},
									"scope": 1571,
									"src": "26452:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "26909:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "26932:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$528",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$528",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1560,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "26926:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26926:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26944:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26926:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26949:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26926:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1568,
												"nodeType": "Return",
												"src": "26919:31:0"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "26717:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "26844:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26870:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "26861:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1553,
														"name": "Rounding",
														"nameLocations": [
															"26861:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "26861:8:0"
													},
													"referencedDeclaration": 528,
													"src": "26861:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26860:19:0"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "26903:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26902:6:0"
									},
									"scope": 1571,
									"src": "26835:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "12045:14914:0",
							"usedErrors": [
								523
							],
							"usedEvents": []
						},
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27083:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1573,
								"nodeType": "StructuredDocumentation",
								"src": "27111:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1821,
							"linearizedBaseContracts": [
								1821
							],
							"name": "Strings",
							"nameLocation": "27154:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1576,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "27193:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "27168:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1574,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "27168:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27206:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1579,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "27253:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "27230:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1577,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "27230:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1578,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27270:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "27279:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1586,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "27371:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27408:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "27400:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "27423:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "27415:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27399:31:0"
									},
									"src": "27365:66:0"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "27603:627:0",
										"statements": [
											{
												"id": 1632,
												"nodeType": "UncheckedBlock",
												"src": "27613:611:0",
												"statements": [
													{
														"assignments": [
															1595
														],
														"declarations": [
															{
																"constant": false,
																"id": 1595,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "27645:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27637:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27637:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1602,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1598,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1589,
																		"src": "27665:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1596,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "27654:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1571_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27659:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1391,
																	"src": "27654:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27654:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "27654:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27637:38:0"
													},
													{
														"assignments": [
															1604
														],
														"declarations": [
															{
																"constant": false,
																"id": 1604,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "27703:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27689:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1603,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "27689:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1609,
														"initialValue": {
															"arguments": [
																{
																	"id": 1607,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "27723:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "27712:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "27716:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27712:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27689:41:0"
													},
													{
														"assignments": [
															1611
														],
														"declarations": [
															{
																"constant": false,
																"id": 1611,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "27752:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27744:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27744:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1612,
														"nodeType": "VariableDeclarationStatement",
														"src": "27744:11:0"
													},
													{
														"AST": {
															"nativeSrc": "27825:67:0",
															"nodeType": "YulBlock",
															"src": "27825:67:0",
															"statements": [
																{
																	"nativeSrc": "27843:35:0",
																	"nodeType": "YulAssignment",
																	"src": "27843:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "27854:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "27854:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27866:2:0",
																						"nodeType": "YulLiteral",
																						"src": "27866:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "27870:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "27870:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27862:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "27862:3:0"
																				},
																				"nativeSrc": "27862:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "27862:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27850:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "27850:3:0"
																		},
																		"nativeSrc": "27850:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "27850:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "27843:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "27843:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1604,
																"isOffset": false,
																"isSlot": false,
																"src": "27854:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1595,
																"isOffset": false,
																"isSlot": false,
																"src": "27870:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "27843:3:0",
																"valueSize": 1
															}
														],
														"id": 1613,
														"nodeType": "InlineAssembly",
														"src": "27816:76:0"
													},
													{
														"body": {
															"id": 1628,
															"nodeType": "Block",
															"src": "27918:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "27936:5:0",
																		"subExpression": {
																			"id": 1615,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "27936:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1617,
																	"nodeType": "ExpressionStatement",
																	"src": "27936:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "28019:86:0",
																		"nodeType": "YulBlock",
																		"src": "28019:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "28049:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "28049:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "28063:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "28063:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28070:2:0",
																											"nodeType": "YulLiteral",
																											"src": "28070:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "28059:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "28059:3:0"
																									},
																									"nativeSrc": "28059:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "28059:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "28075:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "28075:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "28054:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "28054:4:0"
																							},
																							"nativeSrc": "28054:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "28054:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "28041:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "28041:7:0"
																					},
																					"nativeSrc": "28041:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "28041:46:0"
																				},
																				"nativeSrc": "28041:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "28041:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1576,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28075:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1611,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28049:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1589,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28063:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1618,
																	"nodeType": "InlineAssembly",
																	"src": "28010:95:0"
																},
																{
																	"expression": {
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "28122:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28131:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "28122:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1622,
																	"nodeType": "ExpressionStatement",
																	"src": "28122:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "28155:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28164:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "28155:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1627,
																	"nodeType": "IfStatement",
																	"src": "28151:21:0",
																	"trueBody": {
																		"id": 1626,
																		"nodeType": "Break",
																		"src": "28167:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1629,
														"nodeType": "WhileStatement",
														"src": "27905:282:0"
													},
													{
														"expression": {
															"id": 1630,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "28207:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1593,
														"id": 1631,
														"nodeType": "Return",
														"src": "28200:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "27437:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "27541:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "27550:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27549:15:0"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "27588:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:15:0"
									},
									"scope": 1821,
									"src": "27532:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "28406:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "28437:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28445:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "28437:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28455:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "28437:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1637,
																			"src": "28483:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1652,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "28468:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$518_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "28479:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 517,
																		"src": "28468:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28468:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1651,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "28459:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28459:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1642,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "28423:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28430:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "28423:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28423:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1658,
												"nodeType": "Return",
												"src": "28416:75:0"
											}
										]
									},
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "28236:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "28339:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28361:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "28354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1636,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28353:14:0"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "28391:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28391:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28390:15:0"
									},
									"scope": 1821,
									"src": "28330:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "28677:100:0",
										"statements": [
											{
												"id": 1678,
												"nodeType": "UncheckedBlock",
												"src": "28687:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "28730:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1672,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1663,
																				"src": "28749:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1670,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "28737:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1571_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "28742:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1513,
																			"src": "28737:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28737:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28758:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28737:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1668,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1680,
																	1763,
																	1783
																],
																"referencedDeclaration": 1763,
																"src": "28718:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28718:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1667,
														"id": 1677,
														"nodeType": "Return",
														"src": "28711:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "28504:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "28612:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "28624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28623:15:0"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "28662:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28661:15:0"
									},
									"scope": 1821,
									"src": "28603:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "28990:435:0",
										"statements": [
											{
												"assignments": [
													1691
												],
												"declarations": [
													{
														"constant": false,
														"id": 1691,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "29008:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "29000:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"id": 1692,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1683,
													"src": "29021:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29000:26:0"
											},
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "29049:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "29036:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1694,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "29036:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29068:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1699,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "29072:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29068:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "29068:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "29058:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1696,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "29062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29058:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29036:47:0"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1705,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29093:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1707,
														"indexExpression": {
															"hexValue": "30",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29100:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29093:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29105:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "29093:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "29093:15:0"
											},
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1711,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1713,
														"indexExpression": {
															"hexValue": "31",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29125:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29118:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29130:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "29118:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "29118:15:0"
											},
											{
												"body": {
													"id": 1745,
													"nodeType": "Block",
													"src": "29188:95:0",
													"statements": [
														{
															"expression": {
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1731,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "29202:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1733,
																	"indexExpression": {
																		"id": 1732,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "29209:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29202:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1734,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "29214:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1738,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1735,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "29225:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29238:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "29225:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "29214:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "29202:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1740,
															"nodeType": "ExpressionStatement",
															"src": "29202:40:0"
														},
														{
															"expression": {
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1741,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "29256:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29271:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29256:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1744,
															"nodeType": "ExpressionStatement",
															"src": "29256:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1725,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "29176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "29176:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"initializationExpression": {
													"assignments": [
														1718
													],
													"declarations": [
														{
															"constant": false,
															"id": 1718,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "29156:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1746,
															"src": "29148:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1717,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29148:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1724,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1720,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "29164:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29160:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29173:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "29160:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "29148:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "29183:3:0",
														"subExpression": {
															"id": 1728,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "29185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1730,
													"nodeType": "ExpressionStatement",
													"src": "29183:3:0"
												},
												"nodeType": "ForStatement",
												"src": "29143:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "29296:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29310:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29296:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "29292:96:0",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "29313:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1751,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "29363:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1752,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "29370:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1750,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "29334:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29334:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1754,
															"nodeType": "RevertStatement",
															"src": "29327:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1759,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29411:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "29404:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1757,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "29404:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29404:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1761,
												"nodeType": "Return",
												"src": "29397:21:0"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "28783:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "28909:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28929:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "28921:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "28944:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "28936:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28920:31:0"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "28975:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28975:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28974:15:0"
									},
									"scope": 1821,
									"src": "28900:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "29657:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1776,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "29702:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29694:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1774,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "29694:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29694:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29686:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29686:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29686:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1779,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "29710:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1771,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1680,
															1763,
															1783
														],
														"referencedDeclaration": 1763,
														"src": "29674:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29674:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1781,
												"nodeType": "Return",
												"src": "29667:58:0"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "29431:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "29593:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "29613:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "29605:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29604:14:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "29642:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29641:15:0"
									},
									"scope": 1821,
									"src": "29584:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "29887:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1795,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1786,
																		"src": "29910:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29904:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1793,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29904:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29904:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29913:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29904:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1800,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "29929:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29923:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1798,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29923:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29923:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29932:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29923:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29904:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1807,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "29958:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29952:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "29952:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29952:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1804,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "29942:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29942:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1813,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "29981:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29975:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1811,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "29975:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29975:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1810,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "29965:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29965:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "29942:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29904:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1792,
												"id": 1818,
												"nodeType": "Return",
												"src": "29897:87:0"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "29738:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "29818:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29838:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29824:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29824:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29855:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29841:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1787,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29823:34:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29881:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29880:6:0"
									},
									"scope": 1821,
									"src": "29809:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "27146:2847:0",
							"usedErrors": [
								1586
							],
							"usedEvents": []
						},
						{
							"id": 1822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30161:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1823,
								"nodeType": "StructuredDocumentation",
								"src": "30188:330:0",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 1892,
							"linearizedBaseContracts": [
								1892
							],
							"name": "MessageHashUtils",
							"nameLocation": "30527:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "31312:368:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "31374:300:0",
													"nodeType": "YulBlock",
													"src": "31374:300:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31395:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31395:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "31401:34:0",
																		"nodeType": "YulLiteral",
																		"src": "31401:34:0",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31388:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31388:6:0"
																},
																"nativeSrc": "31388:48:0",
																"nodeType": "YulFunctionCall",
																"src": "31388:48:0"
															},
															"nativeSrc": "31388:48:0",
															"nodeType": "YulExpressionStatement",
															"src": "31388:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31497:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31497:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "31503:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "31503:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31490:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31490:6:0"
																},
																"nativeSrc": "31490:25:0",
																"nodeType": "YulFunctionCall",
																"src": "31490:25:0"
															},
															"nativeSrc": "31490:25:0",
															"nodeType": "YulExpressionStatement",
															"src": "31490:25:0"
														},
														{
															"nativeSrc": "31569:31:0",
															"nodeType": "YulAssignment",
															"src": "31569:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31589:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31589:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31595:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31595:4:0",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "31579:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "31579:9:0"
																},
																"nativeSrc": "31579:21:0",
																"nodeType": "YulFunctionCall",
																"src": "31579:21:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "31569:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31569:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1829,
														"isOffset": false,
														"isSlot": false,
														"src": "31569:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1826,
														"isOffset": false,
														"isSlot": false,
														"src": "31503:11:0",
														"valueSize": 1
													}
												],
												"id": 1831,
												"nodeType": "InlineAssembly",
												"src": "31365:309:0"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "30550:665:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "31229:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "31260:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "31252:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31251:21:0"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "31304:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "31296:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31295:16:0"
									},
									"scope": 1892,
									"src": "31220:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "32232:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32284:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1850,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1836,
																						"src": "32341:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1851,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "32349:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "32341:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1848,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "32324:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1821_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "32332:8:0",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1634,
																				"src": "32324:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32324:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32318:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1846,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "32318:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32318:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 1854,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "32359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32271:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1842,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "32271:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32277:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "32271:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32271:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1841,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "32261:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32261:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1857,
												"nodeType": "Return",
												"src": "32242:126:0"
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "31686:455:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "32155:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "32191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "32178:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32178:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32177:22:0"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "32223:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32222:9:0"
									},
									"scope": 1892,
									"src": "32146:229:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "32829:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32873:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1873,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "32885:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1874,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "32896:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1870,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "32856:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "32860:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "32856:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32856:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1869,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "32846:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32846:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1877,
												"nodeType": "Return",
												"src": "32839:63:0"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "32381:332:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "32727:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "32767:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32759:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "32791:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32778:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32778:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32758:38:0"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32819:9:0"
									},
									"scope": 1892,
									"src": "32718:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "33460:292:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "33522:224:0",
													"nodeType": "YulBlock",
													"src": "33522:224:0",
													"statements": [
														{
															"nativeSrc": "33536:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "33536:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33553:4:0",
																		"nodeType": "YulLiteral",
																		"src": "33553:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "33547:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "33547:5:0"
																},
																"nativeSrc": "33547:11:0",
																"nodeType": "YulFunctionCall",
																"src": "33547:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "33540:3:0",
																	"nodeType": "YulTypedName",
																	"src": "33540:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "33578:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33578:3:0"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "33583:10:0",
																		"nodeType": "YulLiteral",
																		"src": "33583:10:0",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33571:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33571:6:0"
																},
																"nativeSrc": "33571:23:0",
																"nodeType": "YulFunctionCall",
																"src": "33571:23:0"
															},
															"nativeSrc": "33571:23:0",
															"nodeType": "YulExpressionStatement",
															"src": "33571:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "33618:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "33618:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33623:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33623:4:0",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33614:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33614:3:0"
																		},
																		"nativeSrc": "33614:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33614:14:0"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "33630:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "33630:15:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33607:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33607:6:0"
																},
																"nativeSrc": "33607:39:0",
																"nodeType": "YulFunctionCall",
																"src": "33607:39:0"
															},
															"nativeSrc": "33607:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "33607:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "33670:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "33670:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33675:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33675:4:0",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33666:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33666:3:0"
																		},
																		"nativeSrc": "33666:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33666:14:0"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "33682:10:0",
																		"nodeType": "YulIdentifier",
																		"src": "33682:10:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33659:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33659:6:0"
																},
																"nativeSrc": "33659:34:0",
																"nodeType": "YulFunctionCall",
																"src": "33659:34:0"
															},
															"nativeSrc": "33659:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "33659:34:0"
														},
														{
															"nativeSrc": "33706:30:0",
															"nodeType": "YulAssignment",
															"src": "33706:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "33726:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33726:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33731:4:0",
																		"nodeType": "YulLiteral",
																		"src": "33731:4:0",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "33716:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "33716:9:0"
																},
																"nativeSrc": "33716:20:0",
																"nodeType": "YulFunctionCall",
																"src": "33716:20:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "33706:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33706:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1887,
														"isOffset": false,
														"isSlot": false,
														"src": "33706:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1882,
														"isOffset": false,
														"isSlot": false,
														"src": "33630:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1884,
														"isOffset": false,
														"isSlot": false,
														"src": "33682:10:0",
														"valueSize": 1
													}
												],
												"id": 1889,
												"nodeType": "InlineAssembly",
												"src": "33513:233:0"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "32915:431:0",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "33360:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "33384:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33376:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "33409:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33401:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33375:45:0"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "33452:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33443:16:0"
									},
									"scope": 1892,
									"src": "33351:401:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "30519:3235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33902:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1895,
										"name": "IERC5267",
										"nameLocations": [
											"35603:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "35603:8:0"
									},
									"id": 1896,
									"nodeType": "InheritanceSpecifier",
									"src": "35603:8:0"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1894,
								"nodeType": "StructuredDocumentation",
								"src": "33931:1643:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2111,
							"linearizedBaseContracts": [
								2111,
								91
							],
							"name": "EIP712",
							"nameLocation": "35593:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1898,
									"libraryName": {
										"id": 1897,
										"name": "ShortStrings",
										"nameLocations": [
											"35624:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 414,
										"src": "35624:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "35618:25:0"
								},
								{
									"constant": true,
									"id": 1903,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "35674:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "35649:140:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "35649:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1901,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "35704:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1900,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "35694:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1902,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "35694:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1905,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "36014:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "35988:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1904,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "35988:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1907,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "36068:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36042:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "36042:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1909,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "36114:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36088:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "36088:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1911,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "36158:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36132:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1910,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36132:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1913,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "36201:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36175:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1912,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36175:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1916,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "36252:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36222:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1915,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1914,
											"name": "ShortString",
											"nameLocations": [
												"36222:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 203,
											"src": "36222:11:0"
										},
										"referencedDeclaration": 203,
										"src": "36222:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1919,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "36293:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36263:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1918,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1917,
											"name": "ShortString",
											"nameLocations": [
												"36263:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 203,
											"src": "36263:11:0"
										},
										"referencedDeclaration": 203,
										"src": "36263:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1921,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "36322:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36307:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1920,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36307:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1923,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "36356:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36341:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1922,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36341:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "36998:376:0",
										"statements": [
											{
												"expression": {
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1931,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "37008:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1934,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "37047:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1932,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "37016:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37021:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "37016:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37016:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"src": "37008:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"id": 1937,
												"nodeType": "ExpressionStatement",
												"src": "37008:53:0"
											},
											{
												"expression": {
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1938,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "37071:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1941,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "37116:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1939,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "37082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37090:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "37082:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37082:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"src": "37071:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "37071:62:0"
											},
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1945,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "37143:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1949,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "37173:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37167:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1947,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "37167:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37167:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1946,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "37157:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37157:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37143:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "37143:36:0"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "37189:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1958,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1928,
																		"src": "37222:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37216:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1956,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "37216:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37216:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1955,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "37206:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37206:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37189:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "37189:42:0"
											},
											{
												"expression": {
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1963,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "37242:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1964,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "37259:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37265:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "37259:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37242:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "37242:30:0"
											},
											{
												"expression": {
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1968,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "37282:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1969,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "37307:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37307:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37282:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "37282:48:0"
											},
											{
												"expression": {
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1973,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "37340:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1976,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "37362:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2111",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2111",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1974,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37354:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37354:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37340:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "37340:27:0"
											}
										]
									},
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "36379:559:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1981,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "36969:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "36955:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36955:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "36989:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "36975:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36975:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36954:43:0"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36998:0:0"
									},
									"scope": 2111,
									"src": "36943:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "37522:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1989,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "37544:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37536:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37536:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37536:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1991,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "37553:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "37536:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1993,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "37568:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37574:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "37568:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1995,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "37585:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "37568:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "37536:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2004,
													"nodeType": "Block",
													"src": "37661:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2001,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "37682:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37682:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1986,
															"id": 2003,
															"nodeType": "Return",
															"src": "37675:30:0"
														}
													]
												},
												"id": 2005,
												"nodeType": "IfStatement",
												"src": "37532:184:0",
												"trueBody": {
													"id": 2000,
													"nodeType": "Block",
													"src": "37601:54:0",
													"statements": [
														{
															"expression": {
																"id": 1998,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "37622:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1986,
															"id": 1999,
															"nodeType": "Return",
															"src": "37615:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "37380:75:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "37469:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37487:2:0"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "37513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37512:9:0"
									},
									"scope": 2111,
									"src": "37460:262:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "37792:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2015,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "37830:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2016,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "37841:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2017,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "37854:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2018,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "37870:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "37876:7:0",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "37870:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2022,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37893:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2111",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2111",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37885:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2020,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37885:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37885:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2013,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "37819:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "37823:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "37819:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37819:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2012,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "37809:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37809:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2026,
												"nodeType": "Return",
												"src": "37802:98:0"
											}
										]
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "37737:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37758:2:0"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "37783:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37782:9:0"
									},
									"scope": 2111,
									"src": "37728:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "38618:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2038,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "38668:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38668:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2040,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "38690:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2036,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "38635:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$1892_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38652:15:0",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1891,
														"src": "38635:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38635:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2035,
												"id": 2042,
												"nodeType": "Return",
												"src": "38628:73:0"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "37913:614:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "38541:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "38566:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "38558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2030,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38557:20:0"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "38609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38608:9:0"
									},
									"scope": 2111,
									"src": "38532:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										90
									],
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "39087:229:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39118:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2064,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "39148:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39148:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2066,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "39175:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39175:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2068,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "39205:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "39211:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "39205:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "39240:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39232:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39232:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39267:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39259:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2074,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "39259:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39259:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "39283:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2078,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "39287:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2079,
																	"nodeType": "ArrayTypeName",
																	"src": "39287:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39283:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2083,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "39104:205:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2084,
												"nodeType": "Return",
												"src": "39097:212:0"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "38714:40:0",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "38768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38780:2:0"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "38864:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2047,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "38857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "38898:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38884:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2049,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "38930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38916:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2051,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38916:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "38959:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38951:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "38988:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38980:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "39027:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39019:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2057,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "39062:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39045:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2059,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2060,
													"nodeType": "ArrayTypeName",
													"src": "39045:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38843:239:0"
									},
									"scope": 2111,
									"src": "38759:557:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "39697:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2094,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "39741:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2092,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "39714:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39720:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 382,
														"src": "39714:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39714:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2096,
												"nodeType": "Return",
												"src": "39707:48:0"
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "39322:256:0",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "39645:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39656:2:0"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "39682:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2089,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39682:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39681:15:0"
									},
									"scope": 2111,
									"src": "39636:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "40152:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "40199:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2104,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "40169:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40178:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 382,
														"src": "40169:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40169:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2108,
												"nodeType": "Return",
												"src": "40162:54:0"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "39768:262:0",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "40097:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40111:2:0"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "40137:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40136:15:0"
									},
									"scope": 2111,
									"src": "40088:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "35575:4650:0",
							"usedErrors": [
								211,
								213
							],
							"usedEvents": [
								71
							]
						},
						{
							"id": 2112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "40371:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2113,
								"nodeType": "StructuredDocumentation",
								"src": "40397:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2458,
							"linearizedBaseContracts": [
								2458
							],
							"name": "ECDSA",
							"nameLocation": "40611:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 2118,
									"members": [
										{
											"id": 2114,
											"name": "NoError",
											"nameLocation": "40651:7:0",
											"nodeType": "EnumValue",
											"src": "40651:7:0"
										},
										{
											"id": 2115,
											"name": "InvalidSignature",
											"nameLocation": "40668:16:0",
											"nodeType": "EnumValue",
											"src": "40668:16:0"
										},
										{
											"id": 2116,
											"name": "InvalidSignatureLength",
											"nameLocation": "40694:22:0",
											"nodeType": "EnumValue",
											"src": "40694:22:0"
										},
										{
											"id": 2117,
											"name": "InvalidSignatureS",
											"nameLocation": "40726:17:0",
											"nodeType": "EnumValue",
											"src": "40726:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "40628:12:0",
									"nodeType": "EnumDefinition",
									"src": "40623:126:0"
								},
								{
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "40755:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 2121,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "40829:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40850:2:0"
									},
									"src": "40823:30:0"
								},
								{
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "40859:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 2126,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "40930:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "40966:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "40958:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40957:16:0"
									},
									"src": "40924:50:0"
								},
								{
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "40980:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 2131,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "41076:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "41107:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "41099:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41098:11:0"
									},
									"src": "41070:40:0"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "42501:653:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2146,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "42515:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42525:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "42515:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42535:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "42515:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2181,
													"nodeType": "Block",
													"src": "43040:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43070:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43062:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43062:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43062:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2172,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "43074:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "43087:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2116,
																		"src": "43074:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2176,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2136,
																					"src": "43119:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "43129:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "43119:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43111:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2174,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "43111:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43111:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43061:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2145,
															"id": 2180,
															"nodeType": "Return",
															"src": "43054:83:0"
														}
													]
												},
												"id": 2182,
												"nodeType": "IfStatement",
												"src": "42511:637:0",
												"trueBody": {
													"id": 2167,
													"nodeType": "Block",
													"src": "42539:495:0",
													"statements": [
														{
															"assignments": [
																2151
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2151,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "42561:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42553:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2150,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42553:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2152,
															"nodeType": "VariableDeclarationStatement",
															"src": "42553:9:0"
														},
														{
															"assignments": [
																2154
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2154,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "42584:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42576:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2153,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42576:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2155,
															"nodeType": "VariableDeclarationStatement",
															"src": "42576:9:0"
														},
														{
															"assignments": [
																2157
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2157,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "42605:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42599:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2156,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "42599:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2158,
															"nodeType": "VariableDeclarationStatement",
															"src": "42599:7:0"
														},
														{
															"AST": {
																"nativeSrc": "42807:171:0",
																"nodeType": "YulBlock",
																"src": "42807:171:0",
																"statements": [
																	{
																		"nativeSrc": "42825:32:0",
																		"nodeType": "YulAssignment",
																		"src": "42825:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "42840:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "42840:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "42851:4:0",
																							"nodeType": "YulLiteral",
																							"src": "42851:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "42836:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "42836:3:0"
																					},
																					"nativeSrc": "42836:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42836:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "42830:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42830:5:0"
																			},
																			"nativeSrc": "42830:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42830:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "42825:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42825:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "42874:32:0",
																		"nodeType": "YulAssignment",
																		"src": "42874:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "42889:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "42889:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "42900:4:0",
																							"nodeType": "YulLiteral",
																							"src": "42900:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "42885:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "42885:3:0"
																					},
																					"nativeSrc": "42885:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42885:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "42879:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42879:5:0"
																			},
																			"nativeSrc": "42879:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42879:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "42874:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42874:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "42923:41:0",
																		"nodeType": "YulAssignment",
																		"src": "42923:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "42933:1:0",
																					"nodeType": "YulLiteral",
																					"src": "42933:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "42946:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "42946:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "42957:4:0",
																									"nodeType": "YulLiteral",
																									"src": "42957:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "42942:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "42942:3:0"
																							},
																							"nativeSrc": "42942:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "42942:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "42936:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "42936:5:0"
																					},
																					"nativeSrc": "42936:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42936:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "42928:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "42928:4:0"
																			},
																			"nativeSrc": "42928:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42928:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "42923:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42923:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2151,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42825:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2154,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42874:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42840:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42889:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42946:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2157,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42923:1:0",
																	"valueSize": 1
																}
															],
															"id": 2159,
															"nodeType": "InlineAssembly",
															"src": "42798:180:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2161,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "43009:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2162,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "43015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2163,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "43018:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2164,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "43021:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2160,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2184,
																		2264,
																		2372
																	],
																	"referencedDeclaration": 2372,
																	"src": "42998:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42998:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2145,
															"id": 2166,
															"nodeType": "Return",
															"src": "42991:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "41116:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "42397:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "42416:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "42435:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42422:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42407:38:0"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42469:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42478:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2140,
														"name": "RecoverError",
														"nameLocations": [
															"42478:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "42478:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "42478:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42492:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42468:32:0"
									},
									"scope": 2458,
									"src": "42388:766:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "44048:168:0",
										"statements": [
											{
												"assignments": [
													2195,
													2198,
													2200
												],
												"declarations": [
													{
														"constant": false,
														"id": 2195,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "44067:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44059:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2194,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44059:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "44091:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44078:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2197,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2196,
																"name": "RecoverError",
																"nameLocations": [
																	"44078:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "44078:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "44078:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2200,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "44106:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44098:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2199,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "44098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2205,
												"initialValue": {
													"arguments": [
														{
															"id": 2202,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "44129:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2203,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "44135:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2201,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2184,
														"src": "44118:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44118:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44058:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2207,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "44167:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2208,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "44174:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2206,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "44155:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44155:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "44155:28:0"
											},
											{
												"expression": {
													"id": 2211,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2195,
													"src": "44200:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2212,
												"nodeType": "Return",
												"src": "44193:16:0"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "43160:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "43970:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "43986:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "43978:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "43978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "44005:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "43992:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43977:38:0"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44039:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44038:9:0"
									},
									"scope": 2458,
									"src": "43961:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "44544:342:0",
										"statements": [
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "44554:326:0",
												"statements": [
													{
														"assignments": [
															2232
														],
														"declarations": [
															{
																"constant": false,
																"id": 2232,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "44586:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "44578:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 2231,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "44578:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2239,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "44590:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44603:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44595:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2234,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "44595:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44595:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "44590:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "44578:92:0"
													},
													{
														"assignments": [
															2241
														],
														"declarations": [
															{
																"constant": false,
																"id": 2241,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "44787:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "44781:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 2240,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "44781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2254,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2246,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2221,
																							"src": "44806:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2245,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "44798:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2244,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "44798:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "44798:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "44813:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "44798:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2250,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "44797:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44820:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "44797:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44791:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2242,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "44791:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44791:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "44781:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2256,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "44855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2257,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "44861:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2258,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "44864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2259,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "44867:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2255,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2184,
																	2264,
																	2372
																],
																"referencedDeclaration": 2372,
																"src": "44844:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44844:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 2230,
														"id": 2261,
														"nodeType": "Return",
														"src": "44837:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "44222:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "44441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "44460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "44474:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44466:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "44485:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44477:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44451:37:0"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44512:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44521:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2225,
														"name": "RecoverError",
														"nameLocations": [
															"44521:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "44521:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "44521:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44535:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44511:32:0"
									},
									"scope": 2458,
									"src": "44432:454:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "45099:164:0",
										"statements": [
											{
												"assignments": [
													2277,
													2280,
													2282
												],
												"declarations": [
													{
														"constant": false,
														"id": 2277,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "45118:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45110:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2276,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45110:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2280,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "45142:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45129:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2278,
																"name": "RecoverError",
																"nameLocations": [
																	"45129:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "45129:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "45129:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "45157:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45149:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2281,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "45149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"arguments": [
														{
															"id": 2284,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "45180:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2285,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "45186:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2286,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "45189:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2283,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2264,
														"src": "45169:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45169:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45109:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2290,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "45214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2291,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "45221:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2289,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "45202:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45202:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "45202:28:0"
											},
											{
												"expression": {
													"id": 2294,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2277,
													"src": "45247:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2275,
												"id": 2295,
												"nodeType": "Return",
												"src": "45240:16:0"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "44892:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "45022:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "45038:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45030:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "45052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "45063:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45055:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45029:37:0"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45089:9:0"
									},
									"scope": 2458,
									"src": "45013:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2371,
										"nodeType": "Block",
										"src": "45557:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2318,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "46453:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2316,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46445:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46445:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46458:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "46445:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "46441:164:0",
												"trueBody": {
													"id": 2331,
													"nodeType": "Block",
													"src": "46526:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46556:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46548:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2322,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46548:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46548:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2326,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "46560:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "46573:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2117,
																		"src": "46560:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2328,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2306,
																		"src": "46592:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46547:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2315,
															"id": 2330,
															"nodeType": "Return",
															"src": "46540:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													2334
												],
												"declarations": [
													{
														"constant": false,
														"id": 2334,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "46707:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2371,
														"src": "46699:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2333,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46699:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2341,
												"initialValue": {
													"arguments": [
														{
															"id": 2336,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "46726:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2337,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "46732:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2338,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "46735:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2339,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "46738:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2335,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "46716:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46716:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46699:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2342,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "46754:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2343,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46764:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46764:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46754:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2361,
												"nodeType": "IfStatement",
												"src": "46750:113:0",
												"trueBody": {
													"id": 2360,
													"nodeType": "Block",
													"src": "46776:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46806:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46798:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46798:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46798:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2352,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "46810:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "46823:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2115,
																		"src": "46810:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46849:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46841:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2354,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "46841:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46841:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46797:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2315,
															"id": 2359,
															"nodeType": "Return",
															"src": "46790:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2362,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "46881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2363,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "46889:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "46902:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2114,
															"src": "46889:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46919:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2365,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "46911:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46911:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2369,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "46880:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2315,
												"id": 2370,
												"nodeType": "Return",
												"src": "46873:49:0"
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "45269:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "45408:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "45436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "45456:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45450:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2301,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "45450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "45475:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45467:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "45494:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45486:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45418:83:0"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2310,
														"name": "RecoverError",
														"nameLocations": [
															"45534:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "45534:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "45534:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45524:32:0"
									},
									"scope": 2458,
									"src": "45399:1530:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "47156:166:0",
										"statements": [
											{
												"assignments": [
													2387,
													2390,
													2392
												],
												"declarations": [
													{
														"constant": false,
														"id": 2387,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "47175:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47167:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2386,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47167:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "47199:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47186:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2389,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2388,
																"name": "RecoverError",
																"nameLocations": [
																	"47186:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "47186:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "47186:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2392,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "47214:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47206:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2391,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "47206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2399,
												"initialValue": {
													"arguments": [
														{
															"id": 2394,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "47237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2395,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "47243:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2396,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "47246:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2397,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "47249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2393,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2372,
														"src": "47226:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47226:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47166:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2401,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "47273:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2402,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "47280:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2400,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "47261:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47261:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "47261:28:0"
											},
											{
												"expression": {
													"id": 2405,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2387,
													"src": "47306:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2385,
												"id": 2406,
												"nodeType": "Return",
												"src": "47299:16:0"
											}
										]
									},
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "46935:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "47071:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "47087:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47079:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "47099:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47093:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2376,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "47093:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "47110:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47102:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "47121:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47113:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47078:45:0"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47147:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47146:9:0"
									},
									"scope": 2458,
									"src": "47062:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "47527:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2417,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "47541:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2418,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "47550:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "47563:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2114,
														"src": "47550:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "47541:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2423,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "47637:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2424,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "47646:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "47659:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2115,
															"src": "47646:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "47637:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "47742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2432,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "47751:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "47764:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2116,
																"src": "47751:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "47742:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2443,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "47876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2118",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2444,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "47885:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "47898:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2117,
																	"src": "47885:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2118",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "47876:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2452,
															"nodeType": "IfStatement",
															"src": "47872:109:0",
															"trueBody": {
																"id": 2451,
																"nodeType": "Block",
																"src": "47917:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2448,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2414,
																					"src": "47961:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2447,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2131,
																				"src": "47938:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "47938:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2450,
																		"nodeType": "RevertStatement",
																		"src": "47931:39:0"
																	}
																]
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "47738:243:0",
														"trueBody": {
															"id": 2442,
															"nodeType": "Block",
															"src": "47788:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2438,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2414,
																						"src": "47845:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "47837:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2436,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "47837:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "47837:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2435,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "47809:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47809:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2441,
																	"nodeType": "RevertStatement",
																	"src": "47802:53:0"
																}
															]
														}
													},
													"id": 2454,
													"nodeType": "IfStatement",
													"src": "47633:348:0",
													"trueBody": {
														"id": 2430,
														"nodeType": "Block",
														"src": "47677:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2427,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "47698:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47698:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2429,
																"nodeType": "RevertStatement",
																"src": "47691:30:0"
															}
														]
													}
												},
												"id": 2455,
												"nodeType": "IfStatement",
												"src": "47537:444:0",
												"trueBody": {
													"id": 2422,
													"nodeType": "Block",
													"src": "47572:55:0",
													"statements": [
														{
															"functionReturnParameters": 2416,
															"id": 2421,
															"nodeType": "Return",
															"src": "47586:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "47328:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "47464:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "47489:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "47476:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2410,
														"name": "RecoverError",
														"nameLocations": [
															"47476:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "47476:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "47476:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "47504:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "47496:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2413,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47475:38:0"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47527:0:0"
									},
									"scope": 2458,
									"src": "47455:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3690,
							"src": "40603:7386:0",
							"usedErrors": [
								2121,
								2126,
								2131
							],
							"usedEvents": []
						},
						{
							"id": 2459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "48157:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2460,
								"nodeType": "StructuredDocumentation",
								"src": "48183:1963:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 2493,
							"linearizedBaseContracts": [
								2493
							],
							"name": "IERC20Permit",
							"nameLocation": "50157:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "50176:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 2478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "51040:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "51064:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51056:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "51087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51112:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51104:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "51135:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51127:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "51159:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51153:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2470,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "51153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "51178:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51170:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "51197:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51189:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51046:158:0"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51213:0:0"
									},
									"scope": 2493,
									"src": "51031:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "51220:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "51528:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "51543:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "51535:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51534:15:0"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "51573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51572:9:0"
									},
									"scope": 2493,
									"src": "51519:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "51588:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 2492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "51783:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51799:2:0"
									},
									"returnParameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "51825:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51824:9:0"
									},
									"scope": 2493,
									"src": "51774:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "50147:1689:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "51983:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2495,
								"nodeType": "StructuredDocumentation",
								"src": "52009:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 2534,
							"linearizedBaseContracts": [
								2534
							],
							"name": "IERC20Errors",
							"nameLocation": "52159:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "52178:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 2504,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "52498:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "52531:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52523:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "52547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "52564:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52556:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52522:49:0"
									},
									"src": "52492:80:0"
								},
								{
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "52578:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 2509,
									"name": "ERC20InvalidSender",
									"nameLocation": "52741:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "52768:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "52760:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52759:16:0"
									},
									"src": "52735:41:0"
								},
								{
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "52782:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 2514,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "52952:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "52981:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "52973:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52972:18:0"
									},
									"src": "52946:45:0"
								},
								{
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "52997:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 2523,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "53353:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "53388:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53380:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "53405:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53397:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "53424:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53416:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53379:52:0"
									},
									"src": "53347:85:0"
								},
								{
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "53438:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 2528,
									"name": "ERC20InvalidApprover",
									"nameLocation": "53623:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "53652:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "53644:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53643:18:0"
									},
									"src": "53617:45:0"
								},
								{
									"documentation": {
										"id": 2529,
										"nodeType": "StructuredDocumentation",
										"src": "53668:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 2533,
									"name": "ERC20InvalidSpender",
									"nameLocation": "53874:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "53902:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "53894:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53893:17:0"
									},
									"src": "53868:43:0"
								}
							],
							"scope": 3690,
							"src": "52149:1764:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2535,
								"nodeType": "StructuredDocumentation",
								"src": "53915:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 2582,
							"linearizedBaseContracts": [
								2582
							],
							"name": "IERC721Errors",
							"nameLocation": "54067:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "54087:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 2540,
									"name": "ERC721InvalidOwner",
									"nameLocation": "54317:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54344:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "54336:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54335:15:0"
									},
									"src": "54311:40:0"
								},
								{
									"documentation": {
										"id": 2541,
										"nodeType": "StructuredDocumentation",
										"src": "54357:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 2545,
									"name": "ERC721NonexistentToken",
									"nameLocation": "54500:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "54523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54522:17:0"
									},
									"src": "54494:46:0"
								},
								{
									"documentation": {
										"id": 2546,
										"nodeType": "StructuredDocumentation",
										"src": "54546:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 2554,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "54846:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "54875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54866:48:0"
									},
									"src": "54840:75:0"
								},
								{
									"documentation": {
										"id": 2555,
										"nodeType": "StructuredDocumentation",
										"src": "54921:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 2559,
									"name": "ERC721InvalidSender",
									"nameLocation": "55084:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "55112:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "55104:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55103:16:0"
									},
									"src": "55078:42:0"
								},
								{
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "55126:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 2564,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "55296:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "55326:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "55318:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55317:18:0"
									},
									"src": "55290:46:0"
								},
								{
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "55342:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 2571,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "55600:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "55627:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55653:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "55645:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55626:35:0"
									},
									"src": "55594:68:0"
								},
								{
									"documentation": {
										"id": 2572,
										"nodeType": "StructuredDocumentation",
										"src": "55668:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 2576,
									"name": "ERC721InvalidApprover",
									"nameLocation": "55853:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "55883:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "55875:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55874:18:0"
									},
									"src": "55847:46:0"
								},
								{
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "55899:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 2581,
									"name": "ERC721InvalidOperator",
									"nameLocation": "56107:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "56137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "56129:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56128:18:0"
									},
									"src": "56101:46:0"
								}
							],
							"scope": 3690,
							"src": "54057:2092:0",
							"usedErrors": [
								2540,
								2545,
								2554,
								2559,
								2564,
								2571,
								2576,
								2581
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2583,
								"nodeType": "StructuredDocumentation",
								"src": "56151:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 2629,
							"linearizedBaseContracts": [
								2629
							],
							"name": "IERC1155Errors",
							"nameLocation": "56305:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "56326:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 2594,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "56698:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "56733:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56725:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "56749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "56766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56724:66:0"
									},
									"src": "56692:99:0"
								},
								{
									"documentation": {
										"id": 2595,
										"nodeType": "StructuredDocumentation",
										"src": "56797:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 2599,
									"name": "ERC1155InvalidSender",
									"nameLocation": "56960:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "56989:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "56981:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56980:16:0"
									},
									"src": "56954:43:0"
								},
								{
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "57003:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 2604,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "57173:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "57204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "57196:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57195:18:0"
									},
									"src": "57167:47:0"
								},
								{
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "57220:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 2611,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "57487:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "57524:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "57516:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "57542:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "57534:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57515:33:0"
									},
									"src": "57481:68:0"
								},
								{
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "57555:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 2616,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "57740:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "57771:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "57763:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57762:18:0"
									},
									"src": "57734:47:0"
								},
								{
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "57787:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 2621,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "57995:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "58026:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "58018:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58017:18:0"
									},
									"src": "57989:47:0"
								},
								{
									"documentation": {
										"id": 2622,
										"nodeType": "StructuredDocumentation",
										"src": "58042:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 2628,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "58333:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "58367:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "58359:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "58386:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "58378:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58358:41:0"
									},
									"src": "58327:73:0"
								}
							],
							"scope": 3690,
							"src": "56295:2107:0",
							"usedErrors": [
								2594,
								2599,
								2604,
								2611,
								2616,
								2621,
								2628
							],
							"usedEvents": []
						},
						{
							"id": 2630,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "58526:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2631,
								"nodeType": "StructuredDocumentation",
								"src": "58552:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2658,
							"linearizedBaseContracts": [
								2658
							],
							"name": "Context",
							"nameLocation": "59067:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "59143:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2636,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "59160:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59164:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "59160:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2635,
												"id": 2638,
												"nodeType": "Return",
												"src": "59153:17:0"
											}
										]
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "59090:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59100:2:0"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "59134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59133:9:0"
									},
									"scope": 2658,
									"src": "59081:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "59250:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2645,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "59267:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59271:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "59267:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2644,
												"id": 2647,
												"nodeType": "Return",
												"src": "59260:15:0"
											}
										]
									},
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "59192:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59200:2:0"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "59234:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "59234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59233:16:0"
									},
									"scope": 2658,
									"src": "59183:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "59360:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "59377:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2653,
												"id": 2655,
												"nodeType": "Return",
												"src": "59370:8:0"
											}
										]
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "59297:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59317:2:0"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "59351:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59350:9:0"
									},
									"scope": 2658,
									"src": "59288:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "59049:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2659,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59513:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2661,
										"name": "Context",
										"nameLocations": [
											"60057:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2658,
										"src": "60057:7:0"
									},
									"id": 2662,
									"nodeType": "InheritanceSpecifier",
									"src": "60057:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2660,
								"nodeType": "StructuredDocumentation",
								"src": "59540:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2803,
							"linearizedBaseContracts": [
								2803,
								2658
							],
							"name": "Ownable",
							"nameLocation": "60046:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2664,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "60087:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "60071:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2663,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "60071:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2665,
										"nodeType": "StructuredDocumentation",
										"src": "60100:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 2669,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "60196:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "60231:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "60223:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60222:17:0"
									},
									"src": "60190:50:0"
								},
								{
									"documentation": {
										"id": 2670,
										"nodeType": "StructuredDocumentation",
										"src": "60246:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 2674,
									"name": "OwnableInvalidOwner",
									"nameLocation": "60339:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "60367:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "60359:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60358:15:0"
									},
									"src": "60333:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2680,
									"name": "OwnershipTransferred",
									"nameLocation": "60386:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "60423:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "60407:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2678,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "60454:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "60438:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60406:57:0"
									},
									"src": "60380:84:0"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "60624:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2686,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2683,
														"src": "60638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60662:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "60654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "60654:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60654:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60638:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2700,
												"nodeType": "IfStatement",
												"src": "60634:95:0",
												"trueBody": {
													"id": 2699,
													"nodeType": "Block",
													"src": "60666:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "60715:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "60707:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2693,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "60707:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60707:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2692,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2674,
																	"src": "60687:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60687:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2698,
															"nodeType": "RevertStatement",
															"src": "60680:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2702,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "60757:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2701,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "60738:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60738:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "60738:32:0"
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "60470:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 2706,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "60610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "60602:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60601:22:0"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60624:0:0"
									},
									"scope": 2803,
									"src": "60590:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "60886:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2709,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2740,
														"src": "60896:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60896:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2711,
												"nodeType": "ExpressionStatement",
												"src": "60896:13:0"
											},
											{
												"id": 2712,
												"nodeType": "PlaceholderStatement",
												"src": "60919:1:0"
											}
										]
									},
									"documentation": {
										"id": 2707,
										"nodeType": "StructuredDocumentation",
										"src": "60783:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2714,
									"name": "onlyOwner",
									"nameLocation": "60874:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60883:2:0"
									},
									"src": "60865:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "61058:30:0",
										"statements": [
											{
												"expression": {
													"id": 2720,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2664,
													"src": "61075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2719,
												"id": 2721,
												"nodeType": "Return",
												"src": "61068:13:0"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "60933:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "61012:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61017:2:0"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "61049:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61048:9:0"
									},
									"scope": 2803,
									"src": "61003:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "61206:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2727,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "61220:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61220:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2729,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "61231:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61231:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61220:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2738,
												"nodeType": "IfStatement",
												"src": "61216:101:0",
												"trueBody": {
													"id": 2737,
													"nodeType": "Block",
													"src": "61245:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2733,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "61293:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "61293:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2732,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "61266:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61266:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2736,
															"nodeType": "RevertStatement",
															"src": "61259:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2724,
										"nodeType": "StructuredDocumentation",
										"src": "61094:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "61170:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61181:2:0"
									},
									"returnParameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61206:0:0"
									},
									"scope": 2803,
									"src": "61161:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2753,
										"nodeType": "Block",
										"src": "61712:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "61749:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "61741:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "61741:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61741:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2746,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "61722:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61722:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2752,
												"nodeType": "ExpressionStatement",
												"src": "61722:30:0"
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "61329:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2754,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2744,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2743,
												"name": "onlyOwner",
												"nameLocations": [
													"61702:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "61702:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61702:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "61667:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61684:2:0"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61712:0:0"
									},
									"scope": 2803,
									"src": "61658:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "61978:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2762,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "61992:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "62012:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "62004:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2763,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "62004:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "62004:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61992:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2776,
												"nodeType": "IfStatement",
												"src": "61988:91:0",
												"trueBody": {
													"id": 2775,
													"nodeType": "Block",
													"src": "62016:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "62065:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "62057:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2769,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "62057:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "62057:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2768,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2674,
																	"src": "62037:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "62037:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2774,
															"nodeType": "RevertStatement",
															"src": "62030:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2778,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "62107:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2777,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "62088:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62088:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "62088:28:0"
											}
										]
									},
									"documentation": {
										"id": 2755,
										"nodeType": "StructuredDocumentation",
										"src": "61765:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2759,
												"name": "onlyOwner",
												"nameLocations": [
													"61968:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "61968:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61968:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "61917:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "61943:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "61935:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61934:18:0"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61978:0:0"
									},
									"scope": 2803,
									"src": "61908:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "62340:124:0",
										"statements": [
											{
												"assignments": [
													2789
												],
												"declarations": [
													{
														"constant": false,
														"id": 2789,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "62358:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2801,
														"src": "62350:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2788,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "62350:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2791,
												"initialValue": {
													"id": 2790,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2664,
													"src": "62369:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62350:25:0"
											},
											{
												"expression": {
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2792,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2664,
														"src": "62385:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2793,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2785,
														"src": "62394:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "62385:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2795,
												"nodeType": "ExpressionStatement",
												"src": "62385:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2797,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "62438:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2798,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2785,
															"src": "62448:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2796,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "62417:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62417:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2800,
												"nodeType": "EmitStatement",
												"src": "62412:45:0"
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "62129:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "62286:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "62313:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "62305:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62304:18:0"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62340:0:0"
									},
									"scope": 2803,
									"src": "62277:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "60028:2438:0",
							"usedErrors": [
								2669,
								2674
							],
							"usedEvents": [
								2680
							]
						},
						{
							"id": 2804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "62600:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2805,
								"nodeType": "StructuredDocumentation",
								"src": "62626:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2880,
							"linearizedBaseContracts": [
								2880
							],
							"name": "IERC20",
							"nameLocation": "62707:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "62720:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2814,
									"name": "Transfer",
									"nameLocation": "62889:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "62914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "62898:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "62936:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "62920:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "62948:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "62940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62897:57:0"
									},
									"src": "62883:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "62961:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2823,
									"name": "Approval",
									"nameLocation": "63120:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "63145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "63129:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "63168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "63152:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2821,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63185:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "63177:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63128:63:0"
									},
									"src": "63114:78:0"
								},
								{
									"documentation": {
										"id": 2824,
										"nodeType": "StructuredDocumentation",
										"src": "63198:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "63277:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63288:2:0"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "63314:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63313:9:0"
									},
									"scope": 2880,
									"src": "63268:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "63329:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "63414:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "63432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "63424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63423:17:0"
									},
									"returnParameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "63464:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63463:9:0"
									},
									"scope": 2880,
									"src": "63405:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2838,
										"nodeType": "StructuredDocumentation",
										"src": "63479:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "63706:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63723:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "63715:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63735:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "63727:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63714:27:0"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "63760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2844,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "63760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63759:6:0"
									},
									"scope": 2880,
									"src": "63697:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "63772:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "64050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "64068:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "64060:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "64083:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "64075:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64059:32:0"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "64115:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64114:9:0"
									},
									"scope": 2880,
									"src": "64041:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "64130:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "64811:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "64827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "64819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "64844:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "64836:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64818:32:0"
									},
									"returnParameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "64869:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "64869:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64868:6:0"
									},
									"scope": 2880,
									"src": "64802:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2868,
										"nodeType": "StructuredDocumentation",
										"src": "64881:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "65192:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "65213:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65205:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "65227:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65219:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "65239:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65231:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65204:41:0"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65264:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "65264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65263:6:0"
									},
									"scope": 2880,
									"src": "65183:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "62697:2575:0",
							"usedErrors": [],
							"usedEvents": [
								2814,
								2823
							]
						},
						{
							"id": 2881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "65444:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2883,
										"name": "IERC20",
										"nameLocations": [
											"65586:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2880,
										"src": "65586:6:0"
									},
									"id": 2884,
									"nodeType": "InheritanceSpecifier",
									"src": "65586:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2882,
								"nodeType": "StructuredDocumentation",
								"src": "65471:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 2903,
							"linearizedBaseContracts": [
								2903,
								2880
							],
							"name": "IERC20Metadata",
							"nameLocation": "65568:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2885,
										"nodeType": "StructuredDocumentation",
										"src": "65599:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "65667:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65671:2:0"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "65697:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65696:15:0"
									},
									"scope": 2903,
									"src": "65658:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2891,
										"nodeType": "StructuredDocumentation",
										"src": "65718:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "65788:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65794:2:0"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "65820:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65820:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65819:15:0"
									},
									"scope": 2903,
									"src": "65779:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2897,
										"nodeType": "StructuredDocumentation",
										"src": "65841:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "65920:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65928:2:0"
									},
									"returnParameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "65954:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "65954:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65953:7:0"
									},
									"scope": 2903,
									"src": "65911:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "65558:405:0",
							"usedErrors": [],
							"usedEvents": [
								2814,
								2823
							]
						},
						{
							"id": 2904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "66095:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2906,
										"name": "Context",
										"nameLocations": [
											"67205:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2658,
										"src": "67205:7:0"
									},
									"id": 2907,
									"nodeType": "InheritanceSpecifier",
									"src": "67205:7:0"
								},
								{
									"baseName": {
										"id": 2908,
										"name": "IERC20",
										"nameLocations": [
											"67214:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2880,
										"src": "67214:6:0"
									},
									"id": 2909,
									"nodeType": "InheritanceSpecifier",
									"src": "67214:6:0"
								},
								{
									"baseName": {
										"id": 2910,
										"name": "IERC20Metadata",
										"nameLocations": [
											"67222:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2903,
										"src": "67222:14:0"
									},
									"id": 2911,
									"nodeType": "InheritanceSpecifier",
									"src": "67222:14:0"
								},
								{
									"baseName": {
										"id": 2912,
										"name": "IERC20Errors",
										"nameLocations": [
											"67238:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2534,
										"src": "67238:12:0"
									},
									"id": 2913,
									"nodeType": "InheritanceSpecifier",
									"src": "67238:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2905,
								"nodeType": "StructuredDocumentation",
								"src": "66125:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 3409,
							"linearizedBaseContracts": [
								3409,
								2534,
								2903,
								2880,
								2658
							],
							"name": "ERC20",
							"nameLocation": "67196:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2917,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "67301:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67257:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2916,
										"keyName": "account",
										"keyNameLocation": "67273:7:0",
										"keyType": {
											"id": 2914,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "67265:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "67257:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2915,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "67284:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2923,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "67389:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67317:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2922,
										"keyName": "account",
										"keyNameLocation": "67333:7:0",
										"keyType": {
											"id": 2918,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "67325:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "67317:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2921,
											"keyName": "spender",
											"keyNameLocation": "67360:7:0",
											"keyType": {
												"id": 2919,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "67352:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "67344:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2920,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "67371:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2925,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "67423:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67407:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2924,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "67407:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2927,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "67457:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67442:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2926,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "67442:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2929,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "67483:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67468:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2928,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "67468:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "67729:57:0",
										"statements": [
											{
												"expression": {
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2937,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2927,
														"src": "67739:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2938,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "67747:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "67739:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "67739:13:0"
											},
											{
												"expression": {
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2941,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "67762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2942,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "67772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "67762:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2944,
												"nodeType": "ExpressionStatement",
												"src": "67762:17:0"
											}
										]
									},
									"documentation": {
										"id": 2930,
										"nodeType": "StructuredDocumentation",
										"src": "67497:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 2946,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "67699:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "67685:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67685:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "67720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "67706:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67684:44:0"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67729:0:0"
									},
									"scope": 3409,
									"src": "67673:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2890
									],
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "67911:29:0",
										"statements": [
											{
												"expression": {
													"id": 2952,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2927,
													"src": "67928:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2951,
												"id": 2953,
												"nodeType": "Return",
												"src": "67921:12:0"
											}
										]
									},
									"documentation": {
										"id": 2947,
										"nodeType": "StructuredDocumentation",
										"src": "67792:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "67860:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67864:2:0"
									},
									"returnParameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "67896:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67895:15:0"
									},
									"scope": 3409,
									"src": "67851:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2896
									],
									"body": {
										"id": 2963,
										"nodeType": "Block",
										"src": "68115:31:0",
										"statements": [
											{
												"expression": {
													"id": 2961,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2929,
													"src": "68132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2960,
												"id": 2962,
												"nodeType": "Return",
												"src": "68125:14:0"
											}
										]
									},
									"documentation": {
										"id": 2956,
										"nodeType": "StructuredDocumentation",
										"src": "67946:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "68062:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68068:2:0"
									},
									"returnParameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "68100:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68100:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68099:15:0"
									},
									"scope": 3409,
									"src": "68053:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2902
									],
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "68835:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "68852:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 2969,
												"id": 2971,
												"nodeType": "Return",
												"src": "68845:9:0"
											}
										]
									},
									"documentation": {
										"id": 2965,
										"nodeType": "StructuredDocumentation",
										"src": "68152:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "68788:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68796:2:0"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "68828:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2967,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "68828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68827:7:0"
									},
									"scope": 3409,
									"src": "68779:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2829
									],
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "68982:36:0",
										"statements": [
											{
												"expression": {
													"id": 2979,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2925,
													"src": "68999:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2978,
												"id": 2980,
												"nodeType": "Return",
												"src": "68992:19:0"
											}
										]
									},
									"documentation": {
										"id": 2974,
										"nodeType": "StructuredDocumentation",
										"src": "68867:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "68930:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68941:2:0"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "68973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68972:9:0"
									},
									"scope": 3409,
									"src": "68921:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2837
									],
									"body": {
										"id": 2994,
										"nodeType": "Block",
										"src": "69150:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2990,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2917,
														"src": "69167:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2992,
													"indexExpression": {
														"id": 2991,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "69177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "69167:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2989,
												"id": 2993,
												"nodeType": "Return",
												"src": "69160:25:0"
											}
										]
									},
									"documentation": {
										"id": 2983,
										"nodeType": "StructuredDocumentation",
										"src": "69024:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "69085:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "69103:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "69095:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69094:17:0"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "69141:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69140:9:0"
									},
									"scope": 3409,
									"src": "69076:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2847
									],
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "69462:103:0",
										"statements": [
											{
												"assignments": [
													3006
												],
												"declarations": [
													{
														"constant": false,
														"id": 3006,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "69480:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3018,
														"src": "69472:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3005,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "69472:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3009,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3007,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "69488:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69488:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "69472:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3011,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3006,
															"src": "69520:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3012,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "69527:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3013,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "69531:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3010,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "69510:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69510:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3015,
												"nodeType": "ExpressionStatement",
												"src": "69510:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "69554:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3004,
												"id": 3017,
												"nodeType": "Return",
												"src": "69547:11:0"
											}
										]
									},
									"documentation": {
										"id": 2996,
										"nodeType": "StructuredDocumentation",
										"src": "69198:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "69396:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "69413:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "69405:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "69425:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "69417:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69404:27:0"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "69456:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "69456:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69455:6:0"
									},
									"scope": 3409,
									"src": "69387:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2857
									],
									"body": {
										"id": 3035,
										"nodeType": "Block",
										"src": "69712:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3029,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2923,
															"src": "69729:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 3031,
														"indexExpression": {
															"id": 3030,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "69741:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "69729:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3033,
													"indexExpression": {
														"id": 3032,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "69748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "69729:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3028,
												"id": 3034,
												"nodeType": "Return",
												"src": "69722:34:0"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "69571:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 3036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "69632:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "69650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "69642:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "69665:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "69657:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69641:32:0"
									},
									"returnParameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "69703:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69702:9:0"
									},
									"scope": 3409,
									"src": "69623:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2867
									],
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "70149:107:0",
										"statements": [
											{
												"assignments": [
													3047
												],
												"declarations": [
													{
														"constant": false,
														"id": 3047,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "70167:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3059,
														"src": "70159:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3046,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "70159:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3050,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3048,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "70175:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70175:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70159:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3052,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "70206:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3053,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3039,
															"src": "70213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3054,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "70222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3051,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3300,
															3360
														],
														"referencedDeclaration": 3300,
														"src": "70197:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70197:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "70197:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "70245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3045,
												"id": 3058,
												"nodeType": "Return",
												"src": "70238:11:0"
											}
										]
									},
									"documentation": {
										"id": 3037,
										"nodeType": "StructuredDocumentation",
										"src": "69769:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "70079:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "70095:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "70087:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70112:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "70104:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70086:32:0"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "70143:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70142:6:0"
									},
									"scope": 3409,
									"src": "70070:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2879
									],
									"body": {
										"id": 3091,
										"nodeType": "Block",
										"src": "70909:151:0",
										"statements": [
											{
												"assignments": [
													3073
												],
												"declarations": [
													{
														"constant": false,
														"id": 3073,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "70927:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3091,
														"src": "70919:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3072,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "70919:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3076,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3074,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "70937:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70937:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70919:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "70975:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3079,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "70981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3080,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "70990:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3077,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3408,
														"src": "70959:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70959:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3082,
												"nodeType": "ExpressionStatement",
												"src": "70959:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3084,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "71016:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3085,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3065,
															"src": "71022:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "71026:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3083,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "71006:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71006:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3088,
												"nodeType": "ExpressionStatement",
												"src": "71006:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "71049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3071,
												"id": 3090,
												"nodeType": "Return",
												"src": "71042:11:0"
											}
										]
									},
									"documentation": {
										"id": 3061,
										"nodeType": "StructuredDocumentation",
										"src": "70262:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 3092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "70825:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "70846:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "70838:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "70860:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "70852:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70872:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "70864:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70837:41:0"
									},
									"returnParameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "70903:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70902:6:0"
									},
									"scope": 3409,
									"src": "70816:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3138,
										"nodeType": "Block",
										"src": "71502:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3102,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3095,
														"src": "71516:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "71532:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "71524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3103,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "71524:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71524:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "71516:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3116,
												"nodeType": "IfStatement",
												"src": "71512:86:0",
												"trueBody": {
													"id": 3115,
													"nodeType": "Block",
													"src": "71536:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71584:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "71576:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3109,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "71576:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71576:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3108,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "71557:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71557:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3114,
															"nodeType": "RevertStatement",
															"src": "71550:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3117,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3097,
														"src": "71611:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "71625:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "71617:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "71617:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71617:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "71611:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3131,
												"nodeType": "IfStatement",
												"src": "71607:86:0",
												"trueBody": {
													"id": 3130,
													"nodeType": "Block",
													"src": "71629:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71679:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "71671:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3124,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "71671:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71671:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3123,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "71650:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71650:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3129,
															"nodeType": "RevertStatement",
															"src": "71643:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3133,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3095,
															"src": "71710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3134,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "71716:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3135,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3099,
															"src": "71720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3132,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3216,
														"src": "71702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71702:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3137,
												"nodeType": "ExpressionStatement",
												"src": "71702:24:0"
											}
										]
									},
									"documentation": {
										"id": 3093,
										"nodeType": "StructuredDocumentation",
										"src": "71066:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "71442:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "71460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "71452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "71474:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "71466:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "71486:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "71478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71451:41:0"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71502:0:0"
									},
									"scope": 3409,
									"src": "71433:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3215,
										"nodeType": "Block",
										"src": "72123:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3149,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "72137:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3150,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72145:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72145:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72137:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3186,
													"nodeType": "Block",
													"src": "72311:362:0",
													"statements": [
														{
															"assignments": [
																3161
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3161,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "72333:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3186,
																	"src": "72325:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3160,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "72325:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3165,
															"initialValue": {
																"baseExpression": {
																	"id": 3162,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2917,
																	"src": "72347:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3164,
																"indexExpression": {
																	"id": 3163,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3142,
																	"src": "72357:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "72347:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "72325:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3166,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3161,
																	"src": "72380:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "72394:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72380:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3176,
															"nodeType": "IfStatement",
															"src": "72376:115:0",
															"trueBody": {
																"id": 3175,
																"nodeType": "Block",
																"src": "72401:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3170,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3142,
																					"src": "72451:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3171,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3161,
																					"src": "72457:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3172,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3146,
																					"src": "72470:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3169,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2504,
																				"src": "72426:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "72426:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3174,
																		"nodeType": "RevertStatement",
																		"src": "72419:57:0"
																	}
																]
															}
														},
														{
															"id": 3185,
															"nodeType": "UncheckedBlock",
															"src": "72504:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3177,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2917,
																				"src": "72611:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3179,
																			"indexExpression": {
																				"id": 3178,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3142,
																				"src": "72621:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "72611:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3180,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3161,
																				"src": "72629:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3181,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3146,
																				"src": "72643:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "72629:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "72611:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3184,
																	"nodeType": "ExpressionStatement",
																	"src": "72611:37:0"
																}
															]
														}
													]
												},
												"id": 3187,
												"nodeType": "IfStatement",
												"src": "72133:540:0",
												"trueBody": {
													"id": 3159,
													"nodeType": "Block",
													"src": "72157:148:0",
													"statements": [
														{
															"expression": {
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3155,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2925,
																	"src": "72273:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3156,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "72289:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72273:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3158,
															"nodeType": "ExpressionStatement",
															"src": "72273:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3188,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3144,
														"src": "72687:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72701:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3189,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72693:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72693:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72687:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3207,
													"nodeType": "Block",
													"src": "72902:206:0",
													"statements": [
														{
															"id": 3206,
															"nodeType": "UncheckedBlock",
															"src": "72916:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3200,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2917,
																				"src": "73061:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3202,
																			"indexExpression": {
																				"id": 3201,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3144,
																				"src": "73071:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "73061:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 3203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "73078:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "73061:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3205,
																	"nodeType": "ExpressionStatement",
																	"src": "73061:22:0"
																}
															]
														}
													]
												},
												"id": 3208,
												"nodeType": "IfStatement",
												"src": "72683:425:0",
												"trueBody": {
													"id": 3199,
													"nodeType": "Block",
													"src": "72705:191:0",
													"statements": [
														{
															"id": 3198,
															"nodeType": "UncheckedBlock",
															"src": "72719:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3194,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "72850:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 3195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "72866:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "72850:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3197,
																	"nodeType": "ExpressionStatement",
																	"src": "72850:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3210,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "73132:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3211,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3144,
															"src": "73138:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3212,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3146,
															"src": "73142:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3209,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "73123:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73123:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3214,
												"nodeType": "EmitStatement",
												"src": "73118:30:0"
											}
										]
									},
									"documentation": {
										"id": 3140,
										"nodeType": "StructuredDocumentation",
										"src": "71739:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 3216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "72057:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "72073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "72065:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "72087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "72079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "72099:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "72091:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72064:41:0"
									},
									"returnParameters": {
										"id": 3148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72123:0:0"
									},
									"scope": 3409,
									"src": "72048:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3248,
										"nodeType": "Block",
										"src": "73554:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3224,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3219,
														"src": "73568:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "73587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "73579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3225,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "73579:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "73579:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "73568:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3238,
												"nodeType": "IfStatement",
												"src": "73564:91:0",
												"trueBody": {
													"id": 3237,
													"nodeType": "Block",
													"src": "73591:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "73641:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "73633:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3231,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "73633:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "73633:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3230,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "73612:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "73612:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3236,
															"nodeType": "RevertStatement",
															"src": "73605:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "73680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "73672:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3240,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "73672:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73672:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3244,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "73684:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3245,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "73693:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3239,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3216,
														"src": "73664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73664:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3247,
												"nodeType": "ExpressionStatement",
												"src": "73664:35:0"
											}
										]
									},
									"documentation": {
										"id": 3217,
										"nodeType": "StructuredDocumentation",
										"src": "73161:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "73507:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "73521:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "73513:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "73538:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "73530:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73512:32:0"
									},
									"returnParameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73554:0:0"
									},
									"scope": 3409,
									"src": "73498:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3281,
										"nodeType": "Block",
										"src": "74080:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3257,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3252,
														"src": "74094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "74113:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "74105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "74105:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "74105:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "74094:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3271,
												"nodeType": "IfStatement",
												"src": "74090:89:0",
												"trueBody": {
													"id": 3270,
													"nodeType": "Block",
													"src": "74117:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "74165:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "74157:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3264,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "74157:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "74157:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3263,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "74138:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "74138:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3269,
															"nodeType": "RevertStatement",
															"src": "74131:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3273,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "74196:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "74213:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "74205:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "74205:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74205:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3278,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3254,
															"src": "74217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3272,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3216,
														"src": "74188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74188:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "74188:35:0"
											}
										]
									},
									"documentation": {
										"id": 3250,
										"nodeType": "StructuredDocumentation",
										"src": "73712:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 3282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "74033:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "74047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "74039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "74064:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "74056:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74038:32:0"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74080:0:0"
									},
									"scope": 3409,
									"src": "74024:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3299,
										"nodeType": "Block",
										"src": "74840:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3293,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3285,
															"src": "74859:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3294,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3287,
															"src": "74866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3289,
															"src": "74875:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "74882:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3292,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3300,
															3360
														],
														"referencedDeclaration": 3360,
														"src": "74850:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74850:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3298,
												"nodeType": "ExpressionStatement",
												"src": "74850:37:0"
											}
										]
									},
									"documentation": {
										"id": 3283,
										"nodeType": "StructuredDocumentation",
										"src": "74236:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 3300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "74775:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "74792:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "74784:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "74807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "74799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "74824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "74816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74783:47:0"
									},
									"returnParameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74840:0:0"
									},
									"scope": 3409,
									"src": "74766:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3359,
										"nodeType": "Block",
										"src": "75824:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3312,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3303,
														"src": "75838:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75855:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "75847:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3313,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "75847:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75847:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "75838:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3326,
												"nodeType": "IfStatement",
												"src": "75834:89:0",
												"trueBody": {
													"id": 3325,
													"nodeType": "Block",
													"src": "75859:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "75909:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "75901:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3319,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "75901:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "75901:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3318,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "75880:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75880:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3324,
															"nodeType": "RevertStatement",
															"src": "75873:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3327,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3305,
														"src": "75936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75955:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "75947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "75947:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75947:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "75936:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3341,
												"nodeType": "IfStatement",
												"src": "75932:90:0",
												"trueBody": {
													"id": 3340,
													"nodeType": "Block",
													"src": "75959:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "76008:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "76000:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "76000:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76000:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3333,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "75980:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75980:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3339,
															"nodeType": "RevertStatement",
															"src": "75973:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3342,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "76031:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 3345,
															"indexExpression": {
																"id": 3343,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3303,
																"src": "76043:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "76031:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3346,
														"indexExpression": {
															"id": 3344,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3305,
															"src": "76050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "76031:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3347,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3307,
														"src": "76061:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76031:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3349,
												"nodeType": "ExpressionStatement",
												"src": "76031:35:0"
											},
											{
												"condition": {
													"id": 3350,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3309,
													"src": "76080:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3358,
												"nodeType": "IfStatement",
												"src": "76076:76:0",
												"trueBody": {
													"id": 3357,
													"nodeType": "Block",
													"src": "76091:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3352,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3303,
																		"src": "76119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3353,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3305,
																		"src": "76126:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3354,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3307,
																		"src": "76135:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3351,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2823,
																	"src": "76110:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76110:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3356,
															"nodeType": "EmitStatement",
															"src": "76105:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3301,
										"nodeType": "StructuredDocumentation",
										"src": "74900:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 3360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "75735:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "75752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "75767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75759:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "75784:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75776:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "75776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "75796:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75791:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "75791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75743:63:0"
									},
									"returnParameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75824:0:0"
									},
									"scope": 3409,
									"src": "75726:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "76529:388:0",
										"statements": [
											{
												"assignments": [
													3371
												],
												"declarations": [
													{
														"constant": false,
														"id": 3371,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "76547:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 3407,
														"src": "76539:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3376,
												"initialValue": {
													"arguments": [
														{
															"id": 3373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "76576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3374,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "76583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3372,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "76566:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 3375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76566:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76539:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3377,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3371,
														"src": "76605:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "76630:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 3379,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "76630:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 3378,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "76625:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "76625:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 3382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "76639:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "76625:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76605:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3406,
												"nodeType": "IfStatement",
												"src": "76601:310:0",
												"trueBody": {
													"id": 3405,
													"nodeType": "Block",
													"src": "76644:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3384,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "76662:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3367,
																	"src": "76681:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "76662:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3394,
															"nodeType": "IfStatement",
															"src": "76658:130:0",
															"trueBody": {
																"id": 3393,
																"nodeType": "Block",
																"src": "76688:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3388,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3365,
																					"src": "76740:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3389,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3371,
																					"src": "76749:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3390,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3367,
																					"src": "76767:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3387,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2523,
																				"src": "76713:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "76713:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3392,
																		"nodeType": "RevertStatement",
																		"src": "76706:67:0"
																	}
																]
															}
														},
														{
															"id": 3404,
															"nodeType": "UncheckedBlock",
															"src": "76801:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 3396,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3363,
																				"src": "76838:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3397,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3365,
																				"src": "76845:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3398,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3371,
																					"src": "76854:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 3399,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3367,
																					"src": "76873:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "76854:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 3401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "76880:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 3395,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				3300,
																				3360
																			],
																			"referencedDeclaration": 3360,
																			"src": "76829:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 3402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76829:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3403,
																	"nodeType": "ExpressionStatement",
																	"src": "76829:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3361,
										"nodeType": "StructuredDocumentation",
										"src": "76164:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "76449:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3363,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "76488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "76505:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76497:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76464:47:0"
									},
									"returnParameters": {
										"id": 3369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76529:0:0"
									},
									"scope": 3409,
									"src": "76440:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "67178:9741:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": [
								2814,
								2823
							]
						},
						{
							"id": 3410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "77085:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3412,
										"name": "ERC20",
										"nameLocations": [
											"77637:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "77637:5:0"
									},
									"id": 3413,
									"nodeType": "InheritanceSpecifier",
									"src": "77637:5:0"
								},
								{
									"baseName": {
										"id": 3414,
										"name": "IERC20Permit",
										"nameLocations": [
											"77644:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2493,
										"src": "77644:12:0"
									},
									"id": 3415,
									"nodeType": "InheritanceSpecifier",
									"src": "77644:12:0"
								},
								{
									"baseName": {
										"id": 3416,
										"name": "EIP712",
										"nameLocations": [
											"77658:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2111,
										"src": "77658:6:0"
									},
									"id": 3417,
									"nodeType": "InheritanceSpecifier",
									"src": "77658:6:0"
								},
								{
									"baseName": {
										"id": 3418,
										"name": "Nonces",
										"nameLocations": [
											"77666:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "77666:6:0"
									},
									"id": 3419,
									"nodeType": "InheritanceSpecifier",
									"src": "77666:6:0"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3411,
								"nodeType": "StructuredDocumentation",
								"src": "77116:487:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 3552,
							"linearizedBaseContracts": [
								3552,
								67,
								2111,
								91,
								2493,
								3409,
								2534,
								2903,
								2880,
								2658
							],
							"name": "ERC20Permit",
							"nameLocation": "77622:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3424,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "77704:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3552,
									"src": "77679:146:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3420,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "77679:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "77740:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3421,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "77730:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77730:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3425,
										"nodeType": "StructuredDocumentation",
										"src": "77832:52:0",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 3429,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "77895:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "77927:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "77919:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "77919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77918:18:0"
									},
									"src": "77889:48:0"
								},
								{
									"documentation": {
										"id": 3430,
										"nodeType": "StructuredDocumentation",
										"src": "77943:45:0",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 3436,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "77999:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "78028:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78020:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78036:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78019:31:0"
									},
									"src": "77993:58:0"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "78332:2:0",
										"statements": []
									},
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "78057:220:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 3447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3442,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3439,
													"src": "78321:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "78327:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3444,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3441,
												"name": "EIP712",
												"nameLocations": [
													"78314:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2111,
												"src": "78314:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78314:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "78308:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "78294:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "78294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78293:20:0"
									},
									"returnParameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78332:0:0"
									},
									"scope": 3552,
									"src": "78282:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2478
									],
									"body": {
										"id": 3523,
										"nodeType": "Block",
										"src": "78577:483:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3465,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "78591:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78597:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "78591:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3467,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "78609:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "78591:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "78587:97:0",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "78619:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3470,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "78664:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3469,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3429,
																	"src": "78640:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78640:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "78633:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													3476
												],
												"declarations": [
													{
														"constant": false,
														"id": 3476,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "78702:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78694:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3475,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3490,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3480,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3424,
																	"src": "78736:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3481,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3450,
																	"src": "78753:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3452,
																	"src": "78760:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3454,
																	"src": "78769:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3485,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3450,
																			"src": "78786:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3484,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "78776:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "78776:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3487,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3456,
																	"src": "78794:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3478,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "78725:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "78729:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "78725:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78725:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3477,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "78715:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78715:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78694:110:0"
											},
											{
												"assignments": [
													3492
												],
												"declarations": [
													{
														"constant": false,
														"id": 3492,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "78823:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78815:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3491,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78815:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3496,
												"initialValue": {
													"arguments": [
														{
															"id": 3494,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3476,
															"src": "78847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3493,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "78830:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78830:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78815:43:0"
											},
											{
												"assignments": [
													3498
												],
												"declarations": [
													{
														"constant": false,
														"id": 3498,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "78877:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78869:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3497,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "78869:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3506,
												"initialValue": {
													"arguments": [
														{
															"id": 3501,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "78900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3502,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "78906:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3503,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3460,
															"src": "78909:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3504,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3462,
															"src": "78912:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3499,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "78886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2458_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78892:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2408,
														"src": "78886:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78886:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78869:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3507,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3498,
														"src": "78928:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3508,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "78938:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "78928:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3516,
												"nodeType": "IfStatement",
												"src": "78924:88:0",
												"trueBody": {
													"id": 3515,
													"nodeType": "Block",
													"src": "78945:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3511,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3498,
																		"src": "78987:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3512,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3450,
																		"src": "78995:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3510,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3436,
																	"src": "78966:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 3513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78966:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3514,
															"nodeType": "RevertStatement",
															"src": "78959:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "79031:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "79038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "79047:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3300,
															3360
														],
														"referencedDeclaration": 3300,
														"src": "79022:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79022:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3522,
												"nodeType": "ExpressionStatement",
												"src": "79022:31:0"
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "78340:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 3524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "78397:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "78444:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78436:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "78469:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78461:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "78492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78484:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "78516:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78510:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3457,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "78510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "78535:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "78554:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78403:158:0"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78577:0:0"
									},
									"scope": 3552,
									"src": "78388:672:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26,
										2486
									],
									"body": {
										"id": 3540,
										"nodeType": "Block",
										"src": "79214:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3537,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "79244:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3535,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "79231:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3552_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "79237:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "79231:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79231:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3534,
												"id": 3539,
												"nodeType": "Return",
												"src": "79224:26:0"
											}
										]
									},
									"documentation": {
										"id": 3525,
										"nodeType": "StructuredDocumentation",
										"src": "79066:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 3541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "79123:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3531,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3529,
												"name": "IERC20Permit",
												"nameLocations": [
													"79174:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2493,
												"src": "79174:12:0"
											},
											{
												"id": 3530,
												"name": "Nonces",
												"nameLocations": [
													"79188:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "79188:6:0"
											}
										],
										"src": "79165:30:0"
									},
									"parameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79138:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79130:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79129:15:0"
									},
									"returnParameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79205:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79204:9:0"
									},
									"scope": 3552,
									"src": "79114:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2492
									],
									"body": {
										"id": 3550,
										"nodeType": "Block",
										"src": "79432:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3547,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "79449:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79449:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3549,
												"nodeType": "Return",
												"src": "79442:27:0"
											}
										]
									},
									"documentation": {
										"id": 3542,
										"nodeType": "StructuredDocumentation",
										"src": "79263:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 3551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "79373:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79389:2:0"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3551,
												"src": "79423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "79423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79422:9:0"
									},
									"scope": 3552,
									"src": "79364:112:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "77604:1874:0",
							"usedErrors": [
								9,
								211,
								213,
								2121,
								2126,
								2131,
								2504,
								2509,
								2514,
								2523,
								2528,
								2533,
								3429,
								3436
							],
							"usedEvents": [
								71,
								2814,
								2823
							]
						},
						{
							"id": 3553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "79648:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3555,
										"name": "Context",
										"nameLocations": [
											"79920:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2658,
										"src": "79920:7:0"
									},
									"id": 3556,
									"nodeType": "InheritanceSpecifier",
									"src": "79920:7:0"
								},
								{
									"baseName": {
										"id": 3557,
										"name": "ERC20",
										"nameLocations": [
											"79929:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "79929:5:0"
									},
									"id": 3558,
									"nodeType": "InheritanceSpecifier",
									"src": "79929:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3554,
								"nodeType": "StructuredDocumentation",
								"src": "79676:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 3593,
							"linearizedBaseContracts": [
								3593,
								3409,
								2534,
								2903,
								2880,
								2658
							],
							"name": "ERC20Burnable",
							"nameLocation": "79903:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3570,
										"nodeType": "Block",
										"src": "80099:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "80115:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "80115:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3567,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3561,
															"src": "80129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3564,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3282,
														"src": "80109:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80109:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3569,
												"nodeType": "ExpressionStatement",
												"src": "80109:26:0"
											}
										]
									},
									"documentation": {
										"id": 3559,
										"nodeType": "StructuredDocumentation",
										"src": "79941:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 3571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "80064:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "80077:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3571,
												"src": "80069:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "80069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80068:15:0"
									},
									"returnParameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80099:0:0"
									},
									"scope": 3593,
									"src": "80055:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3591,
										"nodeType": "Block",
										"src": "80523:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3580,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3574,
															"src": "80549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3581,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "80558:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "80558:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3576,
															"src": "80572:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3579,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3408,
														"src": "80533:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80533:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3585,
												"nodeType": "ExpressionStatement",
												"src": "80533:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3587,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3574,
															"src": "80594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3588,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3576,
															"src": "80603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3586,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3282,
														"src": "80588:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80588:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3590,
												"nodeType": "ExpressionStatement",
												"src": "80588:21:0"
											}
										]
									},
									"documentation": {
										"id": 3572,
										"nodeType": "StructuredDocumentation",
										"src": "80148:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 3592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "80467:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3574,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "80484:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "80476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "80501:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "80493:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "80493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80475:32:0"
									},
									"returnParameters": {
										"id": 3578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80523:0:0"
									},
									"scope": 3593,
									"src": "80458:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3690,
							"src": "79885:733:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": [
								2814,
								2823
							]
						},
						{
							"id": 3594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "80713:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3595,
										"name": "ERC20",
										"nameLocations": [
											"80774:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "80774:5:0"
									},
									"id": 3596,
									"nodeType": "InheritanceSpecifier",
									"src": "80774:5:0"
								},
								{
									"baseName": {
										"id": 3597,
										"name": "ERC20Burnable",
										"nameLocations": [
											"80781:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3593,
										"src": "80781:13:0"
									},
									"id": 3598,
									"nodeType": "InheritanceSpecifier",
									"src": "80781:13:0"
								},
								{
									"baseName": {
										"id": 3599,
										"name": "Ownable",
										"nameLocations": [
											"80796:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2803,
										"src": "80796:7:0"
									},
									"id": 3600,
									"nodeType": "InheritanceSpecifier",
									"src": "80796:7:0"
								},
								{
									"baseName": {
										"id": 3601,
										"name": "ERC20Permit",
										"nameLocations": [
											"80805:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3552,
										"src": "80805:11:0"
									},
									"id": 3602,
									"nodeType": "InheritanceSpecifier",
									"src": "80805:11:0"
								}
							],
							"canonicalName": "ParticipationToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3689,
							"linearizedBaseContracts": [
								3689,
								3552,
								67,
								2111,
								91,
								2493,
								2803,
								3593,
								3409,
								2534,
								2903,
								2880,
								2658
							],
							"name": "ParticipationToken",
							"nameLocation": "80752:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3617,
										"nodeType": "Block",
										"src": "80976:2:0",
										"statements": []
									},
									"id": 3618,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50617274696369706174696f6e546f6b656e",
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "80871:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_61653188976d6d9ecf5e33b147788ec0830eac3e633a227b8852151b9bc260ff",
														"typeString": "literal_string \"ParticipationToken\""
													},
													"value": "ParticipationToken"
												},
												{
													"hexValue": "50544b",
													"id": 3608,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "80893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_47b066d5c31ee725e4b4364b04da4ad2b04713be36478fa679bc8cbbc0efba62",
														"typeString": "literal_string \"PTK\""
													},
													"value": "PTK"
												}
											],
											"id": 3609,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3606,
												"name": "ERC20",
												"nameLocations": [
													"80865:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3409,
												"src": "80865:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "80865:34:0"
										},
										{
											"arguments": [
												{
													"id": 3611,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3604,
													"src": "80916:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3612,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3610,
												"name": "Ownable",
												"nameLocations": [
													"80908:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2803,
												"src": "80908:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "80908:21:0"
										},
										{
											"arguments": [
												{
													"hexValue": "50617274696369706174696f6e546f6b656e",
													"id": 3614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "80950:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_61653188976d6d9ecf5e33b147788ec0830eac3e633a227b8852151b9bc260ff",
														"typeString": "literal_string \"ParticipationToken\""
													},
													"value": "ParticipationToken"
												}
											],
											"id": 3615,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3613,
												"name": "ERC20Permit",
												"nameLocations": [
													"80938:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3552,
												"src": "80938:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "80938:33:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3604,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "80843:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "80835:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80834:22:0"
									},
									"returnParameters": {
										"id": 3616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80976:0:0"
									},
									"scope": 3689,
									"src": "80823:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3641,
										"nodeType": "Block",
										"src": "81043:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3628,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3620,
															"src": "81059:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3629,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3622,
																"src": "81063:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 3630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "81073:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3633,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2973,
																						"src": "81087:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 3634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "81087:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 3632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "81079:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3631,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "81079:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "81079:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "81073:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3637,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "81072:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "81063:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3627,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3249,
														"src": "81053:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "81053:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3640,
												"nodeType": "ExpressionStatement",
												"src": "81053:47:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3625,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3624,
												"name": "onlyOwner",
												"nameLocations": [
													"81033:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "81033:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "81033:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "80993:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "81006:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3642,
												"src": "80998:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "81018:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3642,
												"src": "81010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80997:28:0"
									},
									"returnParameters": {
										"id": 3626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "81043:0:0"
									},
									"scope": 3689,
									"src": "80984:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3687,
										"nodeType": "Block",
										"src": "81245:181:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3656,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3650,
															"src": "81271:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3657,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3644,
															"src": "81288:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3658,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3648,
																"src": "81294:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 3659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "81304:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3662,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2973,
																						"src": "81318:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 3663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "81318:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 3661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "81310:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3660,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "81310:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "81310:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "81304:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3666,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "81303:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "81294:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3655,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3408,
														"src": "81255:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "81255:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3669,
												"nodeType": "ExpressionStatement",
												"src": "81255:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3671,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3644,
															"src": "81351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3672,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3646,
															"src": "81357:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3673,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3648,
																"src": "81361:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 3674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "81371:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3677,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2973,
																						"src": "81385:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 3678,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "81385:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 3676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "81377:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3675,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "81377:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "81377:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "81371:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "81370:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "81361:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3670,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "81341:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "81341:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3684,
												"nodeType": "ExpressionStatement",
												"src": "81341:57:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "81415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3654,
												"id": 3686,
												"nodeType": "Return",
												"src": "81408:11:0"
											}
										]
									},
									"functionSelector": "abd81ca2",
									"id": 3688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferParticipationToken",
									"nameLocation": "81122:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3644,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "81157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3688,
												"src": "81149:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3646,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "81171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3688,
												"src": "81163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "81183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3688,
												"src": "81175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3650,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "81199:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 3688,
												"src": "81191:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81148:67:0"
									},
									"returnParameters": {
										"id": 3654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3688,
												"src": "81240:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "81240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "81239:6:0"
									},
									"scope": 3689,
									"src": "81113:313:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3690,
							"src": "80743:685:0",
							"usedErrors": [
								9,
								211,
								213,
								2121,
								2126,
								2131,
								2504,
								2509,
								2514,
								2523,
								2528,
								2533,
								2669,
								2674,
								3429,
								3436
							],
							"usedEvents": [
								71,
								2680,
								2814,
								2823
							]
						}
					],
					"src": "120:81308:0"
				},
				"id": 0
			}
		}
	}
}