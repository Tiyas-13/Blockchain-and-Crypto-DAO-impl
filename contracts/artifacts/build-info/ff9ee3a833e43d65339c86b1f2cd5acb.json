{
	"id": "ff9ee3a833e43d65339c86b1f2cd5acb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GameEmporium.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract GameEmporium {\n\n    // Declare state variables of the contract\n    address public owner;\n    address public tokenAddress;\n    mapping(address => mapping(string => uint)) public inventory;\n    uint256 constant DECIMALS = 3;\n\n    // Define prices for each indoor game\n    uint constant public poolTablePrice = 2; \n    uint constant public tableTennisPrice = 4;\n    uint constant public foosBallTablePrice = 6; \n\n    // When 'GameEmporium' contract is deployed:\n    // 1. set the deploying address as the owner of the contract\n    // 2. initialize the inventory\n    constructor() {\n        owner = msg.sender;\n        setInventory(address(this), \"Pool Table\", 10); // Initial quantity for each game\n        setInventory(address(this), \"Table Tennis Table\", 10); \n        setInventory(address(this), \"Foos Ball Table\", 10); \n    }\n\n    function setInventory(address _address, string memory _item, uint _quantity) public {\n        inventory[_address][_item] = _quantity;\n    }\n\n    function getInventory(address _address, string memory _item) public view returns (uint) {\n        return inventory[_address][_item];\n    }\n\n    function getPriceOf(string memory item) pure public returns (uint) {\n        uint256 price;\n        if (Strings.equal(item, \"Pool Table\")) {\n            price = poolTablePrice;\n        } else if (Strings.equal(item,\"Table Tennis Table\")) {\n            price = tableTennisPrice;\n        } else if (Strings.equal(item,\"Foos Ball Table\")) {\n            price = foosBallTablePrice;\n        } else {\n            price = 0;\n        }\n        return price;\n    }\n\n    // Allow anyone to purchase a game\n    function purchase(string memory item) public payable {\n        uint256 price = getPriceOf(item);\n\n        require(msg.value >= price / (10**DECIMALS), \"Insufficient balance to purchase this item\");\n        require(inventory[address(this)][item] > 0, \"Sorry, this item is out of stock\");\n        inventory[address(this)][item]--;\n        inventory[msg.sender][item]++;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/GameEmporium.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/GameEmporium.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/GameEmporium.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GameEmporium.sol": {
				"GameEmporium": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "foosBallTablePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_item",
									"type": "string"
								}
							],
							"name": "getInventory",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "item",
									"type": "string"
								}
							],
							"name": "getPriceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "inventory",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolTablePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "item",
									"type": "string"
								}
							],
							"name": "purchase",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_item",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "setInventory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tableTennisPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GameEmporium.sol\":111:2116  contract GameEmporium {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GameEmporium.sol\":683:946  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/GameEmporium.sol\":715:725  msg.sender */\n  caller\n    /* \"contracts/GameEmporium.sol\":707:712  owner */\n  0x00\n  dup1\n    /* \"contracts/GameEmporium.sol\":707:725  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GameEmporium.sol\":735:780  setInventory(address(this), \"Pool Table\", 10) */\n  tag_4\n    /* \"contracts/GameEmporium.sol\":756:760  this */\n  address\n    /* \"contracts/GameEmporium.sol\":735:780  setInventory(address(this), \"Pool Table\", 10) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x506f6f6c205461626c6500000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/GameEmporium.sol\":777:779  10 */\n  0x0a\n    /* \"contracts/GameEmporium.sol\":735:747  setInventory */\n  shl(0x20, tag_5)\n    /* \"contracts/GameEmporium.sol\":735:780  setInventory(address(this), \"Pool Table\", 10) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/GameEmporium.sol\":824:877  setInventory(address(this), \"Table Tennis Table\", 10) */\n  tag_6\n    /* \"contracts/GameEmporium.sol\":845:849  this */\n  address\n    /* \"contracts/GameEmporium.sol\":824:877  setInventory(address(this), \"Table Tennis Table\", 10) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  0x5461626c652054656e6e6973205461626c650000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/GameEmporium.sol\":874:876  10 */\n  0x0a\n    /* \"contracts/GameEmporium.sol\":824:836  setInventory */\n  shl(0x20, tag_5)\n    /* \"contracts/GameEmporium.sol\":824:877  setInventory(address(this), \"Table Tennis Table\", 10) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/GameEmporium.sol\":888:938  setInventory(address(this), \"Foos Ball Table\", 10) */\n  tag_7\n    /* \"contracts/GameEmporium.sol\":909:913  this */\n  address\n    /* \"contracts/GameEmporium.sol\":888:938  setInventory(address(this), \"Foos Ball Table\", 10) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x466f6f732042616c6c205461626c650000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/GameEmporium.sol\":935:937  10 */\n  0x0a\n    /* \"contracts/GameEmporium.sol\":888:900  setInventory */\n  shl(0x20, tag_5)\n    /* \"contracts/GameEmporium.sol\":888:938  setInventory(address(this), \"Foos Ball Table\", 10) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/GameEmporium.sol\":111:2116  contract GameEmporium {... */\n  jump(tag_8)\n    /* \"contracts/GameEmporium.sol\":952:1091  function setInventory(address _address, string memory _item, uint _quantity) public {... */\ntag_5:\n    /* \"contracts/GameEmporium.sol\":1075:1084  _quantity */\n  dup1\n    /* \"contracts/GameEmporium.sol\":1046:1055  inventory */\n  0x02\n    /* \"contracts/GameEmporium.sol\":1046:1065  inventory[_address] */\n  0x00\n    /* \"contracts/GameEmporium.sol\":1056:1064  _address */\n  dup6\n    /* \"contracts/GameEmporium.sol\":1046:1065  inventory[_address] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/GameEmporium.sol\":1066:1071  _item */\n  dup4\n    /* \"contracts/GameEmporium.sol\":1046:1072  inventory[_address][_item] */\n  mload(0x40)\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/GameEmporium.sol\":1046:1084  inventory[_address][_item] = _quantity */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/GameEmporium.sol\":952:1091  function setInventory(address _address, string memory _item, uint _quantity) public {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_12:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:260   */\ntag_13:\n    /* \"#utility.yul\":214:225   */\n  0x00\n    /* \"#utility.yul\":251:254   */\n  dup2\n    /* \"#utility.yul\":236:254   */\n  swap1\n  pop\n    /* \"#utility.yul\":112:260   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":266:512   */\ntag_14:\n    /* \"#utility.yul\":347:348   */\n  0x00\n    /* \"#utility.yul\":357:470   */\ntag_20:\n    /* \"#utility.yul\":371:377   */\n  dup4\n    /* \"#utility.yul\":368:369   */\n  dup2\n    /* \"#utility.yul\":365:378   */\n  lt\n    /* \"#utility.yul\":357:470   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":456:457   */\n  dup1\n    /* \"#utility.yul\":451:454   */\n  dup3\n    /* \"#utility.yul\":447:458   */\n  add\n    /* \"#utility.yul\":441:459   */\n  mload\n    /* \"#utility.yul\":437:438   */\n  dup2\n    /* \"#utility.yul\":432:435   */\n  dup5\n    /* \"#utility.yul\":428:439   */\n  add\n    /* \"#utility.yul\":421:460   */\n  mstore\n    /* \"#utility.yul\":393:395   */\n  0x20\n    /* \"#utility.yul\":390:391   */\n  dup2\n    /* \"#utility.yul\":386:396   */\n  add\n    /* \"#utility.yul\":381:396   */\n  swap1\n  pop\n    /* \"#utility.yul\":357:470   */\n  jump(tag_20)\ntag_22:\n    /* \"#utility.yul\":504:505   */\n  0x00\n    /* \"#utility.yul\":495:501   */\n  dup5\n    /* \"#utility.yul\":490:493   */\n  dup5\n    /* \"#utility.yul\":486:502   */\n  add\n    /* \"#utility.yul\":479:506   */\n  mstore\n    /* \"#utility.yul\":328:512   */\n  pop\n    /* \"#utility.yul\":266:512   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":518:908   */\ntag_15:\n    /* \"#utility.yul\":624:627   */\n  0x00\n    /* \"#utility.yul\":652:691   */\n  tag_24\n    /* \"#utility.yul\":685:690   */\n  dup3\n    /* \"#utility.yul\":652:691   */\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":707:796   */\n  tag_25\n    /* \"#utility.yul\":789:795   */\n  dup2\n    /* \"#utility.yul\":784:787   */\n  dup6\n    /* \"#utility.yul\":707:796   */\n  tag_13\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":700:796   */\n  swap4\n  pop\n    /* \"#utility.yul\":805:870   */\n  tag_26\n    /* \"#utility.yul\":863:869   */\n  dup2\n    /* \"#utility.yul\":858:861   */\n  dup6\n    /* \"#utility.yul\":851:855   */\n  0x20\n    /* \"#utility.yul\":844:849   */\n  dup7\n    /* \"#utility.yul\":840:856   */\n  add\n    /* \"#utility.yul\":805:870   */\n  tag_14\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":895:901   */\n  dup1\n    /* \"#utility.yul\":890:893   */\n  dup5\n    /* \"#utility.yul\":886:902   */\n  add\n    /* \"#utility.yul\":879:902   */\n  swap2\n  pop\n    /* \"#utility.yul\":628:908   */\n  pop\n    /* \"#utility.yul\":518:908   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":914:1189   */\ntag_11:\n    /* \"#utility.yul\":1046:1049   */\n  0x00\n    /* \"#utility.yul\":1068:1163   */\n  tag_28\n    /* \"#utility.yul\":1159:1162   */\n  dup3\n    /* \"#utility.yul\":1150:1156   */\n  dup5\n    /* \"#utility.yul\":1068:1163   */\n  tag_15\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1061:1163   */\n  swap2\n  pop\n    /* \"#utility.yul\":1180:1183   */\n  dup2\n    /* \"#utility.yul\":1173:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":914:1189   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/GameEmporium.sol\":111:2116  contract GameEmporium {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GameEmporium.sol\":111:2116  contract GameEmporium {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb008c7e6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb3390911\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc386f5e9\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x13fa9b23\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2616add5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2cde4c50\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x499553fb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x59f5e0ce\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GameEmporium.sol\":1097:1235  function getInventory(address _address, string memory _item) public view returns (uint) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":390:429  uint constant public poolTablePrice = 2 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":1241:1696  function getPriceOf(string memory item) pure public returns (uint) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":246:306  mapping(address => mapping(string => uint)) public inventory */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":1741:2114  function purchase(string memory item) public payable {... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/GameEmporium.sol\":187:207  address public owner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":213:240  address public tokenAddress */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":952:1091  function setInventory(address _address, string memory _item, uint _quantity) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/GameEmporium.sol\":483:526  uint constant public foosBallTablePrice = 6 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":436:477  uint constant public tableTennisPrice = 4 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameEmporium.sol\":1097:1235  function getInventory(address _address, string memory _item) public view returns (uint) {... */\n    tag_17:\n        /* \"contracts/GameEmporium.sol\":1179:1183  uint */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1202:1211  inventory */\n      0x02\n        /* \"contracts/GameEmporium.sol\":1202:1221  inventory[_address] */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1212:1220  _address */\n      dup5\n        /* \"contracts/GameEmporium.sol\":1202:1221  inventory[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GameEmporium.sol\":1222:1227  _item */\n      dup3\n        /* \"contracts/GameEmporium.sol\":1202:1228  inventory[_address][_item] */\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/GameEmporium.sol\":1195:1228  return inventory[_address][_item] */\n      swap1\n      pop\n        /* \"contracts/GameEmporium.sol\":1097:1235  function getInventory(address _address, string memory _item) public view returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":390:429  uint constant public poolTablePrice = 2 */\n    tag_22:\n        /* \"contracts/GameEmporium.sol\":428:429  2 */\n      0x02\n        /* \"contracts/GameEmporium.sol\":390:429  uint constant public poolTablePrice = 2 */\n      dup2\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":1241:1696  function getPriceOf(string memory item) pure public returns (uint) {... */\n    tag_28:\n        /* \"contracts/GameEmporium.sol\":1302:1306  uint */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1318:1331  uint256 price */\n      dup1\n        /* \"contracts/GameEmporium.sol\":1345:1378  Strings.equal(item, \"Pool Table\") */\n      tag_64\n        /* \"contracts/GameEmporium.sol\":1359:1363  item */\n      dup4\n        /* \"contracts/GameEmporium.sol\":1345:1378  Strings.equal(item, \"Pool Table\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x506f6f6c205461626c6500000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/GameEmporium.sol\":1345:1358  Strings.equal */\n      tag_65\n        /* \"contracts/GameEmporium.sol\":1345:1378  Strings.equal(item, \"Pool Table\") */\n      jump\t// in\n    tag_64:\n        /* \"contracts/GameEmporium.sol\":1341:1668  if (Strings.equal(item, \"Pool Table\")) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/GameEmporium.sol\":428:429  2 */\n      0x02\n        /* \"contracts/GameEmporium.sol\":1394:1416  price = poolTablePrice */\n      swap1\n      pop\n        /* \"contracts/GameEmporium.sol\":1341:1668  if (Strings.equal(item, \"Pool Table\")) {... */\n      jump(tag_67)\n    tag_66:\n        /* \"contracts/GameEmporium.sol\":1437:1477  Strings.equal(item,\"Table Tennis Table\") */\n      tag_68\n        /* \"contracts/GameEmporium.sol\":1451:1455  item */\n      dup4\n        /* \"contracts/GameEmporium.sol\":1437:1477  Strings.equal(item,\"Table Tennis Table\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      0x5461626c652054656e6e6973205461626c650000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/GameEmporium.sol\":1437:1450  Strings.equal */\n      tag_65\n        /* \"contracts/GameEmporium.sol\":1437:1477  Strings.equal(item,\"Table Tennis Table\") */\n      jump\t// in\n    tag_68:\n        /* \"contracts/GameEmporium.sol\":1433:1668  if (Strings.equal(item,\"Table Tennis Table\")) {... */\n      iszero\n      tag_69\n      jumpi\n        /* \"contracts/GameEmporium.sol\":476:477  4 */\n      0x04\n        /* \"contracts/GameEmporium.sol\":1493:1517  price = tableTennisPrice */\n      swap1\n      pop\n        /* \"contracts/GameEmporium.sol\":1433:1668  if (Strings.equal(item,\"Table Tennis Table\")) {... */\n      jump(tag_70)\n    tag_69:\n        /* \"contracts/GameEmporium.sol\":1538:1575  Strings.equal(item,\"Foos Ball Table\") */\n      tag_71\n        /* \"contracts/GameEmporium.sol\":1552:1556  item */\n      dup4\n        /* \"contracts/GameEmporium.sol\":1538:1575  Strings.equal(item,\"Foos Ball Table\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      0x466f6f732042616c6c205461626c650000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/GameEmporium.sol\":1538:1551  Strings.equal */\n      tag_65\n        /* \"contracts/GameEmporium.sol\":1538:1575  Strings.equal(item,\"Foos Ball Table\") */\n      jump\t// in\n    tag_71:\n        /* \"contracts/GameEmporium.sol\":1534:1668  if (Strings.equal(item,\"Foos Ball Table\")) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/GameEmporium.sol\":525:526  6 */\n      0x06\n        /* \"contracts/GameEmporium.sol\":1591:1617  price = foosBallTablePrice */\n      swap1\n      pop\n        /* \"contracts/GameEmporium.sol\":1534:1668  if (Strings.equal(item,\"Foos Ball Table\")) {... */\n      jump(tag_73)\n    tag_72:\n        /* \"contracts/GameEmporium.sol\":1656:1657  0 */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1648:1657  price = 0 */\n      swap1\n      pop\n        /* \"contracts/GameEmporium.sol\":1534:1668  if (Strings.equal(item,\"Foos Ball Table\")) {... */\n    tag_73:\n        /* \"contracts/GameEmporium.sol\":1433:1668  if (Strings.equal(item,\"Table Tennis Table\")) {... */\n    tag_70:\n        /* \"contracts/GameEmporium.sol\":1341:1668  if (Strings.equal(item, \"Pool Table\")) {... */\n    tag_67:\n        /* \"contracts/GameEmporium.sol\":1684:1689  price */\n      dup1\n        /* \"contracts/GameEmporium.sol\":1677:1689  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/GameEmporium.sol\":1241:1696  function getPriceOf(string memory item) pure public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":246:306  mapping(address => mapping(string => uint)) public inventory */\n    tag_33:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      dup3\n      add\n      dup1\n      mload\n      dup5\n      dup3\n      mstore\n      0x20\n      dup4\n      add\n      0x20\n      dup6\n      add\n      keccak256\n      dup2\n      dup4\n      mstore\n      dup1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":1741:2114  function purchase(string memory item) public payable {... */\n    tag_37:\n        /* \"contracts/GameEmporium.sol\":1804:1817  uint256 price */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1820:1836  getPriceOf(item) */\n      tag_75\n        /* \"contracts/GameEmporium.sol\":1831:1835  item */\n      dup3\n        /* \"contracts/GameEmporium.sol\":1820:1830  getPriceOf */\n      tag_28\n        /* \"contracts/GameEmporium.sol\":1820:1836  getPriceOf(item) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/GameEmporium.sol\":1804:1836  uint256 price = getPriceOf(item) */\n      swap1\n      pop\n        /* \"contracts/GameEmporium.sol\":340:341  3 */\n      0x03\n        /* \"contracts/GameEmporium.sol\":1877:1879  10 */\n      0x0a\n        /* \"contracts/GameEmporium.sol\":1877:1889  10**DECIMALS */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/GameEmporium.sol\":1868:1873  price */\n      dup2\n        /* \"contracts/GameEmporium.sol\":1868:1890  price / (10**DECIMALS) */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/GameEmporium.sol\":1855:1864  msg.value */\n      callvalue\n        /* \"contracts/GameEmporium.sol\":1855:1890  msg.value >= price / (10**DECIMALS) */\n      lt\n      iszero\n        /* \"contracts/GameEmporium.sol\":1847:1937  require(msg.value >= price / (10**DECIMALS), \"Insufficient balance to purchase this item\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/GameEmporium.sol\":1988:1989  0 */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1955:1964  inventory */\n      0x02\n        /* \"contracts/GameEmporium.sol\":1955:1979  inventory[address(this)] */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1973:1977  this */\n      address\n        /* \"contracts/GameEmporium.sol\":1955:1979  inventory[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GameEmporium.sol\":1980:1984  item */\n      dup4\n        /* \"contracts/GameEmporium.sol\":1955:1985  inventory[address(this)][item] */\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_83:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/GameEmporium.sol\":1955:1989  inventory[address(this)][item] > 0 */\n      gt\n        /* \"contracts/GameEmporium.sol\":1947:2026  require(inventory[address(this)][item] > 0, \"Sorry, this item is out of stock\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/GameEmporium.sol\":2036:2045  inventory */\n      0x02\n        /* \"contracts/GameEmporium.sol\":2036:2060  inventory[address(this)] */\n      0x00\n        /* \"contracts/GameEmporium.sol\":2054:2058  this */\n      address\n        /* \"contracts/GameEmporium.sol\":2036:2060  inventory[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GameEmporium.sol\":2061:2065  item */\n      dup3\n        /* \"contracts/GameEmporium.sol\":2036:2066  inventory[address(this)][item] */\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_87:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/GameEmporium.sol\":2036:2068  inventory[address(this)][item]-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/GameEmporium.sol\":2078:2087  inventory */\n      0x02\n        /* \"contracts/GameEmporium.sol\":2078:2099  inventory[msg.sender] */\n      0x00\n        /* \"contracts/GameEmporium.sol\":2088:2098  msg.sender */\n      caller\n        /* \"contracts/GameEmporium.sol\":2078:2099  inventory[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GameEmporium.sol\":2100:2104  item */\n      dup3\n        /* \"contracts/GameEmporium.sol\":2078:2105  inventory[msg.sender][item] */\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_90:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/GameEmporium.sol\":2078:2107  inventory[msg.sender][item]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/GameEmporium.sol\":1794:2114  {... */\n      pop\n        /* \"contracts/GameEmporium.sol\":1741:2114  function purchase(string memory item) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":187:207  address public owner */\n    tag_40:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":213:240  address public tokenAddress */\n    tag_45:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":952:1091  function setInventory(address _address, string memory _item, uint _quantity) public {... */\n    tag_51:\n        /* \"contracts/GameEmporium.sol\":1075:1084  _quantity */\n      dup1\n        /* \"contracts/GameEmporium.sol\":1046:1055  inventory */\n      0x02\n        /* \"contracts/GameEmporium.sol\":1046:1065  inventory[_address] */\n      0x00\n        /* \"contracts/GameEmporium.sol\":1056:1064  _address */\n      dup6\n        /* \"contracts/GameEmporium.sol\":1046:1065  inventory[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GameEmporium.sol\":1066:1071  _item */\n      dup4\n        /* \"contracts/GameEmporium.sol\":1046:1072  inventory[_address][_item] */\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_94:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/GameEmporium.sol\":1046:1084  inventory[_address][_item] = _quantity */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GameEmporium.sol\":952:1091  function setInventory(address _address, string memory _item, uint _quantity) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":483:526  uint constant public foosBallTablePrice = 6 */\n    tag_54:\n        /* \"contracts/GameEmporium.sol\":525:526  6 */\n      0x06\n        /* \"contracts/GameEmporium.sol\":483:526  uint constant public foosBallTablePrice = 6 */\n      dup2\n      jump\t// out\n        /* \"contracts/GameEmporium.sol\":436:477  uint constant public tableTennisPrice = 4 */\n    tag_58:\n        /* \"contracts/GameEmporium.sol\":476:477  4 */\n      0x04\n        /* \"contracts/GameEmporium.sol\":436:477  uint constant public tableTennisPrice = 4 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2914:3096  function equal(string memory a, string memory b) internal pure returns (bool) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2986:2990  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3034:3035  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3028:3043  bytes(b).length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3015:3016  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3009:3024  bytes(a).length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3009:3043  bytes(a).length == bytes(b).length */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3009:3089  bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b)) */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3086:3087  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3070:3089  keccak256(bytes(b)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3063:3064  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3047:3066  keccak256(bytes(a)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3047:3089  keccak256(bytes(a)) == keccak256(bytes(b)) */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3009:3089  bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b)) */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":3002:3089  return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2914:3096  function equal(string memory a, string memory b) internal pure returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_97:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_98:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_99:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_100:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_101:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_139\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_100\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_102:\n        /* \"#utility.yul\":641:665   */\n      tag_141\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_101\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_142:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_103:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_144\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_102\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:958   */\n    tag_104:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":947:948   */\n      dup1\n        /* \"#utility.yul\":940:952   */\n      revert\n        /* \"#utility.yul\":964:1081   */\n    tag_105:\n        /* \"#utility.yul\":1073:1074   */\n      0x00\n        /* \"#utility.yul\":1070:1071   */\n      dup1\n        /* \"#utility.yul\":1063:1075   */\n      revert\n        /* \"#utility.yul\":1087:1189   */\n    tag_106:\n        /* \"#utility.yul\":1128:1134   */\n      0x00\n        /* \"#utility.yul\":1179:1181   */\n      0x1f\n        /* \"#utility.yul\":1175:1182   */\n      not\n        /* \"#utility.yul\":1170:1172   */\n      0x1f\n        /* \"#utility.yul\":1163:1168   */\n      dup4\n        /* \"#utility.yul\":1159:1173   */\n      add\n        /* \"#utility.yul\":1155:1183   */\n      and\n        /* \"#utility.yul\":1145:1183   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1195:1375   */\n    tag_107:\n        /* \"#utility.yul\":1243:1320   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1233:1321   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x41\n        /* \"#utility.yul\":1337:1338   */\n      0x04\n        /* \"#utility.yul\":1330:1345   */\n      mstore\n        /* \"#utility.yul\":1364:1368   */\n      0x24\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1354:1369   */\n      revert\n        /* \"#utility.yul\":1381:1662   */\n    tag_108:\n        /* \"#utility.yul\":1464:1491   */\n      tag_150\n        /* \"#utility.yul\":1486:1490   */\n      dup3\n        /* \"#utility.yul\":1464:1491   */\n      tag_106\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1456:1462   */\n      dup2\n        /* \"#utility.yul\":1452:1492   */\n      add\n        /* \"#utility.yul\":1594:1600   */\n      dup2\n        /* \"#utility.yul\":1582:1592   */\n      dup2\n        /* \"#utility.yul\":1579:1601   */\n      lt\n        /* \"#utility.yul\":1558:1576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1546:1556   */\n      dup3\n        /* \"#utility.yul\":1543:1577   */\n      gt\n        /* \"#utility.yul\":1540:1602   */\n      or\n        /* \"#utility.yul\":1537:1625   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1605:1623   */\n      tag_152\n      tag_107\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1537:1625   */\n    tag_151:\n        /* \"#utility.yul\":1645:1655   */\n      dup1\n        /* \"#utility.yul\":1641:1643   */\n      0x40\n        /* \"#utility.yul\":1634:1656   */\n      mstore\n        /* \"#utility.yul\":1424:1662   */\n      pop\n        /* \"#utility.yul\":1381:1662   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1668:1797   */\n    tag_109:\n        /* \"#utility.yul\":1702:1708   */\n      0x00\n        /* \"#utility.yul\":1729:1749   */\n      tag_154\n      tag_97\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1719:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1758:1791   */\n      tag_155\n        /* \"#utility.yul\":1786:1790   */\n      dup3\n        /* \"#utility.yul\":1778:1784   */\n      dup3\n        /* \"#utility.yul\":1758:1791   */\n      tag_108\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1668:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:2111   */\n    tag_110:\n        /* \"#utility.yul\":1865:1869   */\n      0x00\n        /* \"#utility.yul\":1955:1973   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1947:1953   */\n      dup3\n        /* \"#utility.yul\":1944:1974   */\n      gt\n        /* \"#utility.yul\":1941:1997   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1977:1995   */\n      tag_158\n      tag_107\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1941:1997   */\n    tag_157:\n        /* \"#utility.yul\":2015:2044   */\n      tag_159\n        /* \"#utility.yul\":2037:2043   */\n      dup3\n        /* \"#utility.yul\":2015:2044   */\n      tag_106\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2007:2044   */\n      swap1\n      pop\n        /* \"#utility.yul\":2099:2103   */\n      0x20\n        /* \"#utility.yul\":2093:2097   */\n      dup2\n        /* \"#utility.yul\":2089:2104   */\n      add\n        /* \"#utility.yul\":2081:2104   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:2111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2263   */\n    tag_111:\n        /* \"#utility.yul\":2214:2220   */\n      dup3\n        /* \"#utility.yul\":2209:2212   */\n      dup2\n        /* \"#utility.yul\":2204:2207   */\n      dup4\n        /* \"#utility.yul\":2191:2221   */\n      calldatacopy\n        /* \"#utility.yul\":2255:2256   */\n      0x00\n        /* \"#utility.yul\":2246:2252   */\n      dup4\n        /* \"#utility.yul\":2241:2244   */\n      dup4\n        /* \"#utility.yul\":2237:2253   */\n      add\n        /* \"#utility.yul\":2230:2257   */\n      mstore\n        /* \"#utility.yul\":2117:2263   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2269:2694   */\n    tag_112:\n        /* \"#utility.yul\":2347:2352   */\n      0x00\n        /* \"#utility.yul\":2372:2438   */\n      tag_162\n        /* \"#utility.yul\":2388:2437   */\n      tag_163\n        /* \"#utility.yul\":2430:2436   */\n      dup5\n        /* \"#utility.yul\":2388:2437   */\n      tag_110\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2372:2438   */\n      tag_109\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2363:2438   */\n      swap1\n      pop\n        /* \"#utility.yul\":2461:2467   */\n      dup3\n        /* \"#utility.yul\":2454:2459   */\n      dup2\n        /* \"#utility.yul\":2447:2468   */\n      mstore\n        /* \"#utility.yul\":2499:2503   */\n      0x20\n        /* \"#utility.yul\":2492:2497   */\n      dup2\n        /* \"#utility.yul\":2488:2504   */\n      add\n        /* \"#utility.yul\":2537:2540   */\n      dup5\n        /* \"#utility.yul\":2528:2534   */\n      dup5\n        /* \"#utility.yul\":2523:2526   */\n      dup5\n        /* \"#utility.yul\":2519:2535   */\n      add\n        /* \"#utility.yul\":2516:2541   */\n      gt\n        /* \"#utility.yul\":2513:2625   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2544:2623   */\n      tag_165\n      tag_105\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2513:2625   */\n    tag_164:\n        /* \"#utility.yul\":2634:2688   */\n      tag_166\n        /* \"#utility.yul\":2681:2687   */\n      dup5\n        /* \"#utility.yul\":2676:2679   */\n      dup3\n        /* \"#utility.yul\":2671:2674   */\n      dup6\n        /* \"#utility.yul\":2634:2688   */\n      tag_111\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2353:2694   */\n      pop\n        /* \"#utility.yul\":2269:2694   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2714:3054   */\n    tag_113:\n        /* \"#utility.yul\":2770:2775   */\n      0x00\n        /* \"#utility.yul\":2819:2822   */\n      dup3\n        /* \"#utility.yul\":2812:2816   */\n      0x1f\n        /* \"#utility.yul\":2804:2810   */\n      dup4\n        /* \"#utility.yul\":2800:2817   */\n      add\n        /* \"#utility.yul\":2796:2823   */\n      slt\n        /* \"#utility.yul\":2786:2908   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2827:2906   */\n      tag_169\n      tag_104\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2786:2908   */\n    tag_168:\n        /* \"#utility.yul\":2944:2950   */\n      dup2\n        /* \"#utility.yul\":2931:2951   */\n      calldataload\n        /* \"#utility.yul\":2969:3048   */\n      tag_170\n        /* \"#utility.yul\":3044:3047   */\n      dup5\n        /* \"#utility.yul\":3036:3042   */\n      dup3\n        /* \"#utility.yul\":3029:3033   */\n      0x20\n        /* \"#utility.yul\":3021:3027   */\n      dup7\n        /* \"#utility.yul\":3017:3034   */\n      add\n        /* \"#utility.yul\":2969:3048   */\n      tag_112\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2960:3048   */\n      swap2\n      pop\n        /* \"#utility.yul\":2776:3054   */\n      pop\n        /* \"#utility.yul\":2714:3054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3714   */\n    tag_16:\n        /* \"#utility.yul\":3138:3144   */\n      0x00\n        /* \"#utility.yul\":3146:3152   */\n      dup1\n        /* \"#utility.yul\":3195:3197   */\n      0x40\n        /* \"#utility.yul\":3183:3192   */\n      dup4\n        /* \"#utility.yul\":3174:3181   */\n      dup6\n        /* \"#utility.yul\":3170:3193   */\n      sub\n        /* \"#utility.yul\":3166:3198   */\n      slt\n        /* \"#utility.yul\":3163:3282   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":3201:3280   */\n      tag_173\n      tag_98\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3163:3282   */\n    tag_172:\n        /* \"#utility.yul\":3321:3322   */\n      0x00\n        /* \"#utility.yul\":3346:3399   */\n      tag_174\n        /* \"#utility.yul\":3391:3398   */\n      dup6\n        /* \"#utility.yul\":3382:3388   */\n      dup3\n        /* \"#utility.yul\":3371:3380   */\n      dup7\n        /* \"#utility.yul\":3367:3389   */\n      add\n        /* \"#utility.yul\":3346:3399   */\n      tag_103\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3336:3399   */\n      swap3\n      pop\n        /* \"#utility.yul\":3292:3409   */\n      pop\n        /* \"#utility.yul\":3476:3478   */\n      0x20\n        /* \"#utility.yul\":3465:3474   */\n      dup4\n        /* \"#utility.yul\":3461:3479   */\n      add\n        /* \"#utility.yul\":3448:3480   */\n      calldataload\n        /* \"#utility.yul\":3507:3525   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3499:3505   */\n      dup2\n        /* \"#utility.yul\":3496:3526   */\n      gt\n        /* \"#utility.yul\":3493:3610   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":3529:3608   */\n      tag_176\n      tag_99\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3493:3610   */\n    tag_175:\n        /* \"#utility.yul\":3634:3697   */\n      tag_177\n        /* \"#utility.yul\":3689:3696   */\n      dup6\n        /* \"#utility.yul\":3680:3686   */\n      dup3\n        /* \"#utility.yul\":3669:3678   */\n      dup7\n        /* \"#utility.yul\":3665:3687   */\n      add\n        /* \"#utility.yul\":3634:3697   */\n      tag_113\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3624:3697   */\n      swap2\n      pop\n        /* \"#utility.yul\":3419:3707   */\n      pop\n        /* \"#utility.yul\":3060:3714   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3720:3797   */\n    tag_114:\n        /* \"#utility.yul\":3757:3764   */\n      0x00\n        /* \"#utility.yul\":3786:3791   */\n      dup2\n        /* \"#utility.yul\":3775:3791   */\n      swap1\n      pop\n        /* \"#utility.yul\":3720:3797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3803:3921   */\n    tag_115:\n        /* \"#utility.yul\":3890:3914   */\n      tag_180\n        /* \"#utility.yul\":3908:3913   */\n      dup2\n        /* \"#utility.yul\":3890:3914   */\n      tag_114\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3885:3888   */\n      dup3\n        /* \"#utility.yul\":3878:3915   */\n      mstore\n        /* \"#utility.yul\":3803:3921   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3927:4149   */\n    tag_19:\n        /* \"#utility.yul\":4020:4024   */\n      0x00\n        /* \"#utility.yul\":4058:4060   */\n      0x20\n        /* \"#utility.yul\":4047:4056   */\n      dup3\n        /* \"#utility.yul\":4043:4061   */\n      add\n        /* \"#utility.yul\":4035:4061   */\n      swap1\n      pop\n        /* \"#utility.yul\":4071:4142   */\n      tag_182\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4128:4137   */\n      dup4\n        /* \"#utility.yul\":4124:4141   */\n      add\n        /* \"#utility.yul\":4115:4121   */\n      dup5\n        /* \"#utility.yul\":4071:4142   */\n      tag_115\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3927:4149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4155:4664   */\n    tag_27:\n        /* \"#utility.yul\":4224:4230   */\n      0x00\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4261:4270   */\n      dup3\n        /* \"#utility.yul\":4252:4259   */\n      dup5\n        /* \"#utility.yul\":4248:4271   */\n      sub\n        /* \"#utility.yul\":4244:4276   */\n      slt\n        /* \"#utility.yul\":4241:4360   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":4279:4358   */\n      tag_185\n      tag_98\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4241:4360   */\n    tag_184:\n        /* \"#utility.yul\":4427:4428   */\n      0x00\n        /* \"#utility.yul\":4416:4425   */\n      dup3\n        /* \"#utility.yul\":4412:4429   */\n      add\n        /* \"#utility.yul\":4399:4430   */\n      calldataload\n        /* \"#utility.yul\":4457:4475   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4449:4455   */\n      dup2\n        /* \"#utility.yul\":4446:4476   */\n      gt\n        /* \"#utility.yul\":4443:4560   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4479:4558   */\n      tag_187\n      tag_99\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4443:4560   */\n    tag_186:\n        /* \"#utility.yul\":4584:4647   */\n      tag_188\n        /* \"#utility.yul\":4639:4646   */\n      dup5\n        /* \"#utility.yul\":4630:4636   */\n      dup3\n        /* \"#utility.yul\":4619:4628   */\n      dup6\n        /* \"#utility.yul\":4615:4637   */\n      add\n        /* \"#utility.yul\":4584:4647   */\n      tag_113\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4574:4647   */\n      swap2\n      pop\n        /* \"#utility.yul\":4370:4657   */\n      pop\n        /* \"#utility.yul\":4155:4664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4670:4788   */\n    tag_116:\n        /* \"#utility.yul\":4757:4781   */\n      tag_190\n        /* \"#utility.yul\":4775:4780   */\n      dup2\n        /* \"#utility.yul\":4757:4781   */\n      tag_101\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4752:4755   */\n      dup3\n        /* \"#utility.yul\":4745:4782   */\n      mstore\n        /* \"#utility.yul\":4670:4788   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4794:5016   */\n    tag_42:\n        /* \"#utility.yul\":4887:4891   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x20\n        /* \"#utility.yul\":4914:4923   */\n      dup3\n        /* \"#utility.yul\":4910:4928   */\n      add\n        /* \"#utility.yul\":4902:4928   */\n      swap1\n      pop\n        /* \"#utility.yul\":4938:5009   */\n      tag_192\n        /* \"#utility.yul\":5006:5007   */\n      0x00\n        /* \"#utility.yul\":4995:5004   */\n      dup4\n        /* \"#utility.yul\":4991:5008   */\n      add\n        /* \"#utility.yul\":4982:4988   */\n      dup5\n        /* \"#utility.yul\":4938:5009   */\n      tag_116\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4794:5016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5022:5144   */\n    tag_117:\n        /* \"#utility.yul\":5095:5119   */\n      tag_194\n        /* \"#utility.yul\":5113:5118   */\n      dup2\n        /* \"#utility.yul\":5095:5119   */\n      tag_114\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5088:5093   */\n      dup2\n        /* \"#utility.yul\":5085:5120   */\n      eq\n        /* \"#utility.yul\":5075:5138   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":5134:5135   */\n      0x00\n        /* \"#utility.yul\":5131:5132   */\n      dup1\n        /* \"#utility.yul\":5124:5136   */\n      revert\n        /* \"#utility.yul\":5075:5138   */\n    tag_195:\n        /* \"#utility.yul\":5022:5144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5150:5289   */\n    tag_118:\n        /* \"#utility.yul\":5196:5201   */\n      0x00\n        /* \"#utility.yul\":5234:5240   */\n      dup2\n        /* \"#utility.yul\":5221:5241   */\n      calldataload\n        /* \"#utility.yul\":5212:5241   */\n      swap1\n      pop\n        /* \"#utility.yul\":5250:5283   */\n      tag_197\n        /* \"#utility.yul\":5277:5282   */\n      dup2\n        /* \"#utility.yul\":5250:5283   */\n      tag_117\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5150:5289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5295:6094   */\n    tag_50:\n        /* \"#utility.yul\":5382:5388   */\n      0x00\n        /* \"#utility.yul\":5390:5396   */\n      dup1\n        /* \"#utility.yul\":5398:5404   */\n      0x00\n        /* \"#utility.yul\":5447:5449   */\n      0x60\n        /* \"#utility.yul\":5435:5444   */\n      dup5\n        /* \"#utility.yul\":5426:5433   */\n      dup7\n        /* \"#utility.yul\":5422:5445   */\n      sub\n        /* \"#utility.yul\":5418:5450   */\n      slt\n        /* \"#utility.yul\":5415:5534   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":5453:5532   */\n      tag_200\n      tag_98\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5415:5534   */\n    tag_199:\n        /* \"#utility.yul\":5573:5574   */\n      0x00\n        /* \"#utility.yul\":5598:5651   */\n      tag_201\n        /* \"#utility.yul\":5643:5650   */\n      dup7\n        /* \"#utility.yul\":5634:5640   */\n      dup3\n        /* \"#utility.yul\":5623:5632   */\n      dup8\n        /* \"#utility.yul\":5619:5641   */\n      add\n        /* \"#utility.yul\":5598:5651   */\n      tag_103\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5588:5651   */\n      swap4\n      pop\n        /* \"#utility.yul\":5544:5661   */\n      pop\n        /* \"#utility.yul\":5728:5730   */\n      0x20\n        /* \"#utility.yul\":5717:5726   */\n      dup5\n        /* \"#utility.yul\":5713:5731   */\n      add\n        /* \"#utility.yul\":5700:5732   */\n      calldataload\n        /* \"#utility.yul\":5759:5777   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5751:5757   */\n      dup2\n        /* \"#utility.yul\":5748:5778   */\n      gt\n        /* \"#utility.yul\":5745:5862   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":5781:5860   */\n      tag_203\n      tag_99\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5745:5862   */\n    tag_202:\n        /* \"#utility.yul\":5886:5949   */\n      tag_204\n        /* \"#utility.yul\":5941:5948   */\n      dup7\n        /* \"#utility.yul\":5932:5938   */\n      dup3\n        /* \"#utility.yul\":5921:5930   */\n      dup8\n        /* \"#utility.yul\":5917:5939   */\n      add\n        /* \"#utility.yul\":5886:5949   */\n      tag_113\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5876:5949   */\n      swap3\n      pop\n        /* \"#utility.yul\":5671:5959   */\n      pop\n        /* \"#utility.yul\":5998:6000   */\n      0x40\n        /* \"#utility.yul\":6024:6077   */\n      tag_205\n        /* \"#utility.yul\":6069:6076   */\n      dup7\n        /* \"#utility.yul\":6060:6066   */\n      dup3\n        /* \"#utility.yul\":6049:6058   */\n      dup8\n        /* \"#utility.yul\":6045:6067   */\n      add\n        /* \"#utility.yul\":6024:6077   */\n      tag_118\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6014:6077   */\n      swap2\n      pop\n        /* \"#utility.yul\":5969:6087   */\n      pop\n        /* \"#utility.yul\":5295:6094   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6100:6199   */\n    tag_119:\n        /* \"#utility.yul\":6152:6158   */\n      0x00\n        /* \"#utility.yul\":6186:6191   */\n      dup2\n        /* \"#utility.yul\":6180:6192   */\n      mload\n        /* \"#utility.yul\":6170:6192   */\n      swap1\n      pop\n        /* \"#utility.yul\":6100:6199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6205:6353   */\n    tag_120:\n        /* \"#utility.yul\":6307:6318   */\n      0x00\n        /* \"#utility.yul\":6344:6347   */\n      dup2\n        /* \"#utility.yul\":6329:6347   */\n      swap1\n      pop\n        /* \"#utility.yul\":6205:6353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6359:6605   */\n    tag_121:\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6450:6563   */\n    tag_209:\n        /* \"#utility.yul\":6464:6470   */\n      dup4\n        /* \"#utility.yul\":6461:6462   */\n      dup2\n        /* \"#utility.yul\":6458:6471   */\n      lt\n        /* \"#utility.yul\":6450:6563   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6549:6550   */\n      dup1\n        /* \"#utility.yul\":6544:6547   */\n      dup3\n        /* \"#utility.yul\":6540:6551   */\n      add\n        /* \"#utility.yul\":6534:6552   */\n      mload\n        /* \"#utility.yul\":6530:6531   */\n      dup2\n        /* \"#utility.yul\":6525:6528   */\n      dup5\n        /* \"#utility.yul\":6521:6532   */\n      add\n        /* \"#utility.yul\":6514:6553   */\n      mstore\n        /* \"#utility.yul\":6486:6488   */\n      0x20\n        /* \"#utility.yul\":6483:6484   */\n      dup2\n        /* \"#utility.yul\":6479:6489   */\n      add\n        /* \"#utility.yul\":6474:6489   */\n      swap1\n      pop\n        /* \"#utility.yul\":6450:6563   */\n      jump(tag_209)\n    tag_211:\n        /* \"#utility.yul\":6597:6598   */\n      0x00\n        /* \"#utility.yul\":6588:6594   */\n      dup5\n        /* \"#utility.yul\":6583:6586   */\n      dup5\n        /* \"#utility.yul\":6579:6595   */\n      add\n        /* \"#utility.yul\":6572:6599   */\n      mstore\n        /* \"#utility.yul\":6421:6605   */\n      pop\n        /* \"#utility.yul\":6359:6605   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6611:7001   */\n    tag_122:\n        /* \"#utility.yul\":6717:6720   */\n      0x00\n        /* \"#utility.yul\":6745:6784   */\n      tag_213\n        /* \"#utility.yul\":6778:6783   */\n      dup3\n        /* \"#utility.yul\":6745:6784   */\n      tag_119\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6800:6889   */\n      tag_214\n        /* \"#utility.yul\":6882:6888   */\n      dup2\n        /* \"#utility.yul\":6877:6880   */\n      dup6\n        /* \"#utility.yul\":6800:6889   */\n      tag_120\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6793:6889   */\n      swap4\n      pop\n        /* \"#utility.yul\":6898:6963   */\n      tag_215\n        /* \"#utility.yul\":6956:6962   */\n      dup2\n        /* \"#utility.yul\":6951:6954   */\n      dup6\n        /* \"#utility.yul\":6944:6948   */\n      0x20\n        /* \"#utility.yul\":6937:6942   */\n      dup7\n        /* \"#utility.yul\":6933:6949   */\n      add\n        /* \"#utility.yul\":6898:6963   */\n      tag_121\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6988:6994   */\n      dup1\n        /* \"#utility.yul\":6983:6986   */\n      dup5\n        /* \"#utility.yul\":6979:6995   */\n      add\n        /* \"#utility.yul\":6972:6995   */\n      swap2\n      pop\n        /* \"#utility.yul\":6721:7001   */\n      pop\n        /* \"#utility.yul\":6611:7001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7007:7282   */\n    tag_62:\n        /* \"#utility.yul\":7139:7142   */\n      0x00\n        /* \"#utility.yul\":7161:7256   */\n      tag_217\n        /* \"#utility.yul\":7252:7255   */\n      dup3\n        /* \"#utility.yul\":7243:7249   */\n      dup5\n        /* \"#utility.yul\":7161:7256   */\n      tag_122\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7154:7256   */\n      swap2\n      pop\n        /* \"#utility.yul\":7273:7276   */\n      dup2\n        /* \"#utility.yul\":7266:7276   */\n      swap1\n      pop\n        /* \"#utility.yul\":7007:7282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7288:7468   */\n    tag_123:\n        /* \"#utility.yul\":7336:7413   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7333:7334   */\n      0x00\n        /* \"#utility.yul\":7326:7414   */\n      mstore\n        /* \"#utility.yul\":7433:7437   */\n      0x11\n        /* \"#utility.yul\":7430:7431   */\n      0x04\n        /* \"#utility.yul\":7423:7438   */\n      mstore\n        /* \"#utility.yul\":7457:7461   */\n      0x24\n        /* \"#utility.yul\":7454:7455   */\n      0x00\n        /* \"#utility.yul\":7447:7462   */\n      revert\n        /* \"#utility.yul\":7474:7576   */\n    tag_124:\n        /* \"#utility.yul\":7516:7524   */\n      0x00\n        /* \"#utility.yul\":7563:7568   */\n      dup2\n        /* \"#utility.yul\":7560:7561   */\n      0x01\n        /* \"#utility.yul\":7556:7569   */\n      shr\n        /* \"#utility.yul\":7535:7569   */\n      swap1\n      pop\n        /* \"#utility.yul\":7474:7576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7582:8430   */\n    tag_125:\n        /* \"#utility.yul\":7643:7648   */\n      0x00\n        /* \"#utility.yul\":7650:7654   */\n      dup1\n        /* \"#utility.yul\":7674:7680   */\n      dup3\n        /* \"#utility.yul\":7665:7680   */\n      swap2\n      pop\n        /* \"#utility.yul\":7698:7703   */\n      dup4\n        /* \"#utility.yul\":7689:7703   */\n      swap1\n      pop\n        /* \"#utility.yul\":7712:8424   */\n    tag_221:\n        /* \"#utility.yul\":7733:7734   */\n      0x01\n        /* \"#utility.yul\":7723:7731   */\n      dup6\n        /* \"#utility.yul\":7720:7735   */\n      gt\n        /* \"#utility.yul\":7712:8424   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":7828:7832   */\n      dup1\n        /* \"#utility.yul\":7823:7826   */\n      dup7\n        /* \"#utility.yul\":7819:7833   */\n      div\n        /* \"#utility.yul\":7813:7817   */\n      dup2\n        /* \"#utility.yul\":7810:7834   */\n      gt\n        /* \"#utility.yul\":7807:7857   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":7837:7855   */\n      tag_225\n      tag_123\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7807:7857   */\n    tag_224:\n        /* \"#utility.yul\":7887:7888   */\n      0x01\n        /* \"#utility.yul\":7877:7885   */\n      dup6\n        /* \"#utility.yul\":7873:7889   */\n      and\n        /* \"#utility.yul\":7870:8321   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":8302:8306   */\n      dup1\n        /* \"#utility.yul\":8295:8300   */\n      dup3\n        /* \"#utility.yul\":8291:8307   */\n      mul\n        /* \"#utility.yul\":8282:8307   */\n      swap2\n      pop\n        /* \"#utility.yul\":7870:8321   */\n    tag_226:\n        /* \"#utility.yul\":8352:8356   */\n      dup1\n        /* \"#utility.yul\":8346:8350   */\n      dup2\n        /* \"#utility.yul\":8342:8357   */\n      mul\n        /* \"#utility.yul\":8334:8357   */\n      swap1\n      pop\n        /* \"#utility.yul\":8382:8414   */\n      tag_227\n        /* \"#utility.yul\":8405:8413   */\n      dup6\n        /* \"#utility.yul\":8382:8414   */\n      tag_124\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":8370:8414   */\n      swap5\n      pop\n        /* \"#utility.yul\":7712:8424   */\n      jump(tag_221)\n    tag_223:\n        /* \"#utility.yul\":7582:8430   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8436:9509   */\n    tag_126:\n        /* \"#utility.yul\":8490:8495   */\n      0x00\n        /* \"#utility.yul\":8681:8689   */\n      dup3\n        /* \"#utility.yul\":8671:8711   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":8702:8703   */\n      0x01\n        /* \"#utility.yul\":8693:8703   */\n      swap1\n      pop\n        /* \"#utility.yul\":8704:8709   */\n      jump(tag_228)\n        /* \"#utility.yul\":8671:8711   */\n    tag_229:\n        /* \"#utility.yul\":8730:8734   */\n      dup2\n        /* \"#utility.yul\":8720:8756   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":8747:8748   */\n      0x00\n        /* \"#utility.yul\":8738:8748   */\n      swap1\n      pop\n        /* \"#utility.yul\":8749:8754   */\n      jump(tag_228)\n        /* \"#utility.yul\":8720:8756   */\n    tag_230:\n        /* \"#utility.yul\":8816:8820   */\n      dup2\n        /* \"#utility.yul\":8864:8865   */\n      0x01\n        /* \"#utility.yul\":8859:8886   */\n      dup2\n      eq\n      tag_232\n      jumpi\n        /* \"#utility.yul\":8900:8901   */\n      0x02\n        /* \"#utility.yul\":8895:9086   */\n      dup2\n      eq\n      tag_233\n      jumpi\n        /* \"#utility.yul\":8809:9086   */\n      jump(tag_231)\n        /* \"#utility.yul\":8859:8886   */\n    tag_232:\n        /* \"#utility.yul\":8877:8878   */\n      0x01\n        /* \"#utility.yul\":8868:8878   */\n      swap2\n      pop\n        /* \"#utility.yul\":8879:8884   */\n      pop\n      jump(tag_228)\n        /* \"#utility.yul\":8895:9086   */\n    tag_233:\n        /* \"#utility.yul\":8940:8943   */\n      0xff\n        /* \"#utility.yul\":8930:8938   */\n      dup5\n        /* \"#utility.yul\":8927:8944   */\n      gt\n        /* \"#utility.yul\":8924:8967   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":8947:8965   */\n      tag_235\n      tag_123\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8924:8967   */\n    tag_234:\n        /* \"#utility.yul\":8996:9004   */\n      dup4\n        /* \"#utility.yul\":8993:8994   */\n      0x02\n        /* \"#utility.yul\":8989:9005   */\n      exp\n        /* \"#utility.yul\":8980:9005   */\n      swap2\n      pop\n        /* \"#utility.yul\":9031:9034   */\n      dup5\n        /* \"#utility.yul\":9024:9029   */\n      dup3\n        /* \"#utility.yul\":9021:9035   */\n      gt\n        /* \"#utility.yul\":9018:9058   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":9038:9056   */\n      tag_237\n      tag_123\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9018:9058   */\n    tag_236:\n        /* \"#utility.yul\":9071:9076   */\n      pop\n      jump(tag_228)\n        /* \"#utility.yul\":8809:9086   */\n    tag_231:\n      pop\n        /* \"#utility.yul\":9195:9197   */\n      0x20\n        /* \"#utility.yul\":9185:9193   */\n      dup4\n        /* \"#utility.yul\":9182:9198   */\n      lt\n        /* \"#utility.yul\":9176:9179   */\n      0x0133\n        /* \"#utility.yul\":9170:9174   */\n      dup4\n        /* \"#utility.yul\":9167:9180   */\n      lt\n        /* \"#utility.yul\":9163:9199   */\n      and\n        /* \"#utility.yul\":9145:9147   */\n      0x4e\n        /* \"#utility.yul\":9135:9143   */\n      dup5\n        /* \"#utility.yul\":9132:9148   */\n      lt\n        /* \"#utility.yul\":9127:9129   */\n      0x0b\n        /* \"#utility.yul\":9121:9125   */\n      dup5\n        /* \"#utility.yul\":9118:9130   */\n      lt\n        /* \"#utility.yul\":9114:9149   */\n      and\n        /* \"#utility.yul\":9098:9209   */\n      or\n        /* \"#utility.yul\":9095:9341   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":9251:9259   */\n      dup3\n        /* \"#utility.yul\":9245:9249   */\n      dup3\n        /* \"#utility.yul\":9241:9260   */\n      exp\n        /* \"#utility.yul\":9232:9260   */\n      swap1\n      pop\n        /* \"#utility.yul\":9286:9289   */\n      dup4\n        /* \"#utility.yul\":9279:9284   */\n      dup2\n        /* \"#utility.yul\":9276:9290   */\n      gt\n        /* \"#utility.yul\":9273:9313   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":9293:9311   */\n      tag_240\n      tag_123\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9273:9313   */\n    tag_239:\n        /* \"#utility.yul\":9326:9331   */\n      jump(tag_228)\n        /* \"#utility.yul\":9095:9341   */\n    tag_238:\n        /* \"#utility.yul\":9366:9408   */\n      tag_241\n        /* \"#utility.yul\":9404:9407   */\n      dup5\n        /* \"#utility.yul\":9394:9402   */\n      dup5\n        /* \"#utility.yul\":9388:9392   */\n      dup5\n        /* \"#utility.yul\":9385:9386   */\n      0x01\n        /* \"#utility.yul\":9366:9408   */\n      tag_125\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":9351:9408   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":9440:9444   */\n      dup2\n        /* \"#utility.yul\":9435:9438   */\n      dup5\n        /* \"#utility.yul\":9431:9445   */\n      div\n        /* \"#utility.yul\":9424:9429   */\n      dup2\n        /* \"#utility.yul\":9421:9446   */\n      gt\n        /* \"#utility.yul\":9418:9469   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":9449:9467   */\n      tag_243\n      tag_123\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9418:9469   */\n    tag_242:\n        /* \"#utility.yul\":9498:9502   */\n      dup2\n        /* \"#utility.yul\":9491:9496   */\n      dup2\n        /* \"#utility.yul\":9487:9503   */\n      mul\n        /* \"#utility.yul\":9478:9503   */\n      swap1\n      pop\n        /* \"#utility.yul\":8436:9509   */\n    tag_228:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9515:9800   */\n    tag_77:\n        /* \"#utility.yul\":9575:9580   */\n      0x00\n        /* \"#utility.yul\":9599:9622   */\n      tag_245\n        /* \"#utility.yul\":9617:9621   */\n      dup3\n        /* \"#utility.yul\":9599:9622   */\n      tag_114\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9591:9622   */\n      swap2\n      pop\n        /* \"#utility.yul\":9643:9670   */\n      tag_246\n        /* \"#utility.yul\":9661:9669   */\n      dup4\n        /* \"#utility.yul\":9643:9670   */\n      tag_114\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9631:9670   */\n      swap3\n      pop\n        /* \"#utility.yul\":9689:9793   */\n      tag_247\n        /* \"#utility.yul\":9726:9792   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9716:9724   */\n      dup5\n        /* \"#utility.yul\":9710:9714   */\n      dup5\n        /* \"#utility.yul\":9689:9793   */\n      tag_126\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9680:9793   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9806:9986   */\n    tag_127:\n        /* \"#utility.yul\":9854:9931   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9851:9852   */\n      0x00\n        /* \"#utility.yul\":9844:9932   */\n      mstore\n        /* \"#utility.yul\":9951:9955   */\n      0x12\n        /* \"#utility.yul\":9948:9949   */\n      0x04\n        /* \"#utility.yul\":9941:9956   */\n      mstore\n        /* \"#utility.yul\":9975:9979   */\n      0x24\n        /* \"#utility.yul\":9972:9973   */\n      0x00\n        /* \"#utility.yul\":9965:9980   */\n      revert\n        /* \"#utility.yul\":9992:10177   */\n    tag_79:\n        /* \"#utility.yul\":10032:10033   */\n      0x00\n        /* \"#utility.yul\":10049:10069   */\n      tag_250\n        /* \"#utility.yul\":10067:10068   */\n      dup3\n        /* \"#utility.yul\":10049:10069   */\n      tag_114\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":10044:10069   */\n      swap2\n      pop\n        /* \"#utility.yul\":10083:10103   */\n      tag_251\n        /* \"#utility.yul\":10101:10102   */\n      dup4\n        /* \"#utility.yul\":10083:10103   */\n      tag_114\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":10078:10103   */\n      swap3\n      pop\n        /* \"#utility.yul\":10122:10123   */\n      dup3\n        /* \"#utility.yul\":10112:10147   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":10127:10145   */\n      tag_253\n      tag_127\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":10112:10147   */\n    tag_252:\n        /* \"#utility.yul\":10169:10170   */\n      dup3\n        /* \"#utility.yul\":10166:10167   */\n      dup3\n        /* \"#utility.yul\":10162:10171   */\n      div\n        /* \"#utility.yul\":10157:10171   */\n      swap1\n      pop\n        /* \"#utility.yul\":9992:10177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10183:10352   */\n    tag_128:\n        /* \"#utility.yul\":10267:10278   */\n      0x00\n        /* \"#utility.yul\":10301:10307   */\n      dup3\n        /* \"#utility.yul\":10296:10299   */\n      dup3\n        /* \"#utility.yul\":10289:10308   */\n      mstore\n        /* \"#utility.yul\":10341:10345   */\n      0x20\n        /* \"#utility.yul\":10336:10339   */\n      dup3\n        /* \"#utility.yul\":10332:10346   */\n      add\n        /* \"#utility.yul\":10317:10346   */\n      swap1\n      pop\n        /* \"#utility.yul\":10183:10352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10358:10587   */\n    tag_129:\n        /* \"#utility.yul\":10498:10532   */\n      0x496e73756666696369656e742062616c616e636520746f207075726368617365\n        /* \"#utility.yul\":10494:10495   */\n      0x00\n        /* \"#utility.yul\":10486:10492   */\n      dup3\n        /* \"#utility.yul\":10482:10496   */\n      add\n        /* \"#utility.yul\":10475:10533   */\n      mstore\n        /* \"#utility.yul\":10567:10579   */\n      0x2074686973206974656d00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10562:10564   */\n      0x20\n        /* \"#utility.yul\":10554:10560   */\n      dup3\n        /* \"#utility.yul\":10550:10565   */\n      add\n        /* \"#utility.yul\":10543:10580   */\n      mstore\n        /* \"#utility.yul\":10358:10587   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10593:10959   */\n    tag_130:\n        /* \"#utility.yul\":10735:10738   */\n      0x00\n        /* \"#utility.yul\":10756:10823   */\n      tag_257\n        /* \"#utility.yul\":10820:10822   */\n      0x2a\n        /* \"#utility.yul\":10815:10818   */\n      dup4\n        /* \"#utility.yul\":10756:10823   */\n      tag_128\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10749:10823   */\n      swap2\n      pop\n        /* \"#utility.yul\":10832:10925   */\n      tag_258\n        /* \"#utility.yul\":10921:10924   */\n      dup3\n        /* \"#utility.yul\":10832:10925   */\n      tag_129\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10950:10952   */\n      0x40\n        /* \"#utility.yul\":10945:10948   */\n      dup3\n        /* \"#utility.yul\":10941:10953   */\n      add\n        /* \"#utility.yul\":10934:10953   */\n      swap1\n      pop\n        /* \"#utility.yul\":10593:10959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10965:11384   */\n    tag_82:\n        /* \"#utility.yul\":11131:11135   */\n      0x00\n        /* \"#utility.yul\":11169:11171   */\n      0x20\n        /* \"#utility.yul\":11158:11167   */\n      dup3\n        /* \"#utility.yul\":11154:11172   */\n      add\n        /* \"#utility.yul\":11146:11172   */\n      swap1\n      pop\n        /* \"#utility.yul\":11218:11227   */\n      dup2\n        /* \"#utility.yul\":11212:11216   */\n      dup2\n        /* \"#utility.yul\":11208:11228   */\n      sub\n        /* \"#utility.yul\":11204:11205   */\n      0x00\n        /* \"#utility.yul\":11193:11202   */\n      dup4\n        /* \"#utility.yul\":11189:11206   */\n      add\n        /* \"#utility.yul\":11182:11229   */\n      mstore\n        /* \"#utility.yul\":11246:11377   */\n      tag_260\n        /* \"#utility.yul\":11372:11376   */\n      dup2\n        /* \"#utility.yul\":11246:11377   */\n      tag_130\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":11238:11377   */\n      swap1\n      pop\n        /* \"#utility.yul\":10965:11384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11390:11572   */\n    tag_131:\n        /* \"#utility.yul\":11530:11564   */\n      0x536f7272792c2074686973206974656d206973206f7574206f662073746f636b\n        /* \"#utility.yul\":11526:11527   */\n      0x00\n        /* \"#utility.yul\":11518:11524   */\n      dup3\n        /* \"#utility.yul\":11514:11528   */\n      add\n        /* \"#utility.yul\":11507:11565   */\n      mstore\n        /* \"#utility.yul\":11390:11572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11578:11944   */\n    tag_132:\n        /* \"#utility.yul\":11720:11723   */\n      0x00\n        /* \"#utility.yul\":11741:11808   */\n      tag_263\n        /* \"#utility.yul\":11805:11807   */\n      0x20\n        /* \"#utility.yul\":11800:11803   */\n      dup4\n        /* \"#utility.yul\":11741:11808   */\n      tag_128\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":11734:11808   */\n      swap2\n      pop\n        /* \"#utility.yul\":11817:11910   */\n      tag_264\n        /* \"#utility.yul\":11906:11909   */\n      dup3\n        /* \"#utility.yul\":11817:11910   */\n      tag_131\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":11935:11937   */\n      0x20\n        /* \"#utility.yul\":11930:11933   */\n      dup3\n        /* \"#utility.yul\":11926:11938   */\n      add\n        /* \"#utility.yul\":11919:11938   */\n      swap1\n      pop\n        /* \"#utility.yul\":11578:11944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11950:12369   */\n    tag_86:\n        /* \"#utility.yul\":12116:12120   */\n      0x00\n        /* \"#utility.yul\":12154:12156   */\n      0x20\n        /* \"#utility.yul\":12143:12152   */\n      dup3\n        /* \"#utility.yul\":12139:12157   */\n      add\n        /* \"#utility.yul\":12131:12157   */\n      swap1\n      pop\n        /* \"#utility.yul\":12203:12212   */\n      dup2\n        /* \"#utility.yul\":12197:12201   */\n      dup2\n        /* \"#utility.yul\":12193:12213   */\n      sub\n        /* \"#utility.yul\":12189:12190   */\n      0x00\n        /* \"#utility.yul\":12178:12187   */\n      dup4\n        /* \"#utility.yul\":12174:12191   */\n      add\n        /* \"#utility.yul\":12167:12214   */\n      mstore\n        /* \"#utility.yul\":12231:12362   */\n      tag_266\n        /* \"#utility.yul\":12357:12361   */\n      dup2\n        /* \"#utility.yul\":12231:12362   */\n      tag_132\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":12223:12362   */\n      swap1\n      pop\n        /* \"#utility.yul\":11950:12369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12375:12546   */\n    tag_89:\n        /* \"#utility.yul\":12414:12417   */\n      0x00\n        /* \"#utility.yul\":12437:12461   */\n      tag_268\n        /* \"#utility.yul\":12455:12460   */\n      dup3\n        /* \"#utility.yul\":12437:12461   */\n      tag_114\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":12428:12461   */\n      swap2\n      pop\n        /* \"#utility.yul\":12483:12487   */\n      0x00\n        /* \"#utility.yul\":12476:12481   */\n      dup3\n        /* \"#utility.yul\":12473:12488   */\n      sub\n        /* \"#utility.yul\":12470:12511   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":12491:12509   */\n      tag_270\n      tag_123\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":12470:12511   */\n    tag_269:\n        /* \"#utility.yul\":12538:12539   */\n      0x01\n        /* \"#utility.yul\":12531:12536   */\n      dup3\n        /* \"#utility.yul\":12527:12540   */\n      sub\n        /* \"#utility.yul\":12520:12540   */\n      swap1\n      pop\n        /* \"#utility.yul\":12375:12546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12552:12785   */\n    tag_92:\n        /* \"#utility.yul\":12591:12594   */\n      0x00\n        /* \"#utility.yul\":12614:12638   */\n      tag_272\n        /* \"#utility.yul\":12632:12637   */\n      dup3\n        /* \"#utility.yul\":12614:12638   */\n      tag_114\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":12605:12638   */\n      swap2\n      pop\n        /* \"#utility.yul\":12660:12726   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12653:12658   */\n      dup3\n        /* \"#utility.yul\":12650:12727   */\n      sub\n        /* \"#utility.yul\":12647:12750   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":12730:12748   */\n      tag_274\n      tag_123\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":12647:12750   */\n    tag_273:\n        /* \"#utility.yul\":12777:12778   */\n      0x01\n        /* \"#utility.yul\":12770:12775   */\n      dup3\n        /* \"#utility.yul\":12766:12779   */\n      add\n        /* \"#utility.yul\":12759:12779   */\n      swap1\n      pop\n        /* \"#utility.yul\":12552:12785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122043054e472fab1c440231f959bf6fe57101e67d0d3c681e852171b3ed7421667864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1474": {
									"entryPoint": null,
									"id": 1474,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setInventory_1492": {
									"entryPoint": 305,
									"id": 1492,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1192:4",
										"nodeType": "YulBlock",
										"src": "0:1192:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:4",
													"nodeType": "YulBlock",
													"src": "66:40:4",
													"statements": [
														{
															"nativeSrc": "77:22:4",
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:4"
																},
																"nativeSrc": "87:12:4",
																"nodeType": "YulFunctionCall",
																"src": "87:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:4",
														"nodeType": "YulTypedName",
														"src": "49:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:4",
														"nodeType": "YulTypedName",
														"src": "59:6:4",
														"type": ""
													}
												],
												"src": "7:99:4"
											},
											{
												"body": {
													"nativeSrc": "226:34:4",
													"nodeType": "YulBlock",
													"src": "226:34:4",
													"statements": [
														{
															"nativeSrc": "236:18:4",
															"nodeType": "YulAssignment",
															"src": "236:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "251:3:4",
																"nodeType": "YulIdentifier",
																"src": "251:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "236:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "236:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "112:148:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "198:3:4",
														"nodeType": "YulTypedName",
														"src": "198:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "203:6:4",
														"nodeType": "YulTypedName",
														"src": "203:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "214:11:4",
														"nodeType": "YulTypedName",
														"src": "214:11:4",
														"type": ""
													}
												],
												"src": "112:148:4"
											},
											{
												"body": {
													"nativeSrc": "328:184:4",
													"nodeType": "YulBlock",
													"src": "328:184:4",
													"statements": [
														{
															"nativeSrc": "338:10:4",
															"nodeType": "YulVariableDeclaration",
															"src": "338:10:4",
															"value": {
																"kind": "number",
																"nativeSrc": "347:1:4",
																"nodeType": "YulLiteral",
																"src": "347:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "342:1:4",
																	"nodeType": "YulTypedName",
																	"src": "342:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "407:63:4",
																"nodeType": "YulBlock",
																"src": "407:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "432:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "432:3:4"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "437:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "437:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "428:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "428:3:4"
																					},
																					"nativeSrc": "428:11:4",
																					"nodeType": "YulFunctionCall",
																					"src": "428:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "451:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "451:3:4"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "456:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "456:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "447:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "447:3:4"
																							},
																							"nativeSrc": "447:11:4",
																							"nodeType": "YulFunctionCall",
																							"src": "447:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "441:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "441:5:4"
																					},
																					"nativeSrc": "441:18:4",
																					"nodeType": "YulFunctionCall",
																					"src": "441:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "421:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "421:6:4"
																			},
																			"nativeSrc": "421:39:4",
																			"nodeType": "YulFunctionCall",
																			"src": "421:39:4"
																		},
																		"nativeSrc": "421:39:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "421:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "368:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "368:1:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "371:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "371:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "365:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "365:2:4"
																},
																"nativeSrc": "365:13:4",
																"nodeType": "YulFunctionCall",
																"src": "365:13:4"
															},
															"nativeSrc": "357:113:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "379:19:4",
																"nodeType": "YulBlock",
																"src": "379:19:4",
																"statements": [
																	{
																		"nativeSrc": "381:15:4",
																		"nodeType": "YulAssignment",
																		"src": "381:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "390:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "390:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "393:2:4",
																					"nodeType": "YulLiteral",
																					"src": "393:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "386:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "386:3:4"
																			},
																			"nativeSrc": "386:10:4",
																			"nodeType": "YulFunctionCall",
																			"src": "386:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "381:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "381:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "361:3:4",
																"nodeType": "YulBlock",
																"src": "361:3:4",
																"statements": []
															},
															"src": "357:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "490:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "490:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "495:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "486:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:4"
																		},
																		"nativeSrc": "486:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "486:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "504:1:4",
																		"nodeType": "YulLiteral",
																		"src": "504:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "479:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "479:6:4"
																},
																"nativeSrc": "479:27:4",
																"nodeType": "YulFunctionCall",
																"src": "479:27:4"
															},
															"nativeSrc": "479:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "479:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "266:246:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "310:3:4",
														"nodeType": "YulTypedName",
														"src": "310:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "315:3:4",
														"nodeType": "YulTypedName",
														"src": "315:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "320:6:4",
														"nodeType": "YulTypedName",
														"src": "320:6:4",
														"type": ""
													}
												],
												"src": "266:246:4"
											},
											{
												"body": {
													"nativeSrc": "628:280:4",
													"nodeType": "YulBlock",
													"src": "628:280:4",
													"statements": [
														{
															"nativeSrc": "638:53:4",
															"nodeType": "YulVariableDeclaration",
															"src": "638:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "685:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "685:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "652:32:4",
																	"nodeType": "YulIdentifier",
																	"src": "652:32:4"
																},
																"nativeSrc": "652:39:4",
																"nodeType": "YulFunctionCall",
																"src": "652:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "642:6:4",
																	"nodeType": "YulTypedName",
																	"src": "642:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "700:96:4",
															"nodeType": "YulAssignment",
															"src": "700:96:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "784:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "789:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "789:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "707:76:4",
																	"nodeType": "YulIdentifier",
																	"src": "707:76:4"
																},
																"nativeSrc": "707:89:4",
																"nodeType": "YulFunctionCall",
																"src": "707:89:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "700:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "844:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "844:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "851:4:4",
																				"nodeType": "YulLiteral",
																				"src": "851:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:4"
																		},
																		"nativeSrc": "840:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "840:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "858:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "858:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "863:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "863:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "805:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "805:34:4"
																},
																"nativeSrc": "805:65:4",
																"nodeType": "YulFunctionCall",
																"src": "805:65:4"
															},
															"nativeSrc": "805:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "805:65:4"
														},
														{
															"nativeSrc": "879:23:4",
															"nodeType": "YulAssignment",
															"src": "879:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "890:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "890:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "895:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "895:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "886:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:4"
																},
																"nativeSrc": "886:16:4",
																"nodeType": "YulFunctionCall",
																"src": "886:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "879:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "879:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "518:390:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:4",
														"nodeType": "YulTypedName",
														"src": "609:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "616:3:4",
														"nodeType": "YulTypedName",
														"src": "616:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "624:3:4",
														"nodeType": "YulTypedName",
														"src": "624:3:4",
														"type": ""
													}
												],
												"src": "518:390:4"
											},
											{
												"body": {
													"nativeSrc": "1050:139:4",
													"nodeType": "YulBlock",
													"src": "1050:139:4",
													"statements": [
														{
															"nativeSrc": "1061:102:4",
															"nodeType": "YulAssignment",
															"src": "1061:102:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1150:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1150:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1159:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1159:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1068:81:4",
																	"nodeType": "YulIdentifier",
																	"src": "1068:81:4"
																},
																"nativeSrc": "1068:95:4",
																"nodeType": "YulFunctionCall",
																"src": "1068:95:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1061:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1061:3:4"
																}
															]
														},
														{
															"nativeSrc": "1173:10:4",
															"nodeType": "YulAssignment",
															"src": "1173:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "1180:3:4",
																"nodeType": "YulIdentifier",
																"src": "1180:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1173:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1173:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "914:275:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1029:3:4",
														"nodeType": "YulTypedName",
														"src": "1029:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1035:6:4",
														"nodeType": "YulTypedName",
														"src": "1035:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1046:3:4",
														"nodeType": "YulTypedName",
														"src": "1046:3:4",
														"type": ""
													}
												],
												"src": "914:275:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x99 ADDRESS PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6F6C205461626C6500000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA PUSH3 0x131 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE2 ADDRESS PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5461626C652054656E6E6973205461626C650000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA PUSH3 0x131 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x12B ADDRESS PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466F6F732042616C6C205461626C650000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA PUSH3 0x131 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x222 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH3 0x17F SWAP2 SWAP1 PUSH3 0x20A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1C9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1AC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1E0 DUP3 PUSH3 0x196 JUMP JUMPDEST PUSH3 0x1EC DUP2 DUP6 PUSH3 0x1A0 JUMP JUMPDEST SWAP4 POP PUSH3 0x1FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1AA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x217 DUP3 DUP5 PUSH3 0x1D4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1A DUP1 PUSH3 0x230 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB008C7E6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xB3390911 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xC386F5E9 EQ PUSH2 0x234 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x13FA9B23 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x2616ADD5 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x2CDE4C50 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x499553FB EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x59F5E0CE EQ PUSH2 0x172 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x307 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6F6C205461626C6500000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0x315 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x354 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5461626C652054656E6E6973205461626C650000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0x362 JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x3A1 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466F6F732042616C6C205461626C650000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0x3AF JUMPI PUSH1 0x6 SWAP1 POP PUSH2 0x3B3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x400 DUP3 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0xA PUSH2 0x410 SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST DUP2 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x561 SWAP1 PUSH2 0xD76 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5CF SWAP1 PUSH2 0xD9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x6AC JUMPI POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6EE DUP3 PUSH2 0x6C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FE DUP2 PUSH2 0x6E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x708 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x719 DUP2 PUSH2 0x6F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x76D DUP3 PUSH2 0x727 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x737 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79E PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH2 0x7D2 DUP3 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7FF PUSH2 0x7FA DUP5 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x723 JUMP JUMPDEST JUMPDEST PUSH2 0x826 DUP5 DUP3 DUP6 PUSH2 0x7DF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x842 JUMPI PUSH2 0x841 PUSH2 0x71F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x852 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x6BD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x87E DUP6 DUP3 DUP7 ADD PUSH2 0x70B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89F JUMPI PUSH2 0x89E PUSH2 0x6C1 JUMP JUMPDEST JUMPDEST PUSH2 0x8AB DUP6 DUP3 DUP7 ADD PUSH2 0x82E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C7 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x8BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FB JUMPI PUSH2 0x8FA PUSH2 0x6BD JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x918 JUMPI PUSH2 0x917 PUSH2 0x6C1 JUMP JUMPDEST JUMPDEST PUSH2 0x924 DUP5 DUP3 DUP6 ADD PUSH2 0x82E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x936 DUP2 PUSH2 0x6E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94F PUSH0 DUP4 ADD DUP5 PUSH2 0x92D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95E DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x968 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x979 DUP2 PUSH2 0x955 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x6BD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A3 DUP7 DUP3 DUP8 ADD PUSH2 0x70B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C4 JUMPI PUSH2 0x9C3 PUSH2 0x6C1 JUMP JUMPDEST JUMPDEST PUSH2 0x9D0 DUP7 DUP3 DUP8 ADD PUSH2 0x82E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9E1 DUP7 DUP3 DUP8 ADD PUSH2 0x96B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA1C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA01 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA31 DUP3 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0xA3B DUP2 DUP6 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP PUSH2 0xA4B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA62 DUP3 DUP5 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xAEF JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xACB JUMPI PUSH2 0xACA PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xADA JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xAE8 DUP6 PUSH2 0xA9A JUMP JUMPDEST SWAP5 POP PUSH2 0xAAF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB07 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBC2 JUMP JUMPDEST DUP2 PUSH2 0xB14 JUMPI PUSH0 SWAP1 POP PUSH2 0xBC2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB2A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB34 JUMPI PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB46 JUMPI PUSH2 0xB45 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB5D JUMPI PUSH2 0xB5C PUSH2 0xA6D JUMP JUMPDEST JUMPDEST POP PUSH2 0xBC2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB98 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xB93 JUMPI PUSH2 0xB92 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0xBA5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xAA6 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBBC JUMPI PUSH2 0xBBB PUSH2 0xA6D JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBD3 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBDE DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP PUSH2 0xC0B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC4A DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xC55 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xC13 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F207075726368617365 PUSH0 DUP3 ADD MSTORE PUSH32 0x2074686973206974656D00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCDA PUSH1 0x2A DUP4 PUSH2 0xC70 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE5 DUP3 PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD07 DUP2 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F7272792C2074686973206974656D206973206F7574206F662073746F636B PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 PUSH1 0x20 DUP4 PUSH2 0xC70 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4D DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD6F DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD80 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xD92 JUMPI PUSH2 0xD91 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA7 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xDD9 JUMPI PUSH2 0xDD8 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SDIV 0x4E SELFBALANCE 0x2F 0xAB SHR PREVRANDAO MUL BALANCE 0xF9 MSIZE 0xBF PUSH16 0xE57101E67D0D3C681E852171B3ED7421 PUSH7 0x7864736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "111:2005:3:-:0;;;683:263;;;;;;;;;;715:10;707:5;;:18;;;;;;;;;;;;;;;;;;735:45;756:4;735:45;;;;;;;;;;;;;;;;;777:2;735:12;;;:45;;:::i;:::-;824:53;845:4;824:53;;;;;;;;;;;;;;;;;874:2;824:12;;;:53;;:::i;:::-;888:50;909:4;888:50;;;;;;;;;;;;;;;;;935:2;888:12;;;:50;;:::i;:::-;111:2005;;952:139;1075:9;1046;:19;1056:8;1046:19;;;;;;;;;;;;;;;1066:5;1046:26;;;;;;:::i;:::-;;;;;;;;;;;;;:38;;;;952:139;;;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:148::-;214:11;251:3;236:18;;112:148;;;;:::o;266:246::-;347:1;357:113;371:6;368:1;365:13;357:113;;;456:1;451:3;447:11;441:18;437:1;432:3;428:11;421:39;393:2;390:1;386:10;381:15;;357:113;;;504:1;495:6;490:3;486:16;479:27;328:184;266:246;;;:::o;518:390::-;624:3;652:39;685:5;652:39;:::i;:::-;707:89;789:6;784:3;707:89;:::i;:::-;700:96;;805:65;863:6;858:3;851:4;844:5;840:16;805:65;:::i;:::-;895:6;890:3;886:16;879:23;;628:280;518:390;;;;:::o;914:275::-;1046:3;1068:95;1159:3;1150:6;1068:95;:::i;:::-;1061:102;;1180:3;1173:10;;914:275;;;;:::o;111:2005:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@equal_253": {
									"entryPoint": 1677,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@foosBallTablePrice_1438": {
									"entryPoint": 1667,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getInventory_1508": {
									"entryPoint": 606,
									"id": 1508,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPriceOf_1559": {
									"entryPoint": 710,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@inventory_1426": {
									"entryPoint": 958,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1418": {
									"entryPoint": 1496,
									"id": 1418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolTablePrice_1432": {
									"entryPoint": 705,
									"id": 1432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@purchase_1616": {
									"entryPoint": 1014,
									"id": 1616,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setInventory_1492": {
									"entryPoint": 1568,
									"id": 1492,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tableTennisPrice_1435": {
									"entryPoint": 1672,
									"id": 1435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAddress_1420": {
									"entryPoint": 1531,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2808,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56": {
									"entryPoint": 3200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12788:4",
										"nodeType": "YulBlock",
										"src": "0:12788:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "930:28:4",
													"nodeType": "YulBlock",
													"src": "930:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "947:1:4",
																		"nodeType": "YulLiteral",
																		"src": "947:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "950:1:4",
																		"nodeType": "YulLiteral",
																		"src": "950:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "940:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:4"
																},
																"nativeSrc": "940:12:4",
																"nodeType": "YulFunctionCall",
																"src": "940:12:4"
															},
															"nativeSrc": "940:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "940:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "841:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "841:117:4"
											},
											{
												"body": {
													"nativeSrc": "1053:28:4",
													"nodeType": "YulBlock",
													"src": "1053:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1070:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1070:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1073:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1073:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1063:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:4"
																},
																"nativeSrc": "1063:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1063:12:4"
															},
															"nativeSrc": "1063:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1063:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "964:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "964:117:4"
											},
											{
												"body": {
													"nativeSrc": "1135:54:4",
													"nodeType": "YulBlock",
													"src": "1135:54:4",
													"statements": [
														{
															"nativeSrc": "1145:38:4",
															"nodeType": "YulAssignment",
															"src": "1145:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1163:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1163:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1170:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1170:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1159:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:4"
																		},
																		"nativeSrc": "1159:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1159:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1179:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1179:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1175:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:4"
																		},
																		"nativeSrc": "1175:7:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1175:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1155:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1155:3:4"
																},
																"nativeSrc": "1155:28:4",
																"nodeType": "YulFunctionCall",
																"src": "1155:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1145:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1087:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1118:5:4",
														"nodeType": "YulTypedName",
														"src": "1118:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1128:6:4",
														"nodeType": "YulTypedName",
														"src": "1128:6:4",
														"type": ""
													}
												],
												"src": "1087:102:4"
											},
											{
												"body": {
													"nativeSrc": "1223:152:4",
													"nodeType": "YulBlock",
													"src": "1223:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1240:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1240:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1243:77:4",
																		"nodeType": "YulLiteral",
																		"src": "1243:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1233:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:4"
																},
																"nativeSrc": "1233:88:4",
																"nodeType": "YulFunctionCall",
																"src": "1233:88:4"
															},
															"nativeSrc": "1233:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "1233:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1337:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1340:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1330:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:4"
																},
																"nativeSrc": "1330:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1330:15:4"
															},
															"nativeSrc": "1330:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1330:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1361:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1361:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1364:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1364:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1354:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:4"
																},
																"nativeSrc": "1354:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1354:15:4"
															},
															"nativeSrc": "1354:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1354:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1195:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1195:180:4"
											},
											{
												"body": {
													"nativeSrc": "1424:238:4",
													"nodeType": "YulBlock",
													"src": "1424:238:4",
													"statements": [
														{
															"nativeSrc": "1434:58:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1434:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1456:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1456:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1486:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "1486:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1464:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "1464:21:4"
																		},
																		"nativeSrc": "1464:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1464:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1452:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1452:3:4"
																},
																"nativeSrc": "1452:40:4",
																"nodeType": "YulFunctionCall",
																"src": "1452:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1438:10:4",
																	"nodeType": "YulTypedName",
																	"src": "1438:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1603:22:4",
																"nodeType": "YulBlock",
																"src": "1603:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1605:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1605:16:4"
																			},
																			"nativeSrc": "1605:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1605:18:4"
																		},
																		"nativeSrc": "1605:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1605:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1546:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1546:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1558:18:4",
																				"nodeType": "YulLiteral",
																				"src": "1558:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1543:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1543:2:4"
																		},
																		"nativeSrc": "1543:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1582:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1582:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1594:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1594:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1579:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1579:2:4"
																		},
																		"nativeSrc": "1579:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1579:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1540:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1540:2:4"
																},
																"nativeSrc": "1540:62:4",
																"nodeType": "YulFunctionCall",
																"src": "1540:62:4"
															},
															"nativeSrc": "1537:88:4",
															"nodeType": "YulIf",
															"src": "1537:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1641:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1645:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "1645:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:4"
																},
																"nativeSrc": "1634:22:4",
																"nodeType": "YulFunctionCall",
																"src": "1634:22:4"
															},
															"nativeSrc": "1634:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "1634:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1381:281:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1410:6:4",
														"nodeType": "YulTypedName",
														"src": "1410:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1418:4:4",
														"nodeType": "YulTypedName",
														"src": "1418:4:4",
														"type": ""
													}
												],
												"src": "1381:281:4"
											},
											{
												"body": {
													"nativeSrc": "1709:88:4",
													"nodeType": "YulBlock",
													"src": "1709:88:4",
													"statements": [
														{
															"nativeSrc": "1719:30:4",
															"nodeType": "YulAssignment",
															"src": "1719:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1729:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:4"
																},
																"nativeSrc": "1729:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1729:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1719:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1778:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:4"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1786:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1758:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:4"
																},
																"nativeSrc": "1758:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1758:33:4"
															},
															"nativeSrc": "1758:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1668:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1693:4:4",
														"nodeType": "YulTypedName",
														"src": "1693:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1702:6:4",
														"nodeType": "YulTypedName",
														"src": "1702:6:4",
														"type": ""
													}
												],
												"src": "1668:129:4"
											},
											{
												"body": {
													"nativeSrc": "1870:241:4",
													"nodeType": "YulBlock",
													"src": "1870:241:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1975:22:4",
																"nodeType": "YulBlock",
																"src": "1975:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1977:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1977:16:4"
																			},
																			"nativeSrc": "1977:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1977:18:4"
																		},
																		"nativeSrc": "1977:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1947:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1947:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1955:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1955:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1944:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1944:2:4"
																},
																"nativeSrc": "1944:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1944:30:4"
															},
															"nativeSrc": "1941:56:4",
															"nodeType": "YulIf",
															"src": "1941:56:4"
														},
														{
															"nativeSrc": "2007:37:4",
															"nodeType": "YulAssignment",
															"src": "2007:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2037:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2037:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2015:21:4",
																	"nodeType": "YulIdentifier",
																	"src": "2015:21:4"
																},
																"nativeSrc": "2015:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2015:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2007:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2007:4:4"
																}
															]
														},
														{
															"nativeSrc": "2081:23:4",
															"nodeType": "YulAssignment",
															"src": "2081:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2093:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2093:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2099:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2099:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2089:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2089:3:4"
																},
																"nativeSrc": "2089:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2089:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2081:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2081:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1803:308:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1854:6:4",
														"nodeType": "YulTypedName",
														"src": "1854:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1865:4:4",
														"nodeType": "YulTypedName",
														"src": "1865:4:4",
														"type": ""
													}
												],
												"src": "1803:308:4"
											},
											{
												"body": {
													"nativeSrc": "2181:82:4",
													"nodeType": "YulBlock",
													"src": "2181:82:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2204:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2204:3:4"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2209:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2214:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2214:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2191:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2191:12:4"
																},
																"nativeSrc": "2191:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2191:30:4"
															},
															"nativeSrc": "2191:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2191:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2241:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2241:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2246:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2237:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:4"
																		},
																		"nativeSrc": "2237:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2237:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2255:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2255:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2230:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:4"
																},
																"nativeSrc": "2230:27:4",
																"nodeType": "YulFunctionCall",
																"src": "2230:27:4"
															},
															"nativeSrc": "2230:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "2230:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2117:146:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2163:3:4",
														"nodeType": "YulTypedName",
														"src": "2163:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2168:3:4",
														"nodeType": "YulTypedName",
														"src": "2168:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2173:6:4",
														"nodeType": "YulTypedName",
														"src": "2173:6:4",
														"type": ""
													}
												],
												"src": "2117:146:4"
											},
											{
												"body": {
													"nativeSrc": "2353:341:4",
													"nodeType": "YulBlock",
													"src": "2353:341:4",
													"statements": [
														{
															"nativeSrc": "2363:75:4",
															"nodeType": "YulAssignment",
															"src": "2363:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2430:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2430:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2388:41:4",
																			"nodeType": "YulIdentifier",
																			"src": "2388:41:4"
																		},
																		"nativeSrc": "2388:49:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2372:15:4",
																	"nodeType": "YulIdentifier",
																	"src": "2372:15:4"
																},
																"nativeSrc": "2372:66:4",
																"nodeType": "YulFunctionCall",
																"src": "2372:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2363:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2363:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2454:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2454:5:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2461:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2461:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2447:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2447:6:4"
																},
																"nativeSrc": "2447:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2447:21:4"
															},
															"nativeSrc": "2447:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2447:21:4"
														},
														{
															"nativeSrc": "2477:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2477:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2492:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2492:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2499:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2499:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2488:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2488:3:4"
																},
																"nativeSrc": "2488:16:4",
																"nodeType": "YulFunctionCall",
																"src": "2488:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2481:3:4",
																	"nodeType": "YulTypedName",
																	"src": "2481:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2542:83:4",
																"nodeType": "YulBlock",
																"src": "2542:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2544:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2544:77:4"
																			},
																			"nativeSrc": "2544:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2544:79:4"
																		},
																		"nativeSrc": "2544:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2544:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2523:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2523:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2528:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2528:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2519:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:4"
																		},
																		"nativeSrc": "2519:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:16:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2537:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2516:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2516:2:4"
																},
																"nativeSrc": "2516:25:4",
																"nodeType": "YulFunctionCall",
																"src": "2516:25:4"
															},
															"nativeSrc": "2513:112:4",
															"nodeType": "YulIf",
															"src": "2513:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2671:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2671:3:4"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2676:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2676:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2681:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2681:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2634:36:4",
																	"nodeType": "YulIdentifier",
																	"src": "2634:36:4"
																},
																"nativeSrc": "2634:54:4",
																"nodeType": "YulFunctionCall",
																"src": "2634:54:4"
															},
															"nativeSrc": "2634:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "2634:54:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "2269:425:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2326:3:4",
														"nodeType": "YulTypedName",
														"src": "2326:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2331:6:4",
														"nodeType": "YulTypedName",
														"src": "2331:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2339:3:4",
														"nodeType": "YulTypedName",
														"src": "2339:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2347:5:4",
														"nodeType": "YulTypedName",
														"src": "2347:5:4",
														"type": ""
													}
												],
												"src": "2269:425:4"
											},
											{
												"body": {
													"nativeSrc": "2776:278:4",
													"nodeType": "YulBlock",
													"src": "2776:278:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2825:83:4",
																"nodeType": "YulBlock",
																"src": "2825:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2827:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2827:77:4"
																			},
																			"nativeSrc": "2827:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2827:79:4"
																		},
																		"nativeSrc": "2827:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2827:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2804:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2804:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2812:4:4",
																						"nodeType": "YulLiteral",
																						"src": "2812:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2800:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2800:3:4"
																				},
																				"nativeSrc": "2800:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2800:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2819:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2819:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2796:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2796:3:4"
																		},
																		"nativeSrc": "2796:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2796:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2789:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:4"
																},
																"nativeSrc": "2789:35:4",
																"nodeType": "YulFunctionCall",
																"src": "2789:35:4"
															},
															"nativeSrc": "2786:122:4",
															"nodeType": "YulIf",
															"src": "2786:122:4"
														},
														{
															"nativeSrc": "2917:34:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2917:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2944:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2944:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2931:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2931:12:4"
																},
																"nativeSrc": "2931:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2931:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2921:6:4",
																	"nodeType": "YulTypedName",
																	"src": "2921:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2960:88:4",
															"nodeType": "YulAssignment",
															"src": "2960:88:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3021:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3021:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3029:4:4",
																				"nodeType": "YulLiteral",
																				"src": "3029:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3017:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3017:3:4"
																		},
																		"nativeSrc": "3017:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3017:17:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3036:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3036:6:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3044:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2969:47:4",
																	"nodeType": "YulIdentifier",
																	"src": "2969:47:4"
																},
																"nativeSrc": "2969:79:4",
																"nodeType": "YulFunctionCall",
																"src": "2969:79:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2960:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2960:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2714:340:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2754:6:4",
														"nodeType": "YulTypedName",
														"src": "2754:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2762:3:4",
														"nodeType": "YulTypedName",
														"src": "2762:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2770:5:4",
														"nodeType": "YulTypedName",
														"src": "2770:5:4",
														"type": ""
													}
												],
												"src": "2714:340:4"
											},
											{
												"body": {
													"nativeSrc": "3153:561:4",
													"nodeType": "YulBlock",
													"src": "3153:561:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3199:83:4",
																"nodeType": "YulBlock",
																"src": "3199:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3201:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3201:77:4"
																			},
																			"nativeSrc": "3201:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3201:79:4"
																		},
																		"nativeSrc": "3201:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3201:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3174:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3174:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3183:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3183:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3170:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3170:3:4"
																		},
																		"nativeSrc": "3170:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3170:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3195:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3195:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3166:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3166:3:4"
																},
																"nativeSrc": "3166:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3166:32:4"
															},
															"nativeSrc": "3163:119:4",
															"nodeType": "YulIf",
															"src": "3163:119:4"
														},
														{
															"nativeSrc": "3292:117:4",
															"nodeType": "YulBlock",
															"src": "3292:117:4",
															"statements": [
																{
																	"nativeSrc": "3307:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3307:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3321:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3321:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3311:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3311:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3336:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3336:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3371:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3371:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3382:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3382:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3367:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3367:3:4"
																				},
																				"nativeSrc": "3367:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3367:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3391:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3391:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3346:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3346:20:4"
																		},
																		"nativeSrc": "3346:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3346:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3336:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3336:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3419:288:4",
															"nodeType": "YulBlock",
															"src": "3419:288:4",
															"statements": [
																{
																	"nativeSrc": "3434:46:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3434:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3465:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3465:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3476:2:4",
																						"nodeType": "YulLiteral",
																						"src": "3476:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3461:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:4"
																				},
																				"nativeSrc": "3461:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3461:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3448:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "3448:12:4"
																		},
																		"nativeSrc": "3448:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3448:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3438:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3438:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3527:83:4",
																		"nodeType": "YulBlock",
																		"src": "3527:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3529:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "3529:77:4"
																					},
																					"nativeSrc": "3529:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3529:79:4"
																				},
																				"nativeSrc": "3529:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "3529:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3499:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3499:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3507:18:4",
																				"nodeType": "YulLiteral",
																				"src": "3507:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3496:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3496:2:4"
																		},
																		"nativeSrc": "3496:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3496:30:4"
																	},
																	"nativeSrc": "3493:117:4",
																	"nodeType": "YulIf",
																	"src": "3493:117:4"
																},
																{
																	"nativeSrc": "3624:73:4",
																	"nodeType": "YulAssignment",
																	"src": "3624:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3669:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3669:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3680:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3680:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3665:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3665:3:4"
																				},
																				"nativeSrc": "3665:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3665:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3689:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3689:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "3634:30:4",
																			"nodeType": "YulIdentifier",
																			"src": "3634:30:4"
																		},
																		"nativeSrc": "3634:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3634:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3624:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3624:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "3060:654:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3115:9:4",
														"nodeType": "YulTypedName",
														"src": "3115:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3126:7:4",
														"nodeType": "YulTypedName",
														"src": "3126:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3138:6:4",
														"nodeType": "YulTypedName",
														"src": "3138:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3146:6:4",
														"nodeType": "YulTypedName",
														"src": "3146:6:4",
														"type": ""
													}
												],
												"src": "3060:654:4"
											},
											{
												"body": {
													"nativeSrc": "3765:32:4",
													"nodeType": "YulBlock",
													"src": "3765:32:4",
													"statements": [
														{
															"nativeSrc": "3775:16:4",
															"nodeType": "YulAssignment",
															"src": "3775:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "3786:5:4",
																"nodeType": "YulIdentifier",
																"src": "3786:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3775:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3775:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3720:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3747:5:4",
														"nodeType": "YulTypedName",
														"src": "3747:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3757:7:4",
														"nodeType": "YulTypedName",
														"src": "3757:7:4",
														"type": ""
													}
												],
												"src": "3720:77:4"
											},
											{
												"body": {
													"nativeSrc": "3868:53:4",
													"nodeType": "YulBlock",
													"src": "3868:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3885:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3885:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3908:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3908:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3890:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "3890:17:4"
																		},
																		"nativeSrc": "3890:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3890:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3878:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3878:6:4"
																},
																"nativeSrc": "3878:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3878:37:4"
															},
															"nativeSrc": "3878:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3878:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3803:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3856:5:4",
														"nodeType": "YulTypedName",
														"src": "3856:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3863:3:4",
														"nodeType": "YulTypedName",
														"src": "3863:3:4",
														"type": ""
													}
												],
												"src": "3803:118:4"
											},
											{
												"body": {
													"nativeSrc": "4025:124:4",
													"nodeType": "YulBlock",
													"src": "4025:124:4",
													"statements": [
														{
															"nativeSrc": "4035:26:4",
															"nodeType": "YulAssignment",
															"src": "4035:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4047:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4047:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4058:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4058:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4043:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:4"
																},
																"nativeSrc": "4043:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4043:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4035:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4035:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4115:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4115:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4128:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4128:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4139:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4139:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4124:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4124:3:4"
																		},
																		"nativeSrc": "4124:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4124:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4071:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4071:43:4"
																},
																"nativeSrc": "4071:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4071:71:4"
															},
															"nativeSrc": "4071:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4071:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3927:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3997:9:4",
														"nodeType": "YulTypedName",
														"src": "3997:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4009:6:4",
														"nodeType": "YulTypedName",
														"src": "4009:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4020:4:4",
														"nodeType": "YulTypedName",
														"src": "4020:4:4",
														"type": ""
													}
												],
												"src": "3927:222:4"
											},
											{
												"body": {
													"nativeSrc": "4231:433:4",
													"nodeType": "YulBlock",
													"src": "4231:433:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4277:83:4",
																"nodeType": "YulBlock",
																"src": "4277:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4279:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "4279:77:4"
																			},
																			"nativeSrc": "4279:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4279:79:4"
																		},
																		"nativeSrc": "4279:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4279:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4252:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4252:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4261:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4261:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4248:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4248:3:4"
																		},
																		"nativeSrc": "4248:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4248:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4273:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4273:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4244:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4244:3:4"
																},
																"nativeSrc": "4244:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4244:32:4"
															},
															"nativeSrc": "4241:119:4",
															"nodeType": "YulIf",
															"src": "4241:119:4"
														},
														{
															"nativeSrc": "4370:287:4",
															"nodeType": "YulBlock",
															"src": "4370:287:4",
															"statements": [
																{
																	"nativeSrc": "4385:45:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4385:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4416:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4416:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4427:1:4",
																						"nodeType": "YulLiteral",
																						"src": "4427:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4412:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4412:3:4"
																				},
																				"nativeSrc": "4412:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4412:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4399:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "4399:12:4"
																		},
																		"nativeSrc": "4399:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4389:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4389:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4477:83:4",
																		"nodeType": "YulBlock",
																		"src": "4477:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4479:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "4479:77:4"
																					},
																					"nativeSrc": "4479:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "4479:79:4"
																				},
																				"nativeSrc": "4479:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "4479:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4449:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4449:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:18:4",
																				"nodeType": "YulLiteral",
																				"src": "4457:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4446:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4446:2:4"
																		},
																		"nativeSrc": "4446:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4446:30:4"
																	},
																	"nativeSrc": "4443:117:4",
																	"nodeType": "YulIf",
																	"src": "4443:117:4"
																},
																{
																	"nativeSrc": "4574:73:4",
																	"nodeType": "YulAssignment",
																	"src": "4574:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4619:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4619:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4630:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4630:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4615:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4615:3:4"
																				},
																				"nativeSrc": "4615:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4615:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4639:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4639:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4584:30:4",
																			"nodeType": "YulIdentifier",
																			"src": "4584:30:4"
																		},
																		"nativeSrc": "4584:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4584:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4574:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4574:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "4155:509:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4201:9:4",
														"nodeType": "YulTypedName",
														"src": "4201:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4212:7:4",
														"nodeType": "YulTypedName",
														"src": "4212:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4224:6:4",
														"nodeType": "YulTypedName",
														"src": "4224:6:4",
														"type": ""
													}
												],
												"src": "4155:509:4"
											},
											{
												"body": {
													"nativeSrc": "4735:53:4",
													"nodeType": "YulBlock",
													"src": "4735:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4752:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4752:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4775:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4775:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4757:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "4757:17:4"
																		},
																		"nativeSrc": "4757:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4757:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4745:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:4"
																},
																"nativeSrc": "4745:37:4",
																"nodeType": "YulFunctionCall",
																"src": "4745:37:4"
															},
															"nativeSrc": "4745:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "4745:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4670:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4723:5:4",
														"nodeType": "YulTypedName",
														"src": "4723:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4730:3:4",
														"nodeType": "YulTypedName",
														"src": "4730:3:4",
														"type": ""
													}
												],
												"src": "4670:118:4"
											},
											{
												"body": {
													"nativeSrc": "4892:124:4",
													"nodeType": "YulBlock",
													"src": "4892:124:4",
													"statements": [
														{
															"nativeSrc": "4902:26:4",
															"nodeType": "YulAssignment",
															"src": "4902:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4914:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4914:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4910:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:4"
																},
																"nativeSrc": "4910:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4910:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4902:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4902:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4982:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4982:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4995:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5006:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5006:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4991:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:4"
																		},
																		"nativeSrc": "4991:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4991:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4938:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4938:43:4"
																},
																"nativeSrc": "4938:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4938:71:4"
															},
															"nativeSrc": "4938:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4938:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4794:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4864:9:4",
														"nodeType": "YulTypedName",
														"src": "4864:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4876:6:4",
														"nodeType": "YulTypedName",
														"src": "4876:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4887:4:4",
														"nodeType": "YulTypedName",
														"src": "4887:4:4",
														"type": ""
													}
												],
												"src": "4794:222:4"
											},
											{
												"body": {
													"nativeSrc": "5065:79:4",
													"nodeType": "YulBlock",
													"src": "5065:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5122:16:4",
																"nodeType": "YulBlock",
																"src": "5122:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5131:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5131:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5134:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5134:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5124:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5124:6:4"
																			},
																			"nativeSrc": "5124:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5124:12:4"
																		},
																		"nativeSrc": "5124:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5124:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5088:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5088:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5113:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5113:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5095:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "5095:17:4"
																				},
																				"nativeSrc": "5095:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5095:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5085:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5085:2:4"
																		},
																		"nativeSrc": "5085:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5078:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:4"
																},
																"nativeSrc": "5078:43:4",
																"nodeType": "YulFunctionCall",
																"src": "5078:43:4"
															},
															"nativeSrc": "5075:63:4",
															"nodeType": "YulIf",
															"src": "5075:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5022:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5058:5:4",
														"nodeType": "YulTypedName",
														"src": "5058:5:4",
														"type": ""
													}
												],
												"src": "5022:122:4"
											},
											{
												"body": {
													"nativeSrc": "5202:87:4",
													"nodeType": "YulBlock",
													"src": "5202:87:4",
													"statements": [
														{
															"nativeSrc": "5212:29:4",
															"nodeType": "YulAssignment",
															"src": "5212:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5234:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5234:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5221:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "5221:12:4"
																},
																"nativeSrc": "5221:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5221:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5212:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5212:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5277:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5277:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5250:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "5250:26:4"
																},
																"nativeSrc": "5250:33:4",
																"nodeType": "YulFunctionCall",
																"src": "5250:33:4"
															},
															"nativeSrc": "5250:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "5250:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5150:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5180:6:4",
														"nodeType": "YulTypedName",
														"src": "5180:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5188:3:4",
														"nodeType": "YulTypedName",
														"src": "5188:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5196:5:4",
														"nodeType": "YulTypedName",
														"src": "5196:5:4",
														"type": ""
													}
												],
												"src": "5150:139:4"
											},
											{
												"body": {
													"nativeSrc": "5405:689:4",
													"nodeType": "YulBlock",
													"src": "5405:689:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5451:83:4",
																"nodeType": "YulBlock",
																"src": "5451:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5453:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5453:77:4"
																			},
																			"nativeSrc": "5453:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5453:79:4"
																		},
																		"nativeSrc": "5453:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5453:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5426:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5426:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5435:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5435:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5422:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5422:3:4"
																		},
																		"nativeSrc": "5422:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5422:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5447:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5447:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5418:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5418:3:4"
																},
																"nativeSrc": "5418:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5418:32:4"
															},
															"nativeSrc": "5415:119:4",
															"nodeType": "YulIf",
															"src": "5415:119:4"
														},
														{
															"nativeSrc": "5544:117:4",
															"nodeType": "YulBlock",
															"src": "5544:117:4",
															"statements": [
																{
																	"nativeSrc": "5559:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5559:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5573:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5573:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5563:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5563:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5588:63:4",
																	"nodeType": "YulAssignment",
																	"src": "5588:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5623:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5623:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5634:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5634:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5619:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5619:3:4"
																				},
																				"nativeSrc": "5619:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5619:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5643:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5643:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5598:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "5598:20:4"
																		},
																		"nativeSrc": "5598:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5588:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5588:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5671:288:4",
															"nodeType": "YulBlock",
															"src": "5671:288:4",
															"statements": [
																{
																	"nativeSrc": "5686:46:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5686:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5728:2:4",
																						"nodeType": "YulLiteral",
																						"src": "5728:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:4"
																				},
																				"nativeSrc": "5713:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5700:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "5700:12:4"
																		},
																		"nativeSrc": "5700:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5690:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5690:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5779:83:4",
																		"nodeType": "YulBlock",
																		"src": "5779:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5781:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "5781:77:4"
																					},
																					"nativeSrc": "5781:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "5781:79:4"
																				},
																				"nativeSrc": "5781:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "5781:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5751:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5751:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5759:18:4",
																				"nodeType": "YulLiteral",
																				"src": "5759:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5748:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5748:2:4"
																		},
																		"nativeSrc": "5748:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:30:4"
																	},
																	"nativeSrc": "5745:117:4",
																	"nodeType": "YulIf",
																	"src": "5745:117:4"
																},
																{
																	"nativeSrc": "5876:73:4",
																	"nodeType": "YulAssignment",
																	"src": "5876:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5921:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5921:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5932:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5932:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5917:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5917:3:4"
																				},
																				"nativeSrc": "5917:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5917:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5941:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5941:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5886:30:4",
																			"nodeType": "YulIdentifier",
																			"src": "5886:30:4"
																		},
																		"nativeSrc": "5886:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5886:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5876:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5876:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5969:118:4",
															"nodeType": "YulBlock",
															"src": "5969:118:4",
															"statements": [
																{
																	"nativeSrc": "5984:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5984:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5988:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5988:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6014:63:4",
																	"nodeType": "YulAssignment",
																	"src": "6014:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6049:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6049:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6060:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "6060:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6045:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6045:3:4"
																				},
																				"nativeSrc": "6045:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6045:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6069:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6069:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6024:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "6024:20:4"
																		},
																		"nativeSrc": "6024:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6024:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6014:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6014:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint256",
												"nativeSrc": "5295:799:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5359:9:4",
														"nodeType": "YulTypedName",
														"src": "5359:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5370:7:4",
														"nodeType": "YulTypedName",
														"src": "5370:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5382:6:4",
														"nodeType": "YulTypedName",
														"src": "5382:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5390:6:4",
														"nodeType": "YulTypedName",
														"src": "5390:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5398:6:4",
														"nodeType": "YulTypedName",
														"src": "5398:6:4",
														"type": ""
													}
												],
												"src": "5295:799:4"
											},
											{
												"body": {
													"nativeSrc": "6159:40:4",
													"nodeType": "YulBlock",
													"src": "6159:40:4",
													"statements": [
														{
															"nativeSrc": "6170:22:4",
															"nodeType": "YulAssignment",
															"src": "6170:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6186:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6186:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6180:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6180:5:4"
																},
																"nativeSrc": "6180:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6180:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6170:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6100:99:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6142:5:4",
														"nodeType": "YulTypedName",
														"src": "6142:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6152:6:4",
														"nodeType": "YulTypedName",
														"src": "6152:6:4",
														"type": ""
													}
												],
												"src": "6100:99:4"
											},
											{
												"body": {
													"nativeSrc": "6319:34:4",
													"nodeType": "YulBlock",
													"src": "6319:34:4",
													"statements": [
														{
															"nativeSrc": "6329:18:4",
															"nodeType": "YulAssignment",
															"src": "6329:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "6344:3:4",
																"nodeType": "YulIdentifier",
																"src": "6344:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6329:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "6329:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6205:148:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6291:3:4",
														"nodeType": "YulTypedName",
														"src": "6291:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6296:6:4",
														"nodeType": "YulTypedName",
														"src": "6296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6307:11:4",
														"nodeType": "YulTypedName",
														"src": "6307:11:4",
														"type": ""
													}
												],
												"src": "6205:148:4"
											},
											{
												"body": {
													"nativeSrc": "6421:184:4",
													"nodeType": "YulBlock",
													"src": "6421:184:4",
													"statements": [
														{
															"nativeSrc": "6431:10:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6431:10:4",
															"value": {
																"kind": "number",
																"nativeSrc": "6440:1:4",
																"nodeType": "YulLiteral",
																"src": "6440:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6435:1:4",
																	"nodeType": "YulTypedName",
																	"src": "6435:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6500:63:4",
																"nodeType": "YulBlock",
																"src": "6500:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6525:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "6525:3:4"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6530:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "6530:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6521:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6521:3:4"
																					},
																					"nativeSrc": "6521:11:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6521:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6544:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "6544:3:4"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6549:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "6549:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6540:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "6540:3:4"
																							},
																							"nativeSrc": "6540:11:4",
																							"nodeType": "YulFunctionCall",
																							"src": "6540:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6534:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6534:5:4"
																					},
																					"nativeSrc": "6534:18:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6534:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6514:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6514:6:4"
																			},
																			"nativeSrc": "6514:39:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6514:39:4"
																		},
																		"nativeSrc": "6514:39:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6514:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6461:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6461:1:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6464:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6464:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6458:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "6458:2:4"
																},
																"nativeSrc": "6458:13:4",
																"nodeType": "YulFunctionCall",
																"src": "6458:13:4"
															},
															"nativeSrc": "6450:113:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6472:19:4",
																"nodeType": "YulBlock",
																"src": "6472:19:4",
																"statements": [
																	{
																		"nativeSrc": "6474:15:4",
																		"nodeType": "YulAssignment",
																		"src": "6474:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6483:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "6483:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6486:2:4",
																					"nodeType": "YulLiteral",
																					"src": "6486:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6479:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6479:3:4"
																			},
																			"nativeSrc": "6479:10:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6479:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6474:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "6474:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6454:3:4",
																"nodeType": "YulBlock",
																"src": "6454:3:4",
																"statements": []
															},
															"src": "6450:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6583:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6583:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6588:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6588:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6579:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:4"
																		},
																		"nativeSrc": "6579:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6579:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6597:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6597:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6572:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6572:6:4"
																},
																"nativeSrc": "6572:27:4",
																"nodeType": "YulFunctionCall",
																"src": "6572:27:4"
															},
															"nativeSrc": "6572:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "6572:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6359:246:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6403:3:4",
														"nodeType": "YulTypedName",
														"src": "6403:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6408:3:4",
														"nodeType": "YulTypedName",
														"src": "6408:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6413:6:4",
														"nodeType": "YulTypedName",
														"src": "6413:6:4",
														"type": ""
													}
												],
												"src": "6359:246:4"
											},
											{
												"body": {
													"nativeSrc": "6721:280:4",
													"nodeType": "YulBlock",
													"src": "6721:280:4",
													"statements": [
														{
															"nativeSrc": "6731:53:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6731:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6778:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6778:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6745:32:4",
																	"nodeType": "YulIdentifier",
																	"src": "6745:32:4"
																},
																"nativeSrc": "6745:39:4",
																"nodeType": "YulFunctionCall",
																"src": "6745:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6735:6:4",
																	"nodeType": "YulTypedName",
																	"src": "6735:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6793:96:4",
															"nodeType": "YulAssignment",
															"src": "6793:96:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6877:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6877:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6882:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6882:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6800:76:4",
																	"nodeType": "YulIdentifier",
																	"src": "6800:76:4"
																},
																"nativeSrc": "6800:89:4",
																"nodeType": "YulFunctionCall",
																"src": "6800:89:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6793:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6793:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6937:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6937:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6944:4:4",
																				"nodeType": "YulLiteral",
																				"src": "6944:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6933:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6933:3:4"
																		},
																		"nativeSrc": "6933:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6933:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6951:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6951:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6956:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6956:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6898:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "6898:34:4"
																},
																"nativeSrc": "6898:65:4",
																"nodeType": "YulFunctionCall",
																"src": "6898:65:4"
															},
															"nativeSrc": "6898:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "6898:65:4"
														},
														{
															"nativeSrc": "6972:23:4",
															"nodeType": "YulAssignment",
															"src": "6972:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6983:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6983:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6988:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6988:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6979:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6979:3:4"
																},
																"nativeSrc": "6979:16:4",
																"nodeType": "YulFunctionCall",
																"src": "6979:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6972:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6972:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6611:390:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6702:5:4",
														"nodeType": "YulTypedName",
														"src": "6702:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6709:3:4",
														"nodeType": "YulTypedName",
														"src": "6709:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6717:3:4",
														"nodeType": "YulTypedName",
														"src": "6717:3:4",
														"type": ""
													}
												],
												"src": "6611:390:4"
											},
											{
												"body": {
													"nativeSrc": "7143:139:4",
													"nodeType": "YulBlock",
													"src": "7143:139:4",
													"statements": [
														{
															"nativeSrc": "7154:102:4",
															"nodeType": "YulAssignment",
															"src": "7154:102:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7243:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7243:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7252:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7252:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7161:81:4",
																	"nodeType": "YulIdentifier",
																	"src": "7161:81:4"
																},
																"nativeSrc": "7161:95:4",
																"nodeType": "YulFunctionCall",
																"src": "7161:95:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7154:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7154:3:4"
																}
															]
														},
														{
															"nativeSrc": "7266:10:4",
															"nodeType": "YulAssignment",
															"src": "7266:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "7273:3:4",
																"nodeType": "YulIdentifier",
																"src": "7273:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7266:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7266:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7007:275:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7122:3:4",
														"nodeType": "YulTypedName",
														"src": "7122:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7128:6:4",
														"nodeType": "YulTypedName",
														"src": "7128:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7139:3:4",
														"nodeType": "YulTypedName",
														"src": "7139:3:4",
														"type": ""
													}
												],
												"src": "7007:275:4"
											},
											{
												"body": {
													"nativeSrc": "7316:152:4",
													"nodeType": "YulBlock",
													"src": "7316:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7333:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7333:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7336:77:4",
																		"nodeType": "YulLiteral",
																		"src": "7336:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7326:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7326:6:4"
																},
																"nativeSrc": "7326:88:4",
																"nodeType": "YulFunctionCall",
																"src": "7326:88:4"
															},
															"nativeSrc": "7326:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "7326:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7430:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7430:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7433:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7433:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7423:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7423:6:4"
																},
																"nativeSrc": "7423:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7423:15:4"
															},
															"nativeSrc": "7423:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7423:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7454:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7454:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7457:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7457:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7447:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7447:6:4"
																},
																"nativeSrc": "7447:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7447:15:4"
															},
															"nativeSrc": "7447:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7447:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7288:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "7288:180:4"
											},
											{
												"body": {
													"nativeSrc": "7525:51:4",
													"nodeType": "YulBlock",
													"src": "7525:51:4",
													"statements": [
														{
															"nativeSrc": "7535:34:4",
															"nodeType": "YulAssignment",
															"src": "7535:34:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7560:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7560:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7563:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7563:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7556:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:4"
																},
																"nativeSrc": "7556:13:4",
																"nodeType": "YulFunctionCall",
																"src": "7556:13:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7535:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "7535:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7474:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7506:5:4",
														"nodeType": "YulTypedName",
														"src": "7506:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7516:8:4",
														"nodeType": "YulTypedName",
														"src": "7516:8:4",
														"type": ""
													}
												],
												"src": "7474:102:4"
											},
											{
												"body": {
													"nativeSrc": "7655:775:4",
													"nodeType": "YulBlock",
													"src": "7655:775:4",
													"statements": [
														{
															"nativeSrc": "7665:15:4",
															"nodeType": "YulAssignment",
															"src": "7665:15:4",
															"value": {
																"name": "_power",
																"nativeSrc": "7674:6:4",
																"nodeType": "YulIdentifier",
																"src": "7674:6:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7665:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "7665:5:4"
																}
															]
														},
														{
															"nativeSrc": "7689:14:4",
															"nodeType": "YulAssignment",
															"src": "7689:14:4",
															"value": {
																"name": "_base",
																"nativeSrc": "7698:5:4",
																"nodeType": "YulIdentifier",
																"src": "7698:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7689:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7689:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7747:677:4",
																"nodeType": "YulBlock",
																"src": "7747:677:4",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7835:22:4",
																			"nodeType": "YulBlock",
																			"src": "7835:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7837:16:4",
																							"nodeType": "YulIdentifier",
																							"src": "7837:16:4"
																						},
																						"nativeSrc": "7837:18:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7837:18:4"
																					},
																					"nativeSrc": "7837:18:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "7837:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7813:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "7813:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7823:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "7823:3:4"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7828:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "7828:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7819:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7819:3:4"
																					},
																					"nativeSrc": "7819:14:4",
																					"nodeType": "YulFunctionCall",
																					"src": "7819:14:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7810:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "7810:2:4"
																			},
																			"nativeSrc": "7810:24:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7810:24:4"
																		},
																		"nativeSrc": "7807:50:4",
																		"nodeType": "YulIf",
																		"src": "7807:50:4"
																	},
																	{
																		"body": {
																			"nativeSrc": "7902:419:4",
																			"nodeType": "YulBlock",
																			"src": "7902:419:4",
																			"statements": [
																				{
																					"nativeSrc": "8282:25:4",
																					"nodeType": "YulAssignment",
																					"src": "8282:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8295:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "8295:5:4"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8302:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "8302:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8291:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "8291:3:4"
																						},
																						"nativeSrc": "8291:16:4",
																						"nodeType": "YulFunctionCall",
																						"src": "8291:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8282:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "8282:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7877:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "7877:8:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7887:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7887:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7873:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "7873:3:4"
																			},
																			"nativeSrc": "7873:16:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7873:16:4"
																		},
																		"nativeSrc": "7870:451:4",
																		"nodeType": "YulIf",
																		"src": "7870:451:4"
																	},
																	{
																		"nativeSrc": "8334:23:4",
																		"nodeType": "YulAssignment",
																		"src": "8334:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8346:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "8346:4:4"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8352:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "8352:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8342:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "8342:3:4"
																			},
																			"nativeSrc": "8342:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8342:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8334:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8334:4:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8370:44:4",
																		"nodeType": "YulAssignment",
																		"src": "8370:44:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8405:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "8405:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8382:22:4",
																				"nodeType": "YulIdentifier",
																				"src": "8382:22:4"
																			},
																			"nativeSrc": "8382:32:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8382:32:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8370:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "8370:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7723:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "7723:8:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7733:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7733:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7720:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7720:2:4"
																},
																"nativeSrc": "7720:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7720:15:4"
															},
															"nativeSrc": "7712:712:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7736:2:4",
																"nodeType": "YulBlock",
																"src": "7736:2:4",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7716:3:4",
																"nodeType": "YulBlock",
																"src": "7716:3:4",
																"statements": []
															},
															"src": "7712:712:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7582:848:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7610:6:4",
														"nodeType": "YulTypedName",
														"src": "7610:6:4",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7618:5:4",
														"nodeType": "YulTypedName",
														"src": "7618:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7625:8:4",
														"nodeType": "YulTypedName",
														"src": "7625:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7635:3:4",
														"nodeType": "YulTypedName",
														"src": "7635:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7643:5:4",
														"nodeType": "YulTypedName",
														"src": "7643:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7650:4:4",
														"nodeType": "YulTypedName",
														"src": "7650:4:4",
														"type": ""
													}
												],
												"src": "7582:848:4"
											},
											{
												"body": {
													"nativeSrc": "8496:1013:4",
													"nodeType": "YulBlock",
													"src": "8496:1013:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "8691:20:4",
																"nodeType": "YulBlock",
																"src": "8691:20:4",
																"statements": [
																	{
																		"nativeSrc": "8693:10:4",
																		"nodeType": "YulAssignment",
																		"src": "8693:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8702:1:4",
																			"nodeType": "YulLiteral",
																			"src": "8702:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8693:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8693:5:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8704:5:4",
																		"nodeType": "YulLeave",
																		"src": "8704:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8681:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "8681:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8674:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8674:6:4"
																},
																"nativeSrc": "8674:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8674:16:4"
															},
															"nativeSrc": "8671:40:4",
															"nodeType": "YulIf",
															"src": "8671:40:4"
														},
														{
															"body": {
																"nativeSrc": "8736:20:4",
																"nodeType": "YulBlock",
																"src": "8736:20:4",
																"statements": [
																	{
																		"nativeSrc": "8738:10:4",
																		"nodeType": "YulAssignment",
																		"src": "8738:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8747:1:4",
																			"nodeType": "YulLiteral",
																			"src": "8747:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8738:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8738:5:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8749:5:4",
																		"nodeType": "YulLeave",
																		"src": "8749:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8730:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "8730:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8723:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8723:6:4"
																},
																"nativeSrc": "8723:12:4",
																"nodeType": "YulFunctionCall",
																"src": "8723:12:4"
															},
															"nativeSrc": "8720:36:4",
															"nodeType": "YulIf",
															"src": "8720:36:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8866:20:4",
																		"nodeType": "YulBlock",
																		"src": "8866:20:4",
																		"statements": [
																			{
																				"nativeSrc": "8868:10:4",
																				"nodeType": "YulAssignment",
																				"src": "8868:10:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8877:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8877:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8868:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "8868:5:4"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8879:5:4",
																				"nodeType": "YulLeave",
																				"src": "8879:5:4"
																			}
																		]
																	},
																	"nativeSrc": "8859:27:4",
																	"nodeType": "YulCase",
																	"src": "8859:27:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8864:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8864:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8910:176:4",
																		"nodeType": "YulBlock",
																		"src": "8910:176:4",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8945:22:4",
																					"nodeType": "YulBlock",
																					"src": "8945:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8947:16:4",
																									"nodeType": "YulIdentifier",
																									"src": "8947:16:4"
																								},
																								"nativeSrc": "8947:18:4",
																								"nodeType": "YulFunctionCall",
																								"src": "8947:18:4"
																							},
																							"nativeSrc": "8947:18:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "8947:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8930:8:4",
																							"nodeType": "YulIdentifier",
																							"src": "8930:8:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8940:3:4",
																							"nodeType": "YulLiteral",
																							"src": "8940:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8927:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "8927:2:4"
																					},
																					"nativeSrc": "8927:17:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8927:17:4"
																				},
																				"nativeSrc": "8924:43:4",
																				"nodeType": "YulIf",
																				"src": "8924:43:4"
																			},
																			{
																				"nativeSrc": "8980:25:4",
																				"nodeType": "YulAssignment",
																				"src": "8980:25:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8993:1:4",
																							"nodeType": "YulLiteral",
																							"src": "8993:1:4",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8996:8:4",
																							"nodeType": "YulIdentifier",
																							"src": "8996:8:4"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8989:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "8989:3:4"
																					},
																					"nativeSrc": "8989:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8989:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8980:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "8980:5:4"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9036:22:4",
																					"nodeType": "YulBlock",
																					"src": "9036:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9038:16:4",
																									"nodeType": "YulIdentifier",
																									"src": "9038:16:4"
																								},
																								"nativeSrc": "9038:18:4",
																								"nodeType": "YulFunctionCall",
																								"src": "9038:18:4"
																							},
																							"nativeSrc": "9038:18:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "9038:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9024:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "9024:5:4"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9031:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "9031:3:4"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9021:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "9021:2:4"
																					},
																					"nativeSrc": "9021:14:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9021:14:4"
																				},
																				"nativeSrc": "9018:40:4",
																				"nodeType": "YulIf",
																				"src": "9018:40:4"
																			},
																			{
																				"nativeSrc": "9071:5:4",
																				"nodeType": "YulLeave",
																				"src": "9071:5:4"
																			}
																		]
																	},
																	"nativeSrc": "8895:191:4",
																	"nodeType": "YulCase",
																	"src": "8895:191:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8900:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8900:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8816:4:4",
																"nodeType": "YulIdentifier",
																"src": "8816:4:4"
															},
															"nativeSrc": "8809:277:4",
															"nodeType": "YulSwitch",
															"src": "8809:277:4"
														},
														{
															"body": {
																"nativeSrc": "9218:123:4",
																"nodeType": "YulBlock",
																"src": "9218:123:4",
																"statements": [
																	{
																		"nativeSrc": "9232:28:4",
																		"nodeType": "YulAssignment",
																		"src": "9232:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9245:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "9245:4:4"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9251:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "9251:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9241:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "9241:3:4"
																			},
																			"nativeSrc": "9241:19:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9241:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9232:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9232:5:4"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9291:22:4",
																			"nodeType": "YulBlock",
																			"src": "9291:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9293:16:4",
																							"nodeType": "YulIdentifier",
																							"src": "9293:16:4"
																						},
																						"nativeSrc": "9293:18:4",
																						"nodeType": "YulFunctionCall",
																						"src": "9293:18:4"
																					},
																					"nativeSrc": "9293:18:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "9293:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9279:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "9279:5:4"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9286:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "9286:3:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9276:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "9276:2:4"
																			},
																			"nativeSrc": "9276:14:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9276:14:4"
																		},
																		"nativeSrc": "9273:40:4",
																		"nodeType": "YulIf",
																		"src": "9273:40:4"
																	},
																	{
																		"nativeSrc": "9326:5:4",
																		"nodeType": "YulLeave",
																		"src": "9326:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9121:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "9121:4:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9127:2:4",
																						"nodeType": "YulLiteral",
																						"src": "9127:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9118:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "9118:2:4"
																				},
																				"nativeSrc": "9118:12:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9118:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9135:8:4",
																						"nodeType": "YulIdentifier",
																						"src": "9135:8:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9145:2:4",
																						"nodeType": "YulLiteral",
																						"src": "9145:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9132:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "9132:2:4"
																				},
																				"nativeSrc": "9132:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9132:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9114:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9114:3:4"
																		},
																		"nativeSrc": "9114:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9114:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9170:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "9170:4:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9176:3:4",
																						"nodeType": "YulLiteral",
																						"src": "9176:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9167:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "9167:2:4"
																				},
																				"nativeSrc": "9167:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9167:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9185:8:4",
																						"nodeType": "YulIdentifier",
																						"src": "9185:8:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9195:2:4",
																						"nodeType": "YulLiteral",
																						"src": "9195:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9182:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "9182:2:4"
																				},
																				"nativeSrc": "9182:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9182:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9163:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9163:3:4"
																		},
																		"nativeSrc": "9163:36:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9163:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9098:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "9098:2:4"
																},
																"nativeSrc": "9098:111:4",
																"nodeType": "YulFunctionCall",
																"src": "9098:111:4"
															},
															"nativeSrc": "9095:246:4",
															"nodeType": "YulIf",
															"src": "9095:246:4"
														},
														{
															"nativeSrc": "9351:57:4",
															"nodeType": "YulAssignment",
															"src": "9351:57:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9385:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9385:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9388:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9388:4:4"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9394:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "9394:8:4"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9404:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9404:3:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9366:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "9366:18:4"
																},
																"nativeSrc": "9366:42:4",
																"nodeType": "YulFunctionCall",
																"src": "9366:42:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9351:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9351:5:4"
																},
																{
																	"name": "base",
																	"nativeSrc": "9358:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9358:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9447:22:4",
																"nodeType": "YulBlock",
																"src": "9447:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9449:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "9449:16:4"
																			},
																			"nativeSrc": "9449:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9449:18:4"
																		},
																		"nativeSrc": "9449:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9449:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9424:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9424:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9435:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "9435:3:4"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9440:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9440:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9431:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9431:3:4"
																		},
																		"nativeSrc": "9431:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9431:14:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9421:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "9421:2:4"
																},
																"nativeSrc": "9421:25:4",
																"nodeType": "YulFunctionCall",
																"src": "9421:25:4"
															},
															"nativeSrc": "9418:51:4",
															"nodeType": "YulIf",
															"src": "9418:51:4"
														},
														{
															"nativeSrc": "9478:25:4",
															"nodeType": "YulAssignment",
															"src": "9478:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9491:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9491:5:4"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9498:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9498:4:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9487:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9487:3:4"
																},
																"nativeSrc": "9487:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9487:16:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9478:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9478:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8436:1073:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8466:4:4",
														"nodeType": "YulTypedName",
														"src": "8466:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8472:8:4",
														"nodeType": "YulTypedName",
														"src": "8472:8:4",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8482:3:4",
														"nodeType": "YulTypedName",
														"src": "8482:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8490:5:4",
														"nodeType": "YulTypedName",
														"src": "8490:5:4",
														"type": ""
													}
												],
												"src": "8436:1073:4"
											},
											{
												"body": {
													"nativeSrc": "9581:219:4",
													"nodeType": "YulBlock",
													"src": "9581:219:4",
													"statements": [
														{
															"nativeSrc": "9591:31:4",
															"nodeType": "YulAssignment",
															"src": "9591:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9617:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9617:4:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9599:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9599:17:4"
																},
																"nativeSrc": "9599:23:4",
																"nodeType": "YulFunctionCall",
																"src": "9599:23:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9591:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9591:4:4"
																}
															]
														},
														{
															"nativeSrc": "9631:39:4",
															"nodeType": "YulAssignment",
															"src": "9631:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9661:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "9661:8:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9643:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "9643:17:4"
																},
																"nativeSrc": "9643:27:4",
																"nodeType": "YulFunctionCall",
																"src": "9643:27:4"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9631:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "9631:8:4"
																}
															]
														},
														{
															"nativeSrc": "9680:113:4",
															"nodeType": "YulAssignment",
															"src": "9680:113:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9710:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9710:4:4"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9716:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "9716:8:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9726:66:4",
																		"nodeType": "YulLiteral",
																		"src": "9726:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9689:20:4",
																	"nodeType": "YulIdentifier",
																	"src": "9689:20:4"
																},
																"nativeSrc": "9689:104:4",
																"nodeType": "YulFunctionCall",
																"src": "9689:104:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9680:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9680:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "9515:285:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9556:4:4",
														"nodeType": "YulTypedName",
														"src": "9556:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9562:8:4",
														"nodeType": "YulTypedName",
														"src": "9562:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9575:5:4",
														"nodeType": "YulTypedName",
														"src": "9575:5:4",
														"type": ""
													}
												],
												"src": "9515:285:4"
											},
											{
												"body": {
													"nativeSrc": "9834:152:4",
													"nodeType": "YulBlock",
													"src": "9834:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9851:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9851:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9854:77:4",
																		"nodeType": "YulLiteral",
																		"src": "9854:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9844:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:4"
																},
																"nativeSrc": "9844:88:4",
																"nodeType": "YulFunctionCall",
																"src": "9844:88:4"
															},
															"nativeSrc": "9844:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "9844:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9948:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9948:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9951:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9951:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9941:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9941:6:4"
																},
																"nativeSrc": "9941:15:4",
																"nodeType": "YulFunctionCall",
																"src": "9941:15:4"
															},
															"nativeSrc": "9941:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "9941:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9972:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9972:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9975:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9975:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9965:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9965:6:4"
																},
																"nativeSrc": "9965:15:4",
																"nodeType": "YulFunctionCall",
																"src": "9965:15:4"
															},
															"nativeSrc": "9965:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "9965:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9806:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "9806:180:4"
											},
											{
												"body": {
													"nativeSrc": "10034:143:4",
													"nodeType": "YulBlock",
													"src": "10034:143:4",
													"statements": [
														{
															"nativeSrc": "10044:25:4",
															"nodeType": "YulAssignment",
															"src": "10044:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10067:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10067:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10049:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10049:17:4"
																},
																"nativeSrc": "10049:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10049:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10044:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10044:1:4"
																}
															]
														},
														{
															"nativeSrc": "10078:25:4",
															"nodeType": "YulAssignment",
															"src": "10078:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10101:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10101:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10083:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10083:17:4"
																},
																"nativeSrc": "10083:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10083:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10078:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10078:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10125:22:4",
																"nodeType": "YulBlock",
																"src": "10125:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10127:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10127:16:4"
																			},
																			"nativeSrc": "10127:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10127:18:4"
																		},
																		"nativeSrc": "10127:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10127:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10122:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10122:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10115:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10115:6:4"
																},
																"nativeSrc": "10115:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10115:9:4"
															},
															"nativeSrc": "10112:35:4",
															"nodeType": "YulIf",
															"src": "10112:35:4"
														},
														{
															"nativeSrc": "10157:14:4",
															"nodeType": "YulAssignment",
															"src": "10157:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10166:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10166:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10169:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10169:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10162:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10162:3:4"
																},
																"nativeSrc": "10162:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10162:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10157:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10157:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9992:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10023:1:4",
														"nodeType": "YulTypedName",
														"src": "10023:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10026:1:4",
														"nodeType": "YulTypedName",
														"src": "10026:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10032:1:4",
														"nodeType": "YulTypedName",
														"src": "10032:1:4",
														"type": ""
													}
												],
												"src": "9992:185:4"
											},
											{
												"body": {
													"nativeSrc": "10279:73:4",
													"nodeType": "YulBlock",
													"src": "10279:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10296:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10296:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10301:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "10301:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10289:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10289:6:4"
																},
																"nativeSrc": "10289:19:4",
																"nodeType": "YulFunctionCall",
																"src": "10289:19:4"
															},
															"nativeSrc": "10289:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "10289:19:4"
														},
														{
															"nativeSrc": "10317:29:4",
															"nodeType": "YulAssignment",
															"src": "10317:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10336:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10336:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10341:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10341:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10332:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10332:3:4"
																},
																"nativeSrc": "10332:14:4",
																"nodeType": "YulFunctionCall",
																"src": "10332:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10317:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "10317:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10183:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10251:3:4",
														"nodeType": "YulTypedName",
														"src": "10251:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10256:6:4",
														"nodeType": "YulTypedName",
														"src": "10256:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10267:11:4",
														"nodeType": "YulTypedName",
														"src": "10267:11:4",
														"type": ""
													}
												],
												"src": "10183:169:4"
											},
											{
												"body": {
													"nativeSrc": "10464:123:4",
													"nodeType": "YulBlock",
													"src": "10464:123:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10486:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10486:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10494:1:4",
																				"nodeType": "YulLiteral",
																				"src": "10494:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10482:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10482:3:4"
																		},
																		"nativeSrc": "10482:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10482:14:4"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f207075726368617365",
																		"kind": "string",
																		"nativeSrc": "10498:34:4",
																		"nodeType": "YulLiteral",
																		"src": "10498:34:4",
																		"type": "",
																		"value": "Insufficient balance to purchase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10475:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10475:6:4"
																},
																"nativeSrc": "10475:58:4",
																"nodeType": "YulFunctionCall",
																"src": "10475:58:4"
															},
															"nativeSrc": "10475:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "10475:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10554:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10554:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10562:2:4",
																				"nodeType": "YulLiteral",
																				"src": "10562:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10550:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10550:3:4"
																		},
																		"nativeSrc": "10550:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10550:15:4"
																	},
																	{
																		"hexValue": "2074686973206974656d",
																		"kind": "string",
																		"nativeSrc": "10567:12:4",
																		"nodeType": "YulLiteral",
																		"src": "10567:12:4",
																		"type": "",
																		"value": " this item"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10543:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10543:6:4"
																},
																"nativeSrc": "10543:37:4",
																"nodeType": "YulFunctionCall",
																"src": "10543:37:4"
															},
															"nativeSrc": "10543:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "10543:37:4"
														}
													]
												},
												"name": "store_literal_in_memory_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56",
												"nativeSrc": "10358:229:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10456:6:4",
														"nodeType": "YulTypedName",
														"src": "10456:6:4",
														"type": ""
													}
												],
												"src": "10358:229:4"
											},
											{
												"body": {
													"nativeSrc": "10739:220:4",
													"nodeType": "YulBlock",
													"src": "10739:220:4",
													"statements": [
														{
															"nativeSrc": "10749:74:4",
															"nodeType": "YulAssignment",
															"src": "10749:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10815:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10815:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10820:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10820:2:4",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10756:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "10756:58:4"
																},
																"nativeSrc": "10756:67:4",
																"nodeType": "YulFunctionCall",
																"src": "10756:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10749:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10749:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10921:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10921:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56",
																	"nativeSrc": "10832:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "10832:88:4"
																},
																"nativeSrc": "10832:93:4",
																"nodeType": "YulFunctionCall",
																"src": "10832:93:4"
															},
															"nativeSrc": "10832:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "10832:93:4"
														},
														{
															"nativeSrc": "10934:19:4",
															"nodeType": "YulAssignment",
															"src": "10934:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10945:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10945:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10950:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10950:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10941:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10941:3:4"
																},
																"nativeSrc": "10941:12:4",
																"nodeType": "YulFunctionCall",
																"src": "10941:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10934:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10934:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10593:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10727:3:4",
														"nodeType": "YulTypedName",
														"src": "10727:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10735:3:4",
														"nodeType": "YulTypedName",
														"src": "10735:3:4",
														"type": ""
													}
												],
												"src": "10593:366:4"
											},
											{
												"body": {
													"nativeSrc": "11136:248:4",
													"nodeType": "YulBlock",
													"src": "11136:248:4",
													"statements": [
														{
															"nativeSrc": "11146:26:4",
															"nodeType": "YulAssignment",
															"src": "11146:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11158:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "11158:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11169:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11169:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11154:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:4"
																},
																"nativeSrc": "11154:18:4",
																"nodeType": "YulFunctionCall",
																"src": "11154:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11146:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11146:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11193:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11193:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11204:1:4",
																				"nodeType": "YulLiteral",
																				"src": "11204:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11189:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:4"
																		},
																		"nativeSrc": "11189:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11189:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11212:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "11212:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11218:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11218:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11208:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11208:3:4"
																		},
																		"nativeSrc": "11208:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11208:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11182:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11182:6:4"
																},
																"nativeSrc": "11182:47:4",
																"nodeType": "YulFunctionCall",
																"src": "11182:47:4"
															},
															"nativeSrc": "11182:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "11182:47:4"
														},
														{
															"nativeSrc": "11238:139:4",
															"nodeType": "YulAssignment",
															"src": "11238:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11372:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "11372:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11246:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "11246:124:4"
																},
																"nativeSrc": "11246:131:4",
																"nodeType": "YulFunctionCall",
																"src": "11246:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11238:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11238:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10965:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11116:9:4",
														"nodeType": "YulTypedName",
														"src": "11116:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11131:4:4",
														"nodeType": "YulTypedName",
														"src": "11131:4:4",
														"type": ""
													}
												],
												"src": "10965:419:4"
											},
											{
												"body": {
													"nativeSrc": "11496:76:4",
													"nodeType": "YulBlock",
													"src": "11496:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11518:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "11518:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11526:1:4",
																				"nodeType": "YulLiteral",
																				"src": "11526:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11514:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11514:3:4"
																		},
																		"nativeSrc": "11514:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11514:14:4"
																	},
																	{
																		"hexValue": "536f7272792c2074686973206974656d206973206f7574206f662073746f636b",
																		"kind": "string",
																		"nativeSrc": "11530:34:4",
																		"nodeType": "YulLiteral",
																		"src": "11530:34:4",
																		"type": "",
																		"value": "Sorry, this item is out of stock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11507:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11507:6:4"
																},
																"nativeSrc": "11507:58:4",
																"nodeType": "YulFunctionCall",
																"src": "11507:58:4"
															},
															"nativeSrc": "11507:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "11507:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7",
												"nativeSrc": "11390:182:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11488:6:4",
														"nodeType": "YulTypedName",
														"src": "11488:6:4",
														"type": ""
													}
												],
												"src": "11390:182:4"
											},
											{
												"body": {
													"nativeSrc": "11724:220:4",
													"nodeType": "YulBlock",
													"src": "11724:220:4",
													"statements": [
														{
															"nativeSrc": "11734:74:4",
															"nodeType": "YulAssignment",
															"src": "11734:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11800:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11800:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11805:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11805:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11741:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "11741:58:4"
																},
																"nativeSrc": "11741:67:4",
																"nodeType": "YulFunctionCall",
																"src": "11741:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11734:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11734:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11906:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11906:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7",
																	"nativeSrc": "11817:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "11817:88:4"
																},
																"nativeSrc": "11817:93:4",
																"nodeType": "YulFunctionCall",
																"src": "11817:93:4"
															},
															"nativeSrc": "11817:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "11817:93:4"
														},
														{
															"nativeSrc": "11919:19:4",
															"nodeType": "YulAssignment",
															"src": "11919:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11930:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11930:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11935:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11935:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11926:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11926:3:4"
																},
																"nativeSrc": "11926:12:4",
																"nodeType": "YulFunctionCall",
																"src": "11926:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11919:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11919:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11578:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11712:3:4",
														"nodeType": "YulTypedName",
														"src": "11712:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11720:3:4",
														"nodeType": "YulTypedName",
														"src": "11720:3:4",
														"type": ""
													}
												],
												"src": "11578:366:4"
											},
											{
												"body": {
													"nativeSrc": "12121:248:4",
													"nodeType": "YulBlock",
													"src": "12121:248:4",
													"statements": [
														{
															"nativeSrc": "12131:26:4",
															"nodeType": "YulAssignment",
															"src": "12131:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12143:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "12143:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12154:2:4",
																		"nodeType": "YulLiteral",
																		"src": "12154:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12139:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12139:3:4"
																},
																"nativeSrc": "12139:18:4",
																"nodeType": "YulFunctionCall",
																"src": "12139:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12131:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "12131:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12178:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12178:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12189:1:4",
																				"nodeType": "YulLiteral",
																				"src": "12189:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12174:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12174:3:4"
																		},
																		"nativeSrc": "12174:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12197:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "12197:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12203:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12203:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12193:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12193:3:4"
																		},
																		"nativeSrc": "12193:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12193:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12167:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12167:6:4"
																},
																"nativeSrc": "12167:47:4",
																"nodeType": "YulFunctionCall",
																"src": "12167:47:4"
															},
															"nativeSrc": "12167:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "12167:47:4"
														},
														{
															"nativeSrc": "12223:139:4",
															"nodeType": "YulAssignment",
															"src": "12223:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12357:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "12357:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12231:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "12231:124:4"
																},
																"nativeSrc": "12231:131:4",
																"nodeType": "YulFunctionCall",
																"src": "12231:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12223:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "12223:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11950:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12101:9:4",
														"nodeType": "YulTypedName",
														"src": "12101:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12116:4:4",
														"nodeType": "YulTypedName",
														"src": "12116:4:4",
														"type": ""
													}
												],
												"src": "11950:419:4"
											},
											{
												"body": {
													"nativeSrc": "12418:128:4",
													"nodeType": "YulBlock",
													"src": "12418:128:4",
													"statements": [
														{
															"nativeSrc": "12428:33:4",
															"nodeType": "YulAssignment",
															"src": "12428:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12455:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12455:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12437:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "12437:17:4"
																},
																"nativeSrc": "12437:24:4",
																"nodeType": "YulFunctionCall",
																"src": "12437:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12428:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "12428:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12489:22:4",
																"nodeType": "YulBlock",
																"src": "12489:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12491:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "12491:16:4"
																			},
																			"nativeSrc": "12491:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "12491:18:4"
																		},
																		"nativeSrc": "12491:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "12491:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12476:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12476:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12483:4:4",
																		"nodeType": "YulLiteral",
																		"src": "12483:4:4",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12473:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "12473:2:4"
																},
																"nativeSrc": "12473:15:4",
																"nodeType": "YulFunctionCall",
																"src": "12473:15:4"
															},
															"nativeSrc": "12470:41:4",
															"nodeType": "YulIf",
															"src": "12470:41:4"
														},
														{
															"nativeSrc": "12520:20:4",
															"nodeType": "YulAssignment",
															"src": "12520:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12531:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12531:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12538:1:4",
																		"nodeType": "YulLiteral",
																		"src": "12538:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12527:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12527:3:4"
																},
																"nativeSrc": "12527:13:4",
																"nodeType": "YulFunctionCall",
																"src": "12527:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12520:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12520:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "12375:171:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12404:5:4",
														"nodeType": "YulTypedName",
														"src": "12404:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12414:3:4",
														"nodeType": "YulTypedName",
														"src": "12414:3:4",
														"type": ""
													}
												],
												"src": "12375:171:4"
											},
											{
												"body": {
													"nativeSrc": "12595:190:4",
													"nodeType": "YulBlock",
													"src": "12595:190:4",
													"statements": [
														{
															"nativeSrc": "12605:33:4",
															"nodeType": "YulAssignment",
															"src": "12605:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12632:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12632:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12614:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "12614:17:4"
																},
																"nativeSrc": "12614:24:4",
																"nodeType": "YulFunctionCall",
																"src": "12614:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12605:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "12605:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12728:22:4",
																"nodeType": "YulBlock",
																"src": "12728:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12730:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "12730:16:4"
																			},
																			"nativeSrc": "12730:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "12730:18:4"
																		},
																		"nativeSrc": "12730:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "12730:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12653:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12653:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12660:66:4",
																		"nodeType": "YulLiteral",
																		"src": "12660:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12650:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "12650:2:4"
																},
																"nativeSrc": "12650:77:4",
																"nodeType": "YulFunctionCall",
																"src": "12650:77:4"
															},
															"nativeSrc": "12647:103:4",
															"nodeType": "YulIf",
															"src": "12647:103:4"
														},
														{
															"nativeSrc": "12759:20:4",
															"nodeType": "YulAssignment",
															"src": "12759:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12770:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12770:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12777:1:4",
																		"nodeType": "YulLiteral",
																		"src": "12777:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12766:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12766:3:4"
																},
																"nativeSrc": "12766:13:4",
																"nodeType": "YulFunctionCall",
																"src": "12766:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12759:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12759:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "12552:233:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12581:5:4",
														"nodeType": "YulTypedName",
														"src": "12581:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12591:3:4",
														"nodeType": "YulTypedName",
														"src": "12591:3:4",
														"type": ""
													}
												],
												"src": "12552:233:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to purchase\")\n\n        mstore(add(memPtr, 32), \" this item\")\n\n    }\n\n    function abi_encode_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sorry, this item is out of stock\")\n\n    }\n\n    function abi_encode_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610090575f3560e01c80638da5cb5b116100585780638da5cb5b1461018e5780639d76ea58146101b8578063b008c7e6146101e2578063b33909111461020a578063c386f5e91461023457610090565b806313fa9b23146100945780632616add5146100d05780632cde4c50146100fa578063499553fb1461013657806359f5e0ce14610172575b5f80fd5b34801561009f575f80fd5b506100ba60048036038101906100b5919061085b565b61025e565b6040516100c791906108cd565b60405180910390f35b3480156100db575f80fd5b506100e46102c1565b6040516100f191906108cd565b60405180910390f35b348015610105575f80fd5b50610120600480360381019061011b91906108e6565b6102c6565b60405161012d91906108cd565b60405180910390f35b348015610141575f80fd5b5061015c6004803603810190610157919061085b565b6103be565b60405161016991906108cd565b60405180910390f35b61018c600480360381019061018791906108e6565b6103f6565b005b348015610199575f80fd5b506101a26105d8565b6040516101af919061093c565b60405180910390f35b3480156101c3575f80fd5b506101cc6105fb565b6040516101d9919061093c565b60405180910390f35b3480156101ed575f80fd5b506102086004803603810190610203919061097f565b610620565b005b348015610215575f80fd5b5061021e610683565b60405161022b91906108cd565b60405180910390f35b34801561023f575f80fd5b50610248610688565b60405161025591906108cd565b60405180910390f35b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20826040516102aa9190610a57565b908152602001604051809103902054905092915050565b600281565b5f80610307836040518060400160405280600a81526020017f506f6f6c205461626c650000000000000000000000000000000000000000000081525061068d565b1561031557600290506103b5565b610354836040518060400160405280601281526020017f5461626c652054656e6e6973205461626c65000000000000000000000000000081525061068d565b1561036257600490506103b4565b6103a1836040518060400160405280600f81526020017f466f6f732042616c6c205461626c65000000000000000000000000000000000081525061068d565b156103af57600690506103b3565b5f90505b5b5b80915050919050565b6002602052815f5260405f20818051602081018201805184825260208301602085012081835280955050505050505f91509150505481565b5f610400826102c6565b90506003600a6104109190610bc9565b8161041b9190610c40565b34101561045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610cf0565b60405180910390fd5b5f60025f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20836040516104a99190610a57565b908152602001604051809103902054116104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef90610d58565b60405180910390fd5b60025f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20826040516105439190610a57565b90815260200160405180910390205f81548092919061056190610d76565b919050555060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20826040516105b19190610a57565b90815260200160405180910390205f8154809291906105cf90610d9d565b91905055505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208360405161066c9190610a57565b908152602001604051809103902081905550505050565b600681565b600481565b5f815183511480156106ac575081805190602001208380519060200120145b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106ee826106c5565b9050919050565b6106fe816106e4565b8114610708575f80fd5b50565b5f81359050610719816106f5565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61076d82610727565b810181811067ffffffffffffffff8211171561078c5761078b610737565b5b80604052505050565b5f61079e6106b4565b90506107aa8282610764565b919050565b5f67ffffffffffffffff8211156107c9576107c8610737565b5b6107d282610727565b9050602081019050919050565b828183375f83830152505050565b5f6107ff6107fa846107af565b610795565b90508281526020810184848401111561081b5761081a610723565b5b6108268482856107df565b509392505050565b5f82601f8301126108425761084161071f565b5b81356108528482602086016107ed565b91505092915050565b5f8060408385031215610871576108706106bd565b5b5f61087e8582860161070b565b925050602083013567ffffffffffffffff81111561089f5761089e6106c1565b5b6108ab8582860161082e565b9150509250929050565b5f819050919050565b6108c7816108b5565b82525050565b5f6020820190506108e05f8301846108be565b92915050565b5f602082840312156108fb576108fa6106bd565b5b5f82013567ffffffffffffffff811115610918576109176106c1565b5b6109248482850161082e565b91505092915050565b610936816106e4565b82525050565b5f60208201905061094f5f83018461092d565b92915050565b61095e816108b5565b8114610968575f80fd5b50565b5f8135905061097981610955565b92915050565b5f805f60608486031215610996576109956106bd565b5b5f6109a38682870161070b565b935050602084013567ffffffffffffffff8111156109c4576109c36106c1565b5b6109d08682870161082e565b92505060406109e18682870161096b565b9150509250925092565b5f81519050919050565b5f81905092915050565b5f5b83811015610a1c578082015181840152602081019050610a01565b5f8484015250505050565b5f610a31826109eb565b610a3b81856109f5565b9350610a4b8185602086016109ff565b80840191505092915050565b5f610a628284610a27565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610aef57808604811115610acb57610aca610a6d565b5b6001851615610ada5780820291505b8081029050610ae885610a9a565b9450610aaf565b94509492505050565b5f82610b075760019050610bc2565b81610b14575f9050610bc2565b8160018114610b2a5760028114610b3457610b63565b6001915050610bc2565b60ff841115610b4657610b45610a6d565b5b8360020a915084821115610b5d57610b5c610a6d565b5b50610bc2565b5060208310610133831016604e8410600b8410161715610b985782820a905083811115610b9357610b92610a6d565b5b610bc2565b610ba58484846001610aa6565b92509050818404811115610bbc57610bbb610a6d565b5b81810290505b9392505050565b5f610bd3826108b5565b9150610bde836108b5565b9250610c0b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610af8565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c4a826108b5565b9150610c55836108b5565b925082610c6557610c64610c13565b5b828204905092915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e636520746f2070757263686173655f8201527f2074686973206974656d00000000000000000000000000000000000000000000602082015250565b5f610cda602a83610c70565b9150610ce582610c80565b604082019050919050565b5f6020820190508181035f830152610d0781610cce565b9050919050565b7f536f7272792c2074686973206974656d206973206f7574206f662073746f636b5f82015250565b5f610d42602083610c70565b9150610d4d82610d0e565b602082019050919050565b5f6020820190508181035f830152610d6f81610d36565b9050919050565b5f610d80826108b5565b91505f8203610d9257610d91610a6d565b5b600182039050919050565b5f610da7826108b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610dd957610dd8610a6d565b5b60018201905091905056fea264697066735822122043054e472fab1c440231f959bf6fe57101e67d0d3c681e852171b3ed7421667864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB008C7E6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xB3390911 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xC386F5E9 EQ PUSH2 0x234 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x13FA9B23 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x2616ADD5 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x2CDE4C50 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x499553FB EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x59F5E0CE EQ PUSH2 0x172 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x307 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6F6C205461626C6500000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0x315 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x354 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5461626C652054656E6E6973205461626C650000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0x362 JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x3A1 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466F6F732042616C6C205461626C650000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0x3AF JUMPI PUSH1 0x6 SWAP1 POP PUSH2 0x3B3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x400 DUP3 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0xA PUSH2 0x410 SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST DUP2 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x561 SWAP1 PUSH2 0xD76 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5CF SWAP1 PUSH2 0xD9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x6AC JUMPI POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6EE DUP3 PUSH2 0x6C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FE DUP2 PUSH2 0x6E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x708 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x719 DUP2 PUSH2 0x6F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x76D DUP3 PUSH2 0x727 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x737 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79E PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0x737 JUMP JUMPDEST JUMPDEST PUSH2 0x7D2 DUP3 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7FF PUSH2 0x7FA DUP5 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x723 JUMP JUMPDEST JUMPDEST PUSH2 0x826 DUP5 DUP3 DUP6 PUSH2 0x7DF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x842 JUMPI PUSH2 0x841 PUSH2 0x71F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x852 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x6BD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x87E DUP6 DUP3 DUP7 ADD PUSH2 0x70B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89F JUMPI PUSH2 0x89E PUSH2 0x6C1 JUMP JUMPDEST JUMPDEST PUSH2 0x8AB DUP6 DUP3 DUP7 ADD PUSH2 0x82E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C7 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x8BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FB JUMPI PUSH2 0x8FA PUSH2 0x6BD JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x918 JUMPI PUSH2 0x917 PUSH2 0x6C1 JUMP JUMPDEST JUMPDEST PUSH2 0x924 DUP5 DUP3 DUP6 ADD PUSH2 0x82E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x936 DUP2 PUSH2 0x6E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94F PUSH0 DUP4 ADD DUP5 PUSH2 0x92D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95E DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x968 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x979 DUP2 PUSH2 0x955 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x6BD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A3 DUP7 DUP3 DUP8 ADD PUSH2 0x70B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C4 JUMPI PUSH2 0x9C3 PUSH2 0x6C1 JUMP JUMPDEST JUMPDEST PUSH2 0x9D0 DUP7 DUP3 DUP8 ADD PUSH2 0x82E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9E1 DUP7 DUP3 DUP8 ADD PUSH2 0x96B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA1C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA01 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA31 DUP3 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0xA3B DUP2 DUP6 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP PUSH2 0xA4B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA62 DUP3 DUP5 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xAEF JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xACB JUMPI PUSH2 0xACA PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xADA JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xAE8 DUP6 PUSH2 0xA9A JUMP JUMPDEST SWAP5 POP PUSH2 0xAAF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB07 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBC2 JUMP JUMPDEST DUP2 PUSH2 0xB14 JUMPI PUSH0 SWAP1 POP PUSH2 0xBC2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB2A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB34 JUMPI PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB46 JUMPI PUSH2 0xB45 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB5D JUMPI PUSH2 0xB5C PUSH2 0xA6D JUMP JUMPDEST JUMPDEST POP PUSH2 0xBC2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB98 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xB93 JUMPI PUSH2 0xB92 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0xBA5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xAA6 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBBC JUMPI PUSH2 0xBBB PUSH2 0xA6D JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBD3 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBDE DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP PUSH2 0xC0B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC4A DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xC55 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xC13 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F207075726368617365 PUSH0 DUP3 ADD MSTORE PUSH32 0x2074686973206974656D00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCDA PUSH1 0x2A DUP4 PUSH2 0xC70 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE5 DUP3 PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD07 DUP2 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F7272792C2074686973206974656D206973206F7574206F662073746F636B PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 PUSH1 0x20 DUP4 PUSH2 0xC70 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4D DUP3 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD6F DUP2 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD80 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xD92 JUMPI PUSH2 0xD91 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA7 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xDD9 JUMPI PUSH2 0xDD8 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SDIV 0x4E SELFBALANCE 0x2F 0xAB SHR PREVRANDAO MUL BALANCE 0xF9 MSIZE 0xBF PUSH16 0xE57101E67D0D3C681E852171B3ED7421 PUSH7 0x7864736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "111:2005:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:138;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1241:455;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;246:60;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1741:373;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;187:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;213:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;952:139;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;483:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1097:138;1179:4;1202:9;:19;1212:8;1202:19;;;;;;;;;;;;;;;1222:5;1202:26;;;;;;:::i;:::-;;;;;;;;;;;;;;1195:33;;1097:138;;;;:::o;390:39::-;428:1;390:39;:::o;1241:455::-;1302:4;1318:13;1345:33;1359:4;1345:33;;;;;;;;;;;;;;;;;:13;:33::i;:::-;1341:327;;;428:1;1394:22;;1341:327;;;1437:40;1451:4;1437:40;;;;;;;;;;;;;;;;;:13;:40::i;:::-;1433:235;;;476:1;1493:24;;1433:235;;;1538:37;1552:4;1538:37;;;;;;;;;;;;;;;;;:13;:37::i;:::-;1534:134;;;525:1;1591:26;;1534:134;;;1656:1;1648:9;;1534:134;1433:235;1341:327;1684:5;1677:12;;;1241:455;;;:::o;246:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1741:373::-;1804:13;1820:16;1831:4;1820:10;:16::i;:::-;1804:32;;340:1;1877:2;:12;;;;:::i;:::-;1868:5;:22;;;;:::i;:::-;1855:9;:35;;1847:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1988:1;1955:9;:24;1973:4;1955:24;;;;;;;;;;;;;;;1980:4;1955:30;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;1947:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2036:9;:24;2054:4;2036:24;;;;;;;;;;;;;;;2061:4;2036:30;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;;;;;;;;:::i;:::-;;;;;;2078:9;:21;2088:10;2078:21;;;;;;;;;;;;;;;2100:4;2078:27;;;;;;:::i;:::-;;;;;;;;;;;;;;:29;;;;;;;;;:::i;:::-;;;;;;1794:320;1741:373;:::o;187:20::-;;;;;;;;;;;;:::o;213:27::-;;;;;;;;;;;;;:::o;952:139::-;1075:9;1046;:19;1056:8;1046:19;;;;;;;;;;;;;;;1066:5;1046:26;;;;;;:::i;:::-;;;;;;;;;;;;;:38;;;;952:139;;;:::o;483:43::-;525:1;483:43;:::o;436:41::-;476:1;436:41;:::o;2914:182:0:-;2986:4;3034:1;3028:15;3015:1;3009:15;:34;:80;;;;;3086:1;3070:19;;;;;;3063:1;3047:19;;;;;;:42;3009:80;3002:87;;2914:182;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:117;1073:1;1070;1063:12;1087:102;1128:6;1179:2;1175:7;1170:2;1163:5;1159:14;1155:28;1145:38;;1087:102;;;:::o;1195:180::-;1243:77;1240:1;1233:88;1340:4;1337:1;1330:15;1364:4;1361:1;1354:15;1381:281;1464:27;1486:4;1464:27;:::i;:::-;1456:6;1452:40;1594:6;1582:10;1579:22;1558:18;1546:10;1543:34;1540:62;1537:88;;;1605:18;;:::i;:::-;1537:88;1645:10;1641:2;1634:22;1424:238;1381:281;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:308::-;1865:4;1955:18;1947:6;1944:30;1941:56;;;1977:18;;:::i;:::-;1941:56;2015:29;2037:6;2015:29;:::i;:::-;2007:37;;2099:4;2093;2089:15;2081:23;;1803:308;;;:::o;2117:146::-;2214:6;2209:3;2204;2191:30;2255:1;2246:6;2241:3;2237:16;2230:27;2117:146;;;:::o;2269:425::-;2347:5;2372:66;2388:49;2430:6;2388:49;:::i;:::-;2372:66;:::i;:::-;2363:75;;2461:6;2454:5;2447:21;2499:4;2492:5;2488:16;2537:3;2528:6;2523:3;2519:16;2516:25;2513:112;;;2544:79;;:::i;:::-;2513:112;2634:54;2681:6;2676:3;2671;2634:54;:::i;:::-;2353:341;2269:425;;;;;:::o;2714:340::-;2770:5;2819:3;2812:4;2804:6;2800:17;2796:27;2786:122;;2827:79;;:::i;:::-;2786:122;2944:6;2931:20;2969:79;3044:3;3036:6;3029:4;3021:6;3017:17;2969:79;:::i;:::-;2960:88;;2776:278;2714:340;;;;:::o;3060:654::-;3138:6;3146;3195:2;3183:9;3174:7;3170:23;3166:32;3163:119;;;3201:79;;:::i;:::-;3163:119;3321:1;3346:53;3391:7;3382:6;3371:9;3367:22;3346:53;:::i;:::-;3336:63;;3292:117;3476:2;3465:9;3461:18;3448:32;3507:18;3499:6;3496:30;3493:117;;;3529:79;;:::i;:::-;3493:117;3634:63;3689:7;3680:6;3669:9;3665:22;3634:63;:::i;:::-;3624:73;;3419:288;3060:654;;;;;:::o;3720:77::-;3757:7;3786:5;3775:16;;3720:77;;;:::o;3803:118::-;3890:24;3908:5;3890:24;:::i;:::-;3885:3;3878:37;3803:118;;:::o;3927:222::-;4020:4;4058:2;4047:9;4043:18;4035:26;;4071:71;4139:1;4128:9;4124:17;4115:6;4071:71;:::i;:::-;3927:222;;;;:::o;4155:509::-;4224:6;4273:2;4261:9;4252:7;4248:23;4244:32;4241:119;;;4279:79;;:::i;:::-;4241:119;4427:1;4416:9;4412:17;4399:31;4457:18;4449:6;4446:30;4443:117;;;4479:79;;:::i;:::-;4443:117;4584:63;4639:7;4630:6;4619:9;4615:22;4584:63;:::i;:::-;4574:73;;4370:287;4155:509;;;;:::o;4670:118::-;4757:24;4775:5;4757:24;:::i;:::-;4752:3;4745:37;4670:118;;:::o;4794:222::-;4887:4;4925:2;4914:9;4910:18;4902:26;;4938:71;5006:1;4995:9;4991:17;4982:6;4938:71;:::i;:::-;4794:222;;;;:::o;5022:122::-;5095:24;5113:5;5095:24;:::i;:::-;5088:5;5085:35;5075:63;;5134:1;5131;5124:12;5075:63;5022:122;:::o;5150:139::-;5196:5;5234:6;5221:20;5212:29;;5250:33;5277:5;5250:33;:::i;:::-;5150:139;;;;:::o;5295:799::-;5382:6;5390;5398;5447:2;5435:9;5426:7;5422:23;5418:32;5415:119;;;5453:79;;:::i;:::-;5415:119;5573:1;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;:::i;:::-;5588:63;;5544:117;5728:2;5717:9;5713:18;5700:32;5759:18;5751:6;5748:30;5745:117;;;5781:79;;:::i;:::-;5745:117;5886:63;5941:7;5932:6;5921:9;5917:22;5886:63;:::i;:::-;5876:73;;5671:288;5998:2;6024:53;6069:7;6060:6;6049:9;6045:22;6024:53;:::i;:::-;6014:63;;5969:118;5295:799;;;;;:::o;6100:99::-;6152:6;6186:5;6180:12;6170:22;;6100:99;;;:::o;6205:148::-;6307:11;6344:3;6329:18;;6205:148;;;;:::o;6359:246::-;6440:1;6450:113;6464:6;6461:1;6458:13;6450:113;;;6549:1;6544:3;6540:11;6534:18;6530:1;6525:3;6521:11;6514:39;6486:2;6483:1;6479:10;6474:15;;6450:113;;;6597:1;6588:6;6583:3;6579:16;6572:27;6421:184;6359:246;;;:::o;6611:390::-;6717:3;6745:39;6778:5;6745:39;:::i;:::-;6800:89;6882:6;6877:3;6800:89;:::i;:::-;6793:96;;6898:65;6956:6;6951:3;6944:4;6937:5;6933:16;6898:65;:::i;:::-;6988:6;6983:3;6979:16;6972:23;;6721:280;6611:390;;;;:::o;7007:275::-;7139:3;7161:95;7252:3;7243:6;7161:95;:::i;:::-;7154:102;;7273:3;7266:10;;7007:275;;;;:::o;7288:180::-;7336:77;7333:1;7326:88;7433:4;7430:1;7423:15;7457:4;7454:1;7447:15;7474:102;7516:8;7563:5;7560:1;7556:13;7535:34;;7474:102;;;:::o;7582:848::-;7643:5;7650:4;7674:6;7665:15;;7698:5;7689:14;;7712:712;7733:1;7723:8;7720:15;7712:712;;;7828:4;7823:3;7819:14;7813:4;7810:24;7807:50;;;7837:18;;:::i;:::-;7807:50;7887:1;7877:8;7873:16;7870:451;;;8302:4;8295:5;8291:16;8282:25;;7870:451;8352:4;8346;8342:15;8334:23;;8382:32;8405:8;8382:32;:::i;:::-;8370:44;;7712:712;;;7582:848;;;;;;;:::o;8436:1073::-;8490:5;8681:8;8671:40;;8702:1;8693:10;;8704:5;;8671:40;8730:4;8720:36;;8747:1;8738:10;;8749:5;;8720:36;8816:4;8864:1;8859:27;;;;8900:1;8895:191;;;;8809:277;;8859:27;8877:1;8868:10;;8879:5;;;8895:191;8940:3;8930:8;8927:17;8924:43;;;8947:18;;:::i;:::-;8924:43;8996:8;8993:1;8989:16;8980:25;;9031:3;9024:5;9021:14;9018:40;;;9038:18;;:::i;:::-;9018:40;9071:5;;;8809:277;;9195:2;9185:8;9182:16;9176:3;9170:4;9167:13;9163:36;9145:2;9135:8;9132:16;9127:2;9121:4;9118:12;9114:35;9098:111;9095:246;;;9251:8;9245:4;9241:19;9232:28;;9286:3;9279:5;9276:14;9273:40;;;9293:18;;:::i;:::-;9273:40;9326:5;;9095:246;9366:42;9404:3;9394:8;9388:4;9385:1;9366:42;:::i;:::-;9351:57;;;;9440:4;9435:3;9431:14;9424:5;9421:25;9418:51;;;9449:18;;:::i;:::-;9418:51;9498:4;9491:5;9487:16;9478:25;;8436:1073;;;;;;:::o;9515:285::-;9575:5;9599:23;9617:4;9599:23;:::i;:::-;9591:31;;9643:27;9661:8;9643:27;:::i;:::-;9631:39;;9689:104;9726:66;9716:8;9710:4;9689:104;:::i;:::-;9680:113;;9515:285;;;;:::o;9806:180::-;9854:77;9851:1;9844:88;9951:4;9948:1;9941:15;9975:4;9972:1;9965:15;9992:185;10032:1;10049:20;10067:1;10049:20;:::i;:::-;10044:25;;10083:20;10101:1;10083:20;:::i;:::-;10078:25;;10122:1;10112:35;;10127:18;;:::i;:::-;10112:35;10169:1;10166;10162:9;10157:14;;9992:185;;;;:::o;10183:169::-;10267:11;10301:6;10296:3;10289:19;10341:4;10336:3;10332:14;10317:29;;10183:169;;;;:::o;10358:229::-;10498:34;10494:1;10486:6;10482:14;10475:58;10567:12;10562:2;10554:6;10550:15;10543:37;10358:229;:::o;10593:366::-;10735:3;10756:67;10820:2;10815:3;10756:67;:::i;:::-;10749:74;;10832:93;10921:3;10832:93;:::i;:::-;10950:2;10945:3;10941:12;10934:19;;10593:366;;;:::o;10965:419::-;11131:4;11169:2;11158:9;11154:18;11146:26;;11218:9;11212:4;11208:20;11204:1;11193:9;11189:17;11182:47;11246:131;11372:4;11246:131;:::i;:::-;11238:139;;10965:419;;;:::o;11390:182::-;11530:34;11526:1;11518:6;11514:14;11507:58;11390:182;:::o;11578:366::-;11720:3;11741:67;11805:2;11800:3;11741:67;:::i;:::-;11734:74;;11817:93;11906:3;11817:93;:::i;:::-;11935:2;11930:3;11926:12;11919:19;;11578:366;;;:::o;11950:419::-;12116:4;12154:2;12143:9;12139:18;12131:26;;12203:9;12197:4;12193:20;12189:1;12178:9;12174:17;12167:47;12231:131;12357:4;12231:131;:::i;:::-;12223:139;;11950:419;;;:::o;12375:171::-;12414:3;12437:24;12455:5;12437:24;:::i;:::-;12428:33;;12483:4;12476:5;12473:15;12470:41;;12491:18;;:::i;:::-;12470:41;12538:1;12531:5;12527:13;12520:20;;12375:171;;;:::o;12552:233::-;12591:3;12614:24;12632:5;12614:24;:::i;:::-;12605:33;;12660:66;12653:5;12650:77;12647:103;;12730:18;;:::i;:::-;12647:103;12777:1;12770:5;12766:13;12759:20;;12552:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "722000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"foosBallTablePrice()": "391",
								"getInventory(address,string)": "infinite",
								"getPriceOf(string)": "infinite",
								"inventory(address,string)": "infinite",
								"owner()": "2505",
								"poolTablePrice()": "348",
								"purchase(string)": "infinite",
								"setInventory(address,string,uint256)": "infinite",
								"tableTennisPrice()": "413",
								"tokenAddress()": "2530"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 2116,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 683,
									"end": 946,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 683,
									"end": 946,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 683,
									"end": 946,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 683,
									"end": 946,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 715,
									"end": 725,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 707,
									"end": 712,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 725,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 756,
									"end": 760,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "506F6F6C205461626C6500000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 777,
									"end": 779,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 735,
									"end": 780,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 735,
									"end": 780,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 845,
									"end": 849,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "5461626C652054656E6E6973205461626C650000000000000000000000000000"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 874,
									"end": 876,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 824,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 824,
									"end": 836,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 824,
									"end": 836,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 877,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 824,
									"end": 877,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 909,
									"end": 913,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "F"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "466F6F732042616C6C205461626C650000000000000000000000000000000000"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 888,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 888,
									"end": 900,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 888,
									"end": 900,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 888,
									"end": 938,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 888,
									"end": 938,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 952,
									"end": 1091,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 952,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1075,
									"end": 1084,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1055,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1056,
									"end": 1064,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1046,
									"end": 1065,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1066,
									"end": 1071,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1046,
									"end": 1072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1072,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1084,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1084,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1046,
									"end": 1084,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 952,
									"end": 1091,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 952,
									"end": 1091,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 952,
									"end": 1091,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 952,
									"end": 1091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 112,
									"end": 260,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 112,
									"end": 260,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 214,
									"end": 225,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 254,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 236,
									"end": 254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 236,
									"end": 254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 112,
									"end": 260,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 112,
									"end": 260,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 112,
									"end": 260,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 112,
									"end": 260,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 112,
									"end": 260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 266,
									"end": 512,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 266,
									"end": 512,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 347,
									"end": 348,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 470,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 357,
									"end": 470,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 377,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 368,
									"end": 369,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 365,
									"end": 378,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 357,
									"end": 470,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 357,
									"end": 470,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 357,
									"end": 470,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 456,
									"end": 457,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 451,
									"end": 454,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 447,
									"end": 458,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 441,
									"end": 459,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 437,
									"end": 438,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 432,
									"end": 435,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 428,
									"end": 439,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 421,
									"end": 460,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 393,
									"end": 395,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 390,
									"end": 391,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 386,
									"end": 396,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 381,
									"end": 396,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 381,
									"end": 396,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 357,
									"end": 470,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 357,
									"end": 470,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 357,
									"end": 470,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 357,
									"end": 470,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 504,
									"end": 505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 501,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 490,
									"end": 493,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 486,
									"end": 502,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 479,
									"end": 506,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 328,
									"end": 512,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 266,
									"end": 512,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 266,
									"end": 512,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 266,
									"end": 512,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 266,
									"end": 512,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 518,
									"end": 908,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 518,
									"end": 908,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 624,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 685,
									"end": 690,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 652,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 652,
									"end": 691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 652,
									"end": 691,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 652,
									"end": 691,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 707,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 789,
									"end": 795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 784,
									"end": 787,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 707,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 707,
									"end": 796,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 707,
									"end": 796,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 707,
									"end": 796,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 700,
									"end": 796,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 700,
									"end": 796,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 805,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 869,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 858,
									"end": 861,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 851,
									"end": 855,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 844,
									"end": 849,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 840,
									"end": 856,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 805,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 805,
									"end": 870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 805,
									"end": 870,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 805,
									"end": 870,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 895,
									"end": 901,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 890,
									"end": 893,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 886,
									"end": 902,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 879,
									"end": 902,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 879,
									"end": 902,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 628,
									"end": 908,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 518,
									"end": 908,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 518,
									"end": 908,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 518,
									"end": 908,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 518,
									"end": 908,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 518,
									"end": 908,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 914,
									"end": 1189,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 914,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1049,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1159,
									"end": 1162,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1150,
									"end": 1156,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1068,
									"end": 1163,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1068,
									"end": 1163,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1068,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1163,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1180,
									"end": 1183,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1173,
									"end": 1183,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1173,
									"end": 1183,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 914,
									"end": 1189,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 914,
									"end": 1189,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 914,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 914,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 914,
									"end": 1189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 2116,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043054e472fab1c440231f959bf6fe57101e67d0d3c681e852171b3ed7421667864736f6c63430008180033",
									".code": [
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "9D76EA58"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "B008C7E6"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "B3390911"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "C386F5E9"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "13FA9B23"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "2616ADD5"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "2CDE4C50"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "499553FB"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "59F5E0CE"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 111,
											"end": 2116,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1097,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1097,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1097,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 390,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 390,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1241,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1241,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1241,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 246,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 246,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 246,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1741,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1741,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 187,
											"end": 207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 213,
											"end": 240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 213,
											"end": 240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 952,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 952,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 483,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 483,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 436,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 436,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1179,
											"end": 1183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1220,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1202,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 428,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 390,
											"end": 429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 390,
											"end": 429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1331,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1359,
											"end": 1363,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "506F6F6C205461626C6500000000000000000000000000000000000000000000"
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1345,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1345,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 428,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1394,
											"end": 1416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1451,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "PUSH",
											"source": 3,
											"value": "5461626C652054656E6E6973205461626C650000000000000000000000000000"
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1437,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 476,
											"end": 477,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "466F6F732042616C6C205461626C650000000000000000000000000000000000"
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1538,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1538,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1591,
											"end": 1617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1656,
											"end": 1657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1534,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1433,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1341,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1689,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 246,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1820,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1836,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1820,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 340,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1877,
											"end": 1879,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1877,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1868,
											"end": 1890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1868,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1868,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1890,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1890,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1847,
											"end": 1937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1847,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1964,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1977,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1984,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1955,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1985,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1989,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1947,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1947,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2058,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2036,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2036,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2098,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2099,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2078,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2078,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 2114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 187,
											"end": 207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 187,
											"end": 207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 213,
											"end": 240,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 213,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1064,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1071,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1046,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1084,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 952,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 483,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 477,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 436,
											"end": 477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2914,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2914,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2986,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3043,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3009,
											"end": 3089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3089,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3089,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3009,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3096,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 958,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 841,
											"end": 958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 940,
											"end": 952,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1320,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1330,
											"end": 1345,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1464,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1543,
											"end": 1577,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1602,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1605,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1643,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1381,
											"end": 1662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1729,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1786,
											"end": 1790,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1758,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 2111,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1803,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1944,
											"end": 1974,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1977,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2015,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 2111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 2111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 2111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2263,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2117,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2244,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2253,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2694,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2269,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2388,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2388,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2437,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2388,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2372,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2461,
											"end": 2467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2503,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2497,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2528,
											"end": 2534,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2526,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2541,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2513,
											"end": 2625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2544,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2544,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2544,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2625,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2513,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2674,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2634,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2688,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2634,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2694,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2694,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 3054,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2714,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2786,
											"end": 2908,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2827,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2827,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2908,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2786,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3042,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2969,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3048,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2969,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 3048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 3048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 3054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 3054,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 3054,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 3054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 3054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 3054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3714,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3060,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3192,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3181,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3198,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3282,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3163,
											"end": 3282,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3201,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3201,
											"end": 3280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3280,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3201,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3282,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3163,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3391,
											"end": 3398,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3346,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3346,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3448,
											"end": 3480,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3526,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3529,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3529,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3493,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3689,
											"end": 3696,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3687,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3634,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3714,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3714,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3720,
											"end": 3797,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3720,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3720,
											"end": 3797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3720,
											"end": 3797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3720,
											"end": 3797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3720,
											"end": 3797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3908,
											"end": 3913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3890,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3914,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3890,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 4149,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3927,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4060,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4141,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4071,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4142,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4071,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 4149,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 4149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 4149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 4149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 4149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4664,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4155,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4230,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4261,
											"end": 4270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4252,
											"end": 4259,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4248,
											"end": 4271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4276,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4360,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4241,
											"end": 4360,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4279,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4279,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4358,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4279,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4360,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4241,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4430,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4446,
											"end": 4476,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4560,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4443,
											"end": 4560,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4479,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4479,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 4558,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4479,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4560,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4443,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4639,
											"end": 4646,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4630,
											"end": 4636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4628,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4584,
											"end": 4647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4647,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4584,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4664,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4788,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4670,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4775,
											"end": 4780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4757,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 4782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 5016,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4794,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4887,
											"end": 4891,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4902,
											"end": 4928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4902,
											"end": 4928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4991,
											"end": 5008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4988,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4938,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5009,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4938,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 5016,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 5016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 5016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 5016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 5016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5144,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5022,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5113,
											"end": 5118,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5095,
											"end": 5119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5119,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5095,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5120,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5075,
											"end": 5138,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5132,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5124,
											"end": 5136,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5138,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5075,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5289,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5150,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5241,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5277,
											"end": 5282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5250,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5250,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 6094,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5295,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5426,
											"end": 5433,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5450,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5453,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5641,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5598,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5730,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5700,
											"end": 5732,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5759,
											"end": 5777,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5757,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5748,
											"end": 5778,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5781,
											"end": 5860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5941,
											"end": 5948,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5932,
											"end": 5938,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5930,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5886,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5886,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5876,
											"end": 5949,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5876,
											"end": 5949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5671,
											"end": 5959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6069,
											"end": 6076,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6060,
											"end": 6066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6058,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6024,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6024,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 6094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 6094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 6094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 6094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 6094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 6094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6100,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6152,
											"end": 6158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6180,
											"end": 6192,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6353,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6205,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6344,
											"end": 6347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6353,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6605,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 6359,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6458,
											"end": 6471,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6540,
											"end": 6551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6530,
											"end": 6531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6528,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6488,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6489,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 6450,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6579,
											"end": 6595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6611,
											"end": 7001,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 6611,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6745,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6745,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6745,
											"end": 6784,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 6745,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6877,
											"end": 6880,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6800,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6889,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 6800,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6793,
											"end": 6889,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6793,
											"end": 6889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 6954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6944,
											"end": 6948,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6937,
											"end": 6942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 6898,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 6963,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6898,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6988,
											"end": 6994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6972,
											"end": 6995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6972,
											"end": 6995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6721,
											"end": 7001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6611,
											"end": 7001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6611,
											"end": 7001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6611,
											"end": 7001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6611,
											"end": 7001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6611,
											"end": 7001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7282,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7007,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7139,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 7252,
											"end": 7255,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7249,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7161,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7256,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 7161,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7266,
											"end": 7276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7266,
											"end": 7276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7282,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7468,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7288,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7336,
											"end": 7413,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7433,
											"end": 7437,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 7430,
											"end": 7431,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7423,
											"end": 7438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7461,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7576,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7474,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7568,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7560,
											"end": 7561,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7556,
											"end": 7569,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 7535,
											"end": 7569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7535,
											"end": 7569,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7674,
											"end": 7680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7703,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7723,
											"end": 7731,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7720,
											"end": 7735,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7826,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7833,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7813,
											"end": 7817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7834,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7857,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7807,
											"end": 7857,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7837,
											"end": 7855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7857,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7807,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7888,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7877,
											"end": 7885,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 7889,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7870,
											"end": 8321,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7870,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 7870,
											"end": 8321,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8302,
											"end": 8306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8291,
											"end": 8307,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8282,
											"end": 8307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8282,
											"end": 8307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7870,
											"end": 8321,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 7870,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8342,
											"end": 8357,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8334,
											"end": 8357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8334,
											"end": 8357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 8405,
											"end": 8413,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 8382,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8414,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 8382,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 8414,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 8414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7712,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8490,
											"end": 8495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8689,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8702,
											"end": 8703,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8693,
											"end": 8703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8693,
											"end": 8703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8704,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8704,
											"end": 8709,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 8720,
											"end": 8756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8738,
											"end": 8748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8749,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8749,
											"end": 8754,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8756,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 8720,
											"end": 8756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8816,
											"end": 8820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8865,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8859,
											"end": 8886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8886,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 8859,
											"end": 8886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8900,
											"end": 8901,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8895,
											"end": 9086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 9086,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 8895,
											"end": 9086,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8809,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 9086,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8886,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 8859,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8877,
											"end": 8878,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8868,
											"end": 8878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8868,
											"end": 8878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8879,
											"end": 8884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8879,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8879,
											"end": 8884,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 9086,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 8895,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8940,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 8930,
											"end": 8938,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8944,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8924,
											"end": 8967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8947,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8947,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 8947,
											"end": 8965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8947,
											"end": 8965,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8947,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8967,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8924,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9004,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 8994,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8989,
											"end": 9005,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 8980,
											"end": 9005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8980,
											"end": 9005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9034,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9024,
											"end": 9029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9021,
											"end": 9035,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9058,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 9018,
											"end": 9058,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 9038,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9058,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 9018,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8809,
											"end": 9086,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8809,
											"end": 9086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9195,
											"end": 9197,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9185,
											"end": 9193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9182,
											"end": 9198,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9176,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 9170,
											"end": 9174,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9167,
											"end": 9180,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9163,
											"end": 9199,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9147,
											"name": "PUSH",
											"source": 4,
											"value": "4E"
										},
										{
											"begin": 9135,
											"end": 9143,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9132,
											"end": 9148,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9127,
											"end": 9129,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9121,
											"end": 9125,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9130,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9149,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9209,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9095,
											"end": 9341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9095,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9095,
											"end": 9341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9251,
											"end": 9259,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 9260,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9232,
											"end": 9260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9232,
											"end": 9260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9289,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9290,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9273,
											"end": 9313,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9273,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9273,
											"end": 9313,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 9293,
											"end": 9311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9273,
											"end": 9313,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9273,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9326,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 9326,
											"end": 9331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9095,
											"end": 9341,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9095,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9366,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9404,
											"end": 9407,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9394,
											"end": 9402,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9388,
											"end": 9392,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9385,
											"end": 9386,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9366,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 9366,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9366,
											"end": 9408,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9366,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9408,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9440,
											"end": 9444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9431,
											"end": 9445,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9424,
											"end": 9429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9421,
											"end": 9446,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9418,
											"end": 9469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9418,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 9418,
											"end": 9469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 9449,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9418,
											"end": 9469,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 9418,
											"end": 9469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9498,
											"end": 9502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9491,
											"end": 9496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9503,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9478,
											"end": 9503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9478,
											"end": 9503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 9509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9800,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 9515,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9617,
											"end": 9621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9599,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9599,
											"end": 9622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9599,
											"end": 9622,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9599,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9643,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9661,
											"end": 9669,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9643,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9643,
											"end": 9670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9643,
											"end": 9670,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9643,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9631,
											"end": 9670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9689,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9726,
											"end": 9792,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9716,
											"end": 9724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9689,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 9689,
											"end": 9793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9689,
											"end": 9793,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9689,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9680,
											"end": 9793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9680,
											"end": 9793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9800,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 9806,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9851,
											"end": 9852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9951,
											"end": 9955,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 9948,
											"end": 9949,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9941,
											"end": 9956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 9979,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 10067,
											"end": 10068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 10049,
											"end": 10069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 10049,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10101,
											"end": 10102,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 10083,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10083,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10103,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10122,
											"end": 10123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 10127,
											"end": 10145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10112,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10169,
											"end": 10170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10171,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10157,
											"end": 10171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10157,
											"end": 10171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10352,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 10183,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10267,
											"end": 10278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10296,
											"end": 10299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10308,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10341,
											"end": 10345,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10336,
											"end": 10339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10332,
											"end": 10346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10317,
											"end": 10346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10317,
											"end": 10346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10352,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10358,
											"end": 10587,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 10358,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10532,
											"name": "PUSH",
											"source": 4,
											"value": "496E73756666696369656E742062616C616E636520746F207075726368617365"
										},
										{
											"begin": 10494,
											"end": 10495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10482,
											"end": 10496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10475,
											"end": 10533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10567,
											"end": 10579,
											"name": "PUSH",
											"source": 4,
											"value": "2074686973206974656D00000000000000000000000000000000000000000000"
										},
										{
											"begin": 10562,
											"end": 10564,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10554,
											"end": 10560,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10543,
											"end": 10580,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10358,
											"end": 10587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10358,
											"end": 10587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 10815,
											"end": 10818,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 10756,
											"end": 10823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10749,
											"end": 10823,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10749,
											"end": 10823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10921,
											"end": 10924,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 10832,
											"end": 10925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10950,
											"end": 10952,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10945,
											"end": 10948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10941,
											"end": 10953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10934,
											"end": 10953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10934,
											"end": 10953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11131,
											"end": 11135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11158,
											"end": 11167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11146,
											"end": 11172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11146,
											"end": 11172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11218,
											"end": 11227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11208,
											"end": 11228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11204,
											"end": 11205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11182,
											"end": 11229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 11372,
											"end": 11376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 11246,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11238,
											"end": 11377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11238,
											"end": 11377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10965,
											"end": 11384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11390,
											"end": 11572,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11390,
											"end": 11572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11530,
											"end": 11564,
											"name": "PUSH",
											"source": 4,
											"value": "536F7272792C2074686973206974656D206973206F7574206F662073746F636B"
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11524,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11507,
											"end": 11565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11390,
											"end": 11572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11390,
											"end": 11572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11578,
											"end": 11944,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 11578,
											"end": 11944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11720,
											"end": 11723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 11805,
											"end": 11807,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11800,
											"end": 11803,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11741,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 11741,
											"end": 11808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11741,
											"end": 11808,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 11741,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11817,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11906,
											"end": 11909,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11817,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11817,
											"end": 11910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11817,
											"end": 11910,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11817,
											"end": 11910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11935,
											"end": 11937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11930,
											"end": 11933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11926,
											"end": 11938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11919,
											"end": 11938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11919,
											"end": 11938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11578,
											"end": 11944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11578,
											"end": 11944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11578,
											"end": 11944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11578,
											"end": 11944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11950,
											"end": 12369,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 11950,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12116,
											"end": 12120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12154,
											"end": 12156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12143,
											"end": 12152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12139,
											"end": 12157,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12203,
											"end": 12212,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12197,
											"end": 12201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12193,
											"end": 12213,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12189,
											"end": 12190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12174,
											"end": 12191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12167,
											"end": 12214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12231,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 12357,
											"end": 12361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12231,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 12231,
											"end": 12362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12231,
											"end": 12362,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 12231,
											"end": 12362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12223,
											"end": 12362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12223,
											"end": 12362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11950,
											"end": 12369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11950,
											"end": 12369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11950,
											"end": 12369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11950,
											"end": 12369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12546,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 12375,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 12455,
											"end": 12460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 12437,
											"end": 12461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12428,
											"end": 12461,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12428,
											"end": 12461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12483,
											"end": 12487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12476,
											"end": 12481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12473,
											"end": 12488,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 12470,
											"end": 12511,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12491,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 12491,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 12491,
											"end": 12509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12491,
											"end": 12509,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 12491,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12511,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 12470,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12538,
											"end": 12539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12531,
											"end": 12536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12527,
											"end": 12540,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12520,
											"end": 12540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12520,
											"end": 12540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12785,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 12552,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12591,
											"end": 12594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12614,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 12632,
											"end": 12637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12614,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 12614,
											"end": 12638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12614,
											"end": 12638,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 12614,
											"end": 12638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12605,
											"end": 12638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12605,
											"end": 12638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12660,
											"end": 12726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12650,
											"end": 12727,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12647,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 12647,
											"end": 12750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 12730,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 12730,
											"end": 12748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12748,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 12730,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12647,
											"end": 12750,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 12647,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12770,
											"end": 12775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12766,
											"end": 12779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12759,
											"end": 12779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12759,
											"end": 12779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/GameEmporium.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foosBallTablePrice()": "b3390911",
							"getInventory(address,string)": "13fa9b23",
							"getPriceOf(string)": "2cde4c50",
							"inventory(address,string)": "499553fb",
							"owner()": "8da5cb5b",
							"poolTablePrice()": "2616add5",
							"purchase(string)": "59f5e0ce",
							"setInventory(address,string,uint256)": "b008c7e6",
							"tableTennisPrice()": "c386f5e9",
							"tokenAddress()": "9d76ea58"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"foosBallTablePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"}],\"name\":\"getInventory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"}],\"name\":\"getPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"inventory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolTablePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_item\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"setInventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tableTennisPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameEmporium.sol\":\"GameEmporium\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/GameEmporium.sol\":{\"keccak256\":\"0x79ae8b5c3d5afa8437e56c1adcb799ad5b10e5d7144c35b4df298c45fc825857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beac8147b43acca2836879b01c1cb995af0e08350f180ac6b971d1c1a7482022\",\"dweb:/ipfs/Qme29Hm61BJR7R8F4cuH8d24dgb8Qgfv387xkmrpYPStu3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1418,
								"contract": "contracts/GameEmporium.sol:GameEmporium",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1420,
								"contract": "contracts/GameEmporium.sol:GameEmporium",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1426,
								"contract": "contracts/GameEmporium.sol:GameEmporium",
								"label": "inventory",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(string => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1308
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						]
					},
					"id": 255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1309,
							"src": "127:37:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "135:4:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1414,
							"src": "165:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1413,
										"src": "173:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "Strings",
							"nameLocation": "259:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "273:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 7,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "335:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 10,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 19,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "520:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:0"
									},
									"src": "470:66:0"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "708:627:0",
										"statements": [
											{
												"id": 65,
												"nodeType": "UncheckedBlock",
												"src": "718:611:0",
												"statements": [
													{
														"assignments": [
															28
														],
														"declarations": [
															{
																"constant": false,
																"id": 28,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "742:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 27,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 35,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 31,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "770:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 29,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "759:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1128,
																	"src": "759:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:0"
													},
													{
														"assignments": [
															37
														],
														"declarations": [
															{
																"constant": false,
																"id": 37,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "794:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 36,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 42,
														"initialValue": {
															"arguments": [
																{
																	"id": 40,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "828:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 38,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:0"
													},
													{
														"assignments": [
															44
														],
														"declarations": [
															{
																"constant": false,
																"id": 44,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "849:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 43,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 45,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:0"
													},
													{
														"AST": {
															"nativeSrc": "930:67:0",
															"nodeType": "YulBlock",
															"src": "930:67:0",
															"statements": [
																{
																	"nativeSrc": "948:35:0",
																	"nodeType": "YulAssignment",
																	"src": "948:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:0",
																						"nodeType": "YulLiteral",
																						"src": "971:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:0"
																				},
																				"nativeSrc": "967:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:0"
																		},
																		"nativeSrc": "955:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 37,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:0",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:0",
																"valueSize": 1
															},
															{
																"declaration": 44,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:0",
																"valueSize": 1
															}
														],
														"id": 46,
														"nodeType": "InlineAssembly",
														"src": "921:76:0"
													},
													{
														"body": {
															"id": 61,
															"nodeType": "Block",
															"src": "1023:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:0",
																		"subExpression": {
																			"id": 48,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 44,
																			"src": "1041:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 50,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:0",
																		"nodeType": "YulBlock",
																		"src": "1124:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:0",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:0"
																									},
																									"nativeSrc": "1164:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:0"
																							},
																							"nativeSrc": "1159:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:0"
																					},
																					"nativeSrc": "1146:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:0"
																				},
																				"nativeSrc": "1146:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 9,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 44,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 22,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 51,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:0"
																},
																{
																	"expression": {
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 52,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1227:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 55,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 56,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 60,
																	"nodeType": "IfStatement",
																	"src": "1256:21:0",
																	"trueBody": {
																		"id": 59,
																		"nodeType": "Break",
																		"src": "1272:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 62,
														"nodeType": "WhileStatement",
														"src": "1010:282:0"
													},
													{
														"expression": {
															"id": 63,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1312:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 26,
														"id": 64,
														"nodeType": "Return",
														"src": "1305:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "693:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:0"
									},
									"scope": 254,
									"src": "637:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1511:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1542:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 87,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "1588:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 85,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "1573:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1413_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1412,
																		"src": "1573:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 84,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1564:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 75,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 74,
												"id": 91,
												"nodeType": "Return",
												"src": "1521:75:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1459:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 69,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1496:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:0"
									},
									"scope": 254,
									"src": "1435:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1782:100:0",
										"statements": [
											{
												"id": 111,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 102,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1835:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 105,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "1854:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 103,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "1842:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1250,
																			"src": "1842:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 101,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	113,
																	196,
																	216
																],
																"referencedDeclaration": 196,
																"src": "1823:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 100,
														"id": 110,
														"nodeType": "Return",
														"src": "1816:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1729:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1767:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:0"
									},
									"scope": 254,
									"src": "1708:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2095:435:0",
										"statements": [
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2105:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"id": 125,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "2126:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2141:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 127,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 132,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 129,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 138,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 140,
														"indexExpression": {
															"hexValue": "30",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:0"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 144,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2223:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 146,
														"indexExpression": {
															"hexValue": "31",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:0"
											},
											{
												"body": {
													"id": 178,
													"nodeType": "Block",
													"src": "2293:95:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 164,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "2307:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 166,
																	"indexExpression": {
																		"id": 165,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2314:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 167,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "2319:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 171,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "2330:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:0"
														},
														{
															"expression": {
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 174,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "2361:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 158,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 179,
															"src": "2253:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 157,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 153,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2269:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:0",
														"subExpression": {
															"id": 161,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2290:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 163,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "IfStatement",
												"src": "2397:96:0",
												"trueBody": {
													"id": 188,
													"nodeType": "Block",
													"src": "2418:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 184,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "2468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 185,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "2475:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 183,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2439:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 187,
															"nodeType": "RevertStatement",
															"src": "2432:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 190,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 194,
												"nodeType": "Return",
												"src": "2502:21:0"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2080:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:0"
									},
									"scope": 254,
									"src": "2005:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2762:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 209,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 207,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 205,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 212,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2815:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 204,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															113,
															196,
															216
														],
														"referencedDeclaration": 196,
														"src": "2779:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 214,
												"nodeType": "Return",
												"src": "2772:58:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2710:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2747:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:0"
									},
									"scope": 254,
									"src": "2689:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2992:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "3015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 226,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 231,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 240,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3063:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 238,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 237,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 246,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "3086:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 244,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 243,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 225,
												"id": 251,
												"nodeType": "Return",
												"src": "3002:87:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2929:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2946:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:0"
									},
									"scope": 254,
									"src": "2914:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 255,
							"src": "251:2847:0",
							"usedErrors": [
								19
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "Math",
							"nameLocation": "211:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:1",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 260,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:1"
									},
									"src": "277:29:1"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 265,
									"members": [
										{
											"id": 261,
											"name": "Floor",
											"nameLocation": "336:5:1",
											"nodeType": "EnumValue",
											"src": "336:5:1"
										},
										{
											"id": 262,
											"name": "Ceil",
											"nameLocation": "379:4:1",
											"nodeType": "EnumValue",
											"src": "379:4:1"
										},
										{
											"id": 263,
											"name": "Trunc",
											"nameLocation": "421:5:1",
											"nodeType": "EnumValue",
											"src": "421:5:1"
										},
										{
											"id": 264,
											"name": "Expand",
											"nameLocation": "451:6:1",
											"nodeType": "EnumValue",
											"src": "451:6:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:1",
									"nodeType": "EnumDefinition",
									"src": "312:169:1"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "661:140:1",
										"statements": [
											{
												"id": 295,
												"nodeType": "UncheckedBlock",
												"src": "671:124:1",
												"statements": [
													{
														"assignments": [
															278
														],
														"declarations": [
															{
																"constant": false,
																"id": 278,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "695:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 282,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "707:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "711:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "730:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 284,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "726:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 276,
															"id": 289,
															"nodeType": "Return",
															"src": "737:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 292,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "782:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 293,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 276,
														"id": 294,
														"nodeType": "Return",
														"src": "768:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "646:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "652:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:1"
									},
									"scope": 1308,
									"src": "585:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "984:113:1",
										"statements": [
											{
												"id": 323,
												"nodeType": "UncheckedBlock",
												"src": "994:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "1022:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 310,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "1026:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 316,
														"nodeType": "IfStatement",
														"src": "1018:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 308,
															"id": 315,
															"nodeType": "Return",
															"src": "1029:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 318,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "1074:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "1078:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 321,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 308,
														"id": 322,
														"nodeType": "Return",
														"src": "1060:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "924:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "935:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "969:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "975:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:1"
									},
									"scope": 1308,
									"src": "908:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1283:417:1",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1551:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 344,
														"nodeType": "IfStatement",
														"src": "1547:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 343,
															"nodeType": "Return",
															"src": "1559:16:1"
														}
													},
													{
														"assignments": [
															346
														],
														"declarations": [
															{
																"constant": false,
																"id": 346,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "1589:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 350,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1601:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1605:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 351,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1624:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 352,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "1628:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 354,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1633:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 360,
														"nodeType": "IfStatement",
														"src": "1620:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 359,
															"nodeType": "Return",
															"src": "1636:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 362,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1681:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 363,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 336,
														"id": 364,
														"nodeType": "Return",
														"src": "1667:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1223:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1234:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1274:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:1"
									},
									"scope": 1308,
									"src": "1207:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1887:114:1",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "1925:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 386,
														"nodeType": "IfStatement",
														"src": "1921:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 378,
															"id": 385,
															"nodeType": "Return",
															"src": "1933:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 388,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "1978:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 389,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1982:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 391,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 378,
														"id": 392,
														"nodeType": "Return",
														"src": "1964:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1827:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1838:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1872:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:1"
									},
									"scope": 1308,
									"src": "1811:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2198:114:1",
										"statements": [
											{
												"id": 421,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2236:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 414,
														"nodeType": "IfStatement",
														"src": "2232:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 406,
															"id": 413,
															"nodeType": "Return",
															"src": "2244:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2289:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 417,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2293:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 419,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 406,
														"id": 420,
														"nodeType": "Return",
														"src": "2275:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2138:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2183:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2189:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:1"
									},
									"scope": 1308,
									"src": "2122:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2449:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 433,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "2466:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 434,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "2470:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 437,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "2478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:1",
													"trueExpression": {
														"id": 436,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2474:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 439,
												"nodeType": "Return",
												"src": "2459:20:1"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2395:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2406:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2440:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:1"
									},
									"scope": 1308,
									"src": "2382:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2624:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 451,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2641:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 452,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2645:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 455,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2653:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:1",
													"trueExpression": {
														"id": 454,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2649:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 457,
												"nodeType": "Return",
												"src": "2634:20:1"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2570:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2581:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:1"
									},
									"scope": 1308,
									"src": "2557:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2845:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 469,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "2900:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 470,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2904:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "2910:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 474,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2914:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 476,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 468,
												"id": 480,
												"nodeType": "Return",
												"src": "2892:28:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2791:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2802:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2836:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:1"
									},
									"scope": 1308,
									"src": "2774:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3219:260:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3233:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "3229:127:1",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "3241:115:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 495,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "3340:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 496,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 491,
															"id": 498,
															"nodeType": "Return",
															"src": "3333:12:1"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 501,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3444:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 505,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "3458:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 509,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3467:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 514,
												"nodeType": "Return",
												"src": "3437:35:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3165:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3176:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3210:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:1"
									},
									"scope": 1308,
									"src": "3148:331:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "3901:4018:1",
										"statements": [
											{
												"id": 640,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:1",
												"statements": [
													{
														"assignments": [
															529
														],
														"declarations": [
															{
																"constant": false,
																"id": 529,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4232:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 533,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "4248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 531,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "4252:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:1"
													},
													{
														"assignments": [
															535
														],
														"declarations": [
															{
																"constant": false,
																"id": 535,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4312:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 534,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 536,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:1"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:1",
															"nodeType": "YulBlock",
															"src": "4392:122:1",
															"statements": [
																{
																	"nativeSrc": "4410:30:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:1"
																				},
																				"nativeSrc": "4433:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:1"
																		},
																		"nativeSrc": "4420:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:1",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:1",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:1"
																				},
																				"nativeSrc": "4470:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:1"
																				},
																				"nativeSrc": "4486:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nativeSrc": "4466:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:1",
																"valueSize": 1
															}
														],
														"id": 537,
														"nodeType": "InlineAssembly",
														"src": "4383:131:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4595:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 546,
														"nodeType": "IfStatement",
														"src": "4591:368:1",
														"trueBody": {
															"id": 545,
															"nodeType": "Block",
															"src": "4607:352:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "4925:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 542,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "4933:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 527,
																	"id": 544,
																	"nodeType": "Return",
																	"src": "4918:26:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5065:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 548,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "5080:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 554,
														"nodeType": "IfStatement",
														"src": "5061:88:1",
														"trueBody": {
															"id": 553,
															"nodeType": "Block",
															"src": "5087:62:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 550,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "5112:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 552,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:1"
																}
															]
														}
													},
													{
														"assignments": [
															556
														],
														"declarations": [
															{
																"constant": false,
																"id": 556,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5404:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 557,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:1"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:1",
															"nodeType": "YulBlock",
															"src": "5444:291:1",
															"statements": [
																{
																	"nativeSrc": "5513:38:1",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:1"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:1"
																		},
																		"nativeSrc": "5526:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:1",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:1"
																				},
																				"nativeSrc": "5653:20:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:1"
																		},
																		"nativeSrc": "5642:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:1",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:1"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:1"
																		},
																		"nativeSrc": "5700:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:1",
																"valueSize": 1
															}
														],
														"id": 558,
														"nodeType": "InlineAssembly",
														"src": "5435:300:1"
													},
													{
														"assignments": [
															560
														],
														"declarations": [
															{
																"constant": false,
																"id": 560,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5939:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 567,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5954:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 563,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "5973:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:1"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:1",
															"nodeType": "YulBlock",
															"src": "6008:362:1",
															"statements": [
																{
																	"nativeSrc": "6073:37:1",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:1"
																		},
																		"nativeSrc": "6088:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:1",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:1"
																		},
																		"nativeSrc": "6186:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:1",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:1"
																						},
																						"nativeSrc": "6333:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:1"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:1"
																				},
																				"nativeSrc": "6329:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:1"
																		},
																		"nativeSrc": "6325:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:1",
																"valueSize": 1
															},
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:1",
																"valueSize": 1
															}
														],
														"id": 568,
														"nodeType": "InlineAssembly",
														"src": "5999:371:1"
													},
													{
														"expression": {
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "6436:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 570,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6445:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 571,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6453:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 574,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:1"
													},
													{
														"assignments": [
															576
														],
														"declarations": [
															{
																"constant": false,
																"id": 576,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "6775:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 583,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 578,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6798:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:1"
													},
													{
														"expression": {
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 584,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7031:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 586,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7046:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 587,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 591,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:1"
													},
													{
														"expression": {
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 592,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7100:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7115:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 595,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:1"
													},
													{
														"expression": {
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 600,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7170:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 602,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7185:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 603,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7199:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 607,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:1"
													},
													{
														"expression": {
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 608,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7240:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 610,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7255:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 611,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7269:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 615,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:1"
													},
													{
														"expression": {
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 616,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7310:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 618,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7325:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 619,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7339:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 623,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:1"
													},
													{
														"expression": {
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 624,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7381:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 626,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7396:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 627,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7410:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 631,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:1"
													},
													{
														"expression": {
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 632,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "7851:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 633,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "7860:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 634,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7868:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 637,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:1"
													},
													{
														"expression": {
															"id": 638,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7896:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 527,
														"id": 639,
														"nodeType": "Return",
														"src": "7889:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3819:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3830:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3841:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:1"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3885:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:1"
									},
									"scope": 1308,
									"src": "3803:4116:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "8161:192:1",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "8171:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8195:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8198:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 662,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8201:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															685
														],
														"referencedDeclaration": 642,
														"src": "8188:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 666,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "8244:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 665,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "8227:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 669,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "8264:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 670,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "8267:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 671,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "8270:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 668,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 681,
												"nodeType": "IfStatement",
												"src": "8223:101:1",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "8288:36:1",
													"statements": [
														{
															"expression": {
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 676,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "8302:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 682,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "8340:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 656,
												"id": 683,
												"nodeType": "Return",
												"src": "8333:13:1"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8067:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8078:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8089:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8110:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "8110:8:1"
													},
													"referencedDeclaration": 265,
													"src": "8110:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8152:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:1"
									},
									"scope": 1308,
									"src": "8051:302:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "8644:1585:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8658:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "8654:45:1",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "8666:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 692,
															"id": 697,
															"nodeType": "Return",
															"src": "8680:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "9378:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 704,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "9406:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 703,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			964,
																			999
																		],
																		"referencedDeclaration": 964,
																		"src": "9401:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 708,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:1"
											},
											{
												"id": 795,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:1",
												"statements": [
													{
														"expression": {
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 711,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9839:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 712,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9849:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 713,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9858:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 714,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9862:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:1"
													},
													{
														"expression": {
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 722,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9888:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 723,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9898:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 724,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9907:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 725,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9911:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 728,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 732,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:1"
													},
													{
														"expression": {
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 733,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9937:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 734,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9947:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 735,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9956:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 736,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9960:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 743,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:1"
													},
													{
														"expression": {
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 744,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9986:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 745,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 746,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10005:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 747,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10009:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:1"
													},
													{
														"expression": {
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 755,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10035:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 756,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10045:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 757,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10054:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 758,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10058:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 761,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 765,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:1"
													},
													{
														"expression": {
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10084:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 767,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10094:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 768,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10103:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 769,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10107:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 772,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 776,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:1"
													},
													{
														"expression": {
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10133:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 778,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10143:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 779,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10152:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 780,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10156:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 783,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 787,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 789,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "10193:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 790,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "10201:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 791,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "10205:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 788,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "10189:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 692,
														"id": 794,
														"nodeType": "Return",
														"src": "10182:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:1"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8635:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:1"
									},
									"scope": 1308,
									"src": "8587:1642:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "10405:164:1",
										"statements": [
											{
												"id": 830,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:1",
												"statements": [
													{
														"assignments": [
															809
														],
														"declarations": [
															{
																"constant": false,
																"id": 809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 830,
																"src": "10439:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 813,
														"initialValue": {
															"arguments": [
																{
																	"id": 811,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "10461:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 810,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	797,
																	832
																],
																"referencedDeclaration": 797,
																"src": "10456:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "10484:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 803,
																						"src": "10511:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "10494:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 818,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10524:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 819,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10533:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 821,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "10542:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 807,
														"id": 829,
														"nodeType": "Return",
														"src": "10477:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10343:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10354:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "10354:8:1"
													},
													"referencedDeclaration": 265,
													"src": "10354:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:1"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10396:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:1"
									},
									"scope": 1308,
									"src": "10329:240:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "10760:922:1",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "10770:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"hexValue": "30",
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:1"
											},
											{
												"id": 960,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10826:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "IfStatement",
														"src": "10822:99:1",
														"trueBody": {
															"id": 857,
															"nodeType": "Block",
															"src": "10844:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10862:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:1"
																},
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "10893:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10938:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "10934:96:1",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "10955:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10973:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:1"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11003:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11047:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "11043:96:1",
														"trueBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "11064:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11082:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:1"
																},
																{
																	"expression": {
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11112:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 886,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11156:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "11152:96:1",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "11173:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11191:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:1"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11221:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11265:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "11261:93:1",
														"trueBody": {
															"id": 917,
															"nodeType": "Block",
															"src": "11281:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11299:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:1"
																},
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11328:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11371:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "11367:93:1",
														"trueBody": {
															"id": 932,
															"nodeType": "Block",
															"src": "11387:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11405:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:1"
																},
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11434:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11477:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 948,
														"nodeType": "IfStatement",
														"src": "11473:93:1",
														"trueBody": {
															"id": 947,
															"nodeType": "Block",
															"src": "11493:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11511:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:1"
																},
																{
																	"expression": {
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11540:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 946,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 949,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11583:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 959,
														"nodeType": "IfStatement",
														"src": "11579:64:1",
														"trueBody": {
															"id": 958,
															"nodeType": "Block",
															"src": "11599:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11617:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 957,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 961,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 841,
													"src": "11669:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 839,
												"id": 962,
												"nodeType": "Return",
												"src": "11662:13:1"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:1",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10713:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:1"
									},
									"scope": 1308,
									"src": "10699:983:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "11915:168:1",
										"statements": [
											{
												"id": 997,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:1",
												"statements": [
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 997,
																"src": "11949:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 980,
														"initialValue": {
															"arguments": [
																{
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "11971:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 977,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	964,
																	999
																],
																"referencedDeclaration": 964,
																"src": "11966:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "11998:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 983,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "12025:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 982,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "12008:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 985,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 986,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 976,
																						"src": "12043:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 988,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "12052:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 974,
														"id": 996,
														"nodeType": "Return",
														"src": "11991:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11849:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11864:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 968,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "11864:8:1"
													},
													"referencedDeclaration": 265,
													"src": "11864:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11906:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:1"
									},
									"scope": 1308,
									"src": "11835:248:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "12276:854:1",
										"statements": [
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "12286:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"hexValue": "30",
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:1"
											},
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12342:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1027,
														"nodeType": "IfStatement",
														"src": "12338:103:1",
														"trueBody": {
															"id": 1026,
															"nodeType": "Block",
															"src": "12361:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12379:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1021,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:1"
																},
																{
																	"expression": {
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1022,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12414:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1025,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12458:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1044,
														"nodeType": "IfStatement",
														"src": "12454:103:1",
														"trueBody": {
															"id": 1043,
															"nodeType": "Block",
															"src": "12477:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12495:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:1"
																},
																{
																	"expression": {
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12530:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1042,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12574:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1061,
														"nodeType": "IfStatement",
														"src": "12570:103:1",
														"trueBody": {
															"id": 1060,
															"nodeType": "Block",
															"src": "12593:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12611:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1055,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:1"
																},
																{
																	"expression": {
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12646:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1059,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12690:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1078,
														"nodeType": "IfStatement",
														"src": "12686:100:1",
														"trueBody": {
															"id": 1077,
															"nodeType": "Block",
															"src": "12708:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1067,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12726:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1072,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:1"
																},
																{
																	"expression": {
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12760:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1076,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12803:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1095,
														"nodeType": "IfStatement",
														"src": "12799:100:1",
														"trueBody": {
															"id": 1094,
															"nodeType": "Block",
															"src": "12821:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12839:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:1"
																},
																{
																	"expression": {
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1090,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12873:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1093,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12916:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "12912:100:1",
														"trueBody": {
															"id": 1111,
															"nodeType": "Block",
															"src": "12934:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12952:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:1"
																},
																{
																	"expression": {
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12986:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "13029:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "13025:66:1",
														"trueBody": {
															"id": 1122,
															"nodeType": "Block",
															"src": "13047:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1118,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "13065:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1121,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1125,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "13117:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1126,
												"nodeType": "Return",
												"src": "13110:13:1"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:1",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12229:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12267:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:1"
									},
									"scope": 1308,
									"src": "12214:916:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "13365:170:1",
										"statements": [
											{
												"id": 1161,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:1",
												"statements": [
													{
														"assignments": [
															1140
														],
														"declarations": [
															{
																"constant": false,
																"id": 1140,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1161,
																"src": "13399:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1144,
														"initialValue": {
															"arguments": [
																{
																	"id": 1142,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "13422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1141,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1128,
																	1163
																],
																"referencedDeclaration": 1128,
																"src": "13416:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "13449:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1147,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "13476:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1146,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "13459:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1149,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1150,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "13495:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1152,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "13504:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1138,
														"id": 1160,
														"nodeType": "Return",
														"src": "13442:76:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13299:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13314:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1132,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "13314:8:1"
													},
													"referencedDeclaration": 265,
													"src": "13314:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:1"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13356:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:1"
									},
									"scope": 1308,
									"src": "13284:251:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "13855:600:1",
										"statements": [
											{
												"assignments": [
													1172
												],
												"declarations": [
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "13865:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"hexValue": "30",
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:1"
											},
											{
												"id": 1246,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "13921:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1189,
														"nodeType": "IfStatement",
														"src": "13917:98:1",
														"trueBody": {
															"id": 1188,
															"nodeType": "Block",
															"src": "13939:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "13957:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:1"
																},
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "13988:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14032:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "14028:95:1",
														"trueBody": {
															"id": 1203,
															"nodeType": "Block",
															"src": "14049:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14067:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:1"
																},
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14097:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14140:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "14136:95:1",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "14157:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14175:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:1"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14205:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1234,
														"nodeType": "IfStatement",
														"src": "14244:95:1",
														"trueBody": {
															"id": 1233,
															"nodeType": "Block",
															"src": "14265:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14283:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:1"
																},
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14313:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14356:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1245,
														"nodeType": "IfStatement",
														"src": "14352:64:1",
														"trueBody": {
															"id": 1244,
															"nodeType": "Block",
															"src": "14372:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1240,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14390:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1243,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1247,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "14442:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1248,
												"nodeType": "Return",
												"src": "14435:13:1"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:1",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13808:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:1"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:1"
									},
									"scope": 1308,
									"src": "13792:663:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "14692:177:1",
										"statements": [
											{
												"id": 1286,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:1",
												"statements": [
													{
														"assignments": [
															1262
														],
														"declarations": [
															{
																"constant": false,
																"id": 1262,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1286,
																"src": "14726:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1266,
														"initialValue": {
															"arguments": [
																{
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "14750:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1263,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1250,
																	1288
																],
																"referencedDeclaration": 1250,
																"src": "14743:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "14777:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1269,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "14804:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1268,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "14787:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1274,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1272,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1262,
																									"src": "14823:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1273,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1275,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1277,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "14838:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1260,
														"id": 1285,
														"nodeType": "Return",
														"src": "14770:82:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:1",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14626:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14641:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "14641:8:1"
													},
													"referencedDeclaration": 265,
													"src": "14641:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:1"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14683:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:1"
									},
									"scope": 1308,
									"src": "14610:259:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "15067:48:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "15090:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1305,
												"nodeType": "Return",
												"src": "15077:31:1"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:1",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15019:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1290,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "15019:8:1"
													},
													"referencedDeclaration": 265,
													"src": "15019:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:1"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15061:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:1"
									},
									"scope": 1308,
									"src": "14993:122:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1309,
							"src": "203:14914:1",
							"usedErrors": [
								260
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1413
						]
					},
					"id": 1414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:2",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1413,
							"linearizedBaseContracts": [
								1413
							],
							"name": "SignedMath",
							"nameLocation": "224:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "376:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1321,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "393:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1322,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "397:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "405:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:2",
													"trueExpression": {
														"id": 1324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "401:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1327,
												"nodeType": "Return",
												"src": "386:20:2"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:2",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "325:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1313,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "335:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1315,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:2"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "368:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:2"
									},
									"scope": 1413,
									"src": "312:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "555:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1339,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1340,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "576:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "584:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:2",
													"trueExpression": {
														"id": 1342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "580:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1338,
												"id": 1345,
												"nodeType": "Return",
												"src": "565:20:2"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:2",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "504:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "514:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:2"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "547:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1336,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:2"
									},
									"scope": 1413,
									"src": "491:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "797:162:2",
										"statements": [
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "859:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1357,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1359,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "871:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1360,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "875:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1362,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1363,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "882:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1364,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "886:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1366,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1369,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "911:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1377,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1358,
																						"src": "931:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1375,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1373,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1382,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "945:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1383,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "949:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1385,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1387,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1389,
												"nodeType": "Return",
												"src": "904:48:2"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:2",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "746:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "756:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1351,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:2"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "789:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1354,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:2"
									},
									"scope": 1413,
									"src": "729:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "1103:158:2",
										"statements": [
											{
												"id": 1410,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1401,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1228:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:2",
																		"subExpression": {
																			"id": 1405,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1242:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:2",
																	"trueExpression": {
																		"id": 1404,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1237:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1398,
														"id": 1409,
														"nodeType": "Return",
														"src": "1213:31:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:2",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1061:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:2"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1094:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:2"
									},
									"scope": 1413,
									"src": "1048:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1414,
							"src": "216:1047:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:2"
				},
				"id": 2
			},
			"contracts/GameEmporium.sol": {
				"ast": {
					"absolutePath": "contracts/GameEmporium.sol",
					"exportedSymbols": {
						"GameEmporium": [
							1617
						],
						"Math": [
							1308
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						]
					},
					"id": 1618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1618,
							"sourceUnit": 255,
							"src": "58:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GameEmporium",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1617,
							"linearizedBaseContracts": [
								1617
							],
							"name": "GameEmporium",
							"nameLocation": "120:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1418,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "202:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "187:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1417,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "187:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 1420,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "228:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "213:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1419,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "213:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "499553fb",
									"id": 1426,
									"mutability": "mutable",
									"name": "inventory",
									"nameLocation": "297:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "246:60:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(string => uint256))"
									},
									"typeName": {
										"id": 1425,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1421,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "254:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "246:43:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(string => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1424,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1422,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "273:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"nodeType": "Mapping",
											"src": "265:23:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
												"typeString": "mapping(string => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1423,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "283:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1429,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "329:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "312:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1427,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "340:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "2616add5",
									"id": 1432,
									"mutability": "constant",
									"name": "poolTablePrice",
									"nameLocation": "411:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "390:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1430,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "390:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "428:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c386f5e9",
									"id": 1435,
									"mutability": "constant",
									"name": "tableTennisPrice",
									"nameLocation": "457:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "436:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1433,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "436:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1434,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "476:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b3390911",
									"id": 1438,
									"mutability": "constant",
									"name": "foosBallTablePrice",
									"nameLocation": "504:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1617,
									"src": "483:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1436,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "483:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "525:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "697:249:3",
										"statements": [
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "707:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1442,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "715:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "719:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "715:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "707:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "707:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1449,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "756:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameEmporium_$1617",
																		"typeString": "contract GameEmporium"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameEmporium_$1617",
																		"typeString": "contract GameEmporium"
																	}
																],
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "748:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1447,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "748:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "748:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "506f6f6c205461626c65",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "763:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b4ec6f4872444143dc7adda5829700d5dce71cd1ffc8252b433c1edba8e0553",
																"typeString": "literal_string \"Pool Table\""
															},
															"value": "Pool Table"
														},
														{
															"hexValue": "3130",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "777:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_3b4ec6f4872444143dc7adda5829700d5dce71cd1ffc8252b433c1edba8e0553",
																"typeString": "literal_string \"Pool Table\""
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 1446,
														"name": "setInventory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "735:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "735:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "735:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1458,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "845:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameEmporium_$1617",
																		"typeString": "contract GameEmporium"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameEmporium_$1617",
																		"typeString": "contract GameEmporium"
																	}
																],
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "837:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1456,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "837:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "837:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5461626c652054656e6e6973205461626c65",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "852:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fc19ff28daa1c241718dfcc20649fb8ee2a034130cb9bac8c23ed2b804ebaa8",
																"typeString": "literal_string \"Table Tennis Table\""
															},
															"value": "Table Tennis Table"
														},
														{
															"hexValue": "3130",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "874:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_2fc19ff28daa1c241718dfcc20649fb8ee2a034130cb9bac8c23ed2b804ebaa8",
																"typeString": "literal_string \"Table Tennis Table\""
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 1455,
														"name": "setInventory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "824:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "824:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "824:53:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1467,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "909:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameEmporium_$1617",
																		"typeString": "contract GameEmporium"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameEmporium_$1617",
																		"typeString": "contract GameEmporium"
																	}
																],
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1465,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "901:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "466f6f732042616c6c205461626c65",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "916:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce9ae06cb5a969534cc8016279d1437449cd6220c97bd00a6d66f8582e4a139c",
																"typeString": "literal_string \"Foos Ball Table\""
															},
															"value": "Foos Ball Table"
														},
														{
															"hexValue": "3130",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "935:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_ce9ae06cb5a969534cc8016279d1437449cd6220c97bd00a6d66f8582e4a139c",
																"typeString": "literal_string \"Foos Ball Table\""
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 1464,
														"name": "setInventory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "888:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "888:50:3"
											}
										]
									},
									"id": 1474,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:2:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "697:0:3"
									},
									"scope": 1617,
									"src": "683:263:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1036:55:3",
										"statements": [
											{
												"expression": {
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1483,
																"name": "inventory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "1046:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(string memory => uint256))"
																}
															},
															"id": 1486,
															"indexExpression": {
																"id": 1484,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "1056:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1046:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 1487,
														"indexExpression": {
															"id": 1485,
															"name": "_item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "1066:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1046:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1488,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "1075:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1046:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "1046:38:3"
											}
										]
									},
									"functionSelector": "b008c7e6",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInventory",
									"nameLocation": "961:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "982:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "974:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "1006:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "992:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "992:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "1018:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1013:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1013:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:55:3"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:0:3"
									},
									"scope": 1617,
									"src": "952:139:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "1185:50:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1501,
															"name": "inventory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "1202:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(string memory => uint256))"
															}
														},
														"id": 1503,
														"indexExpression": {
															"id": 1502,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1212:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1202:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 1505,
													"indexExpression": {
														"id": 1504,
														"name": "_item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "1222:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1202:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1506,
												"nodeType": "Return",
												"src": "1195:33:3"
											}
										]
									},
									"functionSelector": "13fa9b23",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInventory",
									"nameLocation": "1106:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1127:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1119:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "1151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1137:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1137:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:39:3"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1179:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1179:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:6:3"
									},
									"scope": 1617,
									"src": "1097:138:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "1308:388:3",
										"statements": [
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1326:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "1318:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1318:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"nodeType": "VariableDeclarationStatement",
												"src": "1318:13:3"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1520,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "1359:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "506f6f6c205461626c65",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1365:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b4ec6f4872444143dc7adda5829700d5dce71cd1ffc8252b433c1edba8e0553",
																"typeString": "literal_string \"Pool Table\""
															},
															"value": "Pool Table"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_3b4ec6f4872444143dc7adda5829700d5dce71cd1ffc8252b433c1edba8e0553",
																"typeString": "literal_string \"Pool Table\""
															}
														],
														"expression": {
															"id": 1518,
															"name": "Strings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "1345:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																"typeString": "type(library Strings)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1353:5:3",
														"memberName": "equal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1345:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (string memory,string memory) pure returns (bool)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"arguments": [
															{
																"id": 1530,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "1451:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "5461626c652054656e6e6973205461626c65",
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1456:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_2fc19ff28daa1c241718dfcc20649fb8ee2a034130cb9bac8c23ed2b804ebaa8",
																	"typeString": "literal_string \"Table Tennis Table\""
																},
																"value": "Table Tennis Table"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_stringliteral_2fc19ff28daa1c241718dfcc20649fb8ee2a034130cb9bac8c23ed2b804ebaa8",
																	"typeString": "literal_string \"Table Tennis Table\""
																}
															],
															"expression": {
																"id": 1528,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "1437:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1445:5:3",
															"memberName": "equal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1437:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (string memory,string memory) pure returns (bool)"
															}
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1437:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"arguments": [
																{
																	"id": 1540,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "1552:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "466f6f732042616c6c205461626c65",
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1557:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ce9ae06cb5a969534cc8016279d1437449cd6220c97bd00a6d66f8582e4a139c",
																		"typeString": "literal_string \"Foos Ball Table\""
																	},
																	"value": "Foos Ball Table"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ce9ae06cb5a969534cc8016279d1437449cd6220c97bd00a6d66f8582e4a139c",
																		"typeString": "literal_string \"Foos Ball Table\""
																	}
																],
																"expression": {
																	"id": 1538,
																	"name": "Strings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "1538:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																		"typeString": "type(library Strings)"
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1546:5:3",
																"memberName": "equal",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 253,
																"src": "1538:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (string memory,string memory) pure returns (bool)"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1538:37:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1552,
															"nodeType": "Block",
															"src": "1634:34:3",
															"statements": [
																{
																	"expression": {
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1548,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "1648:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1656:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1648:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1551,
																	"nodeType": "ExpressionStatement",
																	"src": "1648:9:3"
																}
															]
														},
														"id": 1553,
														"nodeType": "IfStatement",
														"src": "1534:134:3",
														"trueBody": {
															"id": 1547,
															"nodeType": "Block",
															"src": "1577:51:3",
															"statements": [
																{
																	"expression": {
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1543,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "1591:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1544,
																			"name": "foosBallTablePrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "1599:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1591:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1546,
																	"nodeType": "ExpressionStatement",
																	"src": "1591:26:3"
																}
															]
														}
													},
													"id": 1554,
													"nodeType": "IfStatement",
													"src": "1433:235:3",
													"trueBody": {
														"id": 1537,
														"nodeType": "Block",
														"src": "1479:49:3",
														"statements": [
															{
																"expression": {
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1533,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "1493:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1534,
																		"name": "tableTennisPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "1501:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1493:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1536,
																"nodeType": "ExpressionStatement",
																"src": "1493:24:3"
															}
														]
													}
												},
												"id": 1555,
												"nodeType": "IfStatement",
												"src": "1341:327:3",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "1380:47:3",
													"statements": [
														{
															"expression": {
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1523,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "1394:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1524,
																	"name": "poolTablePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "1402:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1394:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1526,
															"nodeType": "ExpressionStatement",
															"src": "1394:22:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1556,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1516,
													"src": "1684:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1557,
												"nodeType": "Return",
												"src": "1677:12:3"
											}
										]
									},
									"functionSelector": "2cde4c50",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOf",
									"nameLocation": "1250:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "item",
												"nameLocation": "1275:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1261:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:20:3"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1302:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1302:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:6:3"
									},
									"scope": 1617,
									"src": "1241:455:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "1794:320:3",
										"statements": [
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1812:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "1804:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1804:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1569,
												"initialValue": {
													"arguments": [
														{
															"id": 1567,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "1831:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1566,
														"name": "getPriceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "1820:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) pure returns (uint256)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1804:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1571,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1855:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1859:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1855:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1573,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "1868:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1877:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1575,
																				"name": "DECIMALS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1429,
																				"src": "1881:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1877:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1876:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1868:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1855:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f2070757263686173652074686973206974656d",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1892:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56",
																"typeString": "literal_string \"Insufficient balance to purchase this item\""
															},
															"value": "Insufficient balance to purchase this item"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74aec5f7b4970171c28fab223bdbb49df0633f4e51a3dc1bf1db6c45466a4a56",
																"typeString": "literal_string \"Insufficient balance to purchase this item\""
															}
														],
														"id": 1570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1847:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "1847:90:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1584,
																		"name": "inventory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "1955:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(string memory => uint256))"
																		}
																	},
																	"id": 1589,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1587,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1973:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GameEmporium_$1617",
																					"typeString": "contract GameEmporium"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_GameEmporium_$1617",
																					"typeString": "contract GameEmporium"
																				}
																			],
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1965:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1965:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1965:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1955:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																		"typeString": "mapping(string memory => uint256)"
																	}
																},
																"id": 1591,
																"indexExpression": {
																	"id": 1590,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "1980:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1955:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1988:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1955:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7272792c2074686973206974656d206973206f7574206f662073746f636b",
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1991:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7",
																"typeString": "literal_string \"Sorry, this item is out of stock\""
															},
															"value": "Sorry, this item is out of stock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a2428c87d252927432132cec0260b256ad05a96e658362f383343984a784ca7",
																"typeString": "literal_string \"Sorry, this item is out of stock\""
															}
														],
														"id": 1583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1947:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1947:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "1947:79:3"
											},
											{
												"expression": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "2036:32:3",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1597,
																"name": "inventory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "2036:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(string memory => uint256))"
																}
															},
															"id": 1603,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1600,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2054:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GameEmporium_$1617",
																			"typeString": "contract GameEmporium"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GameEmporium_$1617",
																			"typeString": "contract GameEmporium"
																		}
																	],
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2046:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1598,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2046:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2046:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2036:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 1604,
														"indexExpression": {
															"id": 1602,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2061:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2036:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "2036:32:3"
											},
											{
												"expression": {
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2078:29:3",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1607,
																"name": "inventory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "2078:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(string memory => uint256))"
																}
															},
															"id": 1611,
															"indexExpression": {
																"expression": {
																	"id": 1608,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2088:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2092:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2088:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2078:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 1612,
														"indexExpression": {
															"id": 1610,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2100:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2078:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "2078:29:3"
											}
										]
									},
									"functionSelector": "59f5e0ce",
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchase",
									"nameLocation": "1750:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "item",
												"nameLocation": "1773:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1759:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1759:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:20:3"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:0:3"
									},
									"scope": 1617,
									"src": "1741:373:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1618,
							"src": "111:2005:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2085:3"
				},
				"id": 3
			}
		}
	}
}